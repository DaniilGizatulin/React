{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/login-form/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SimpleSnackbar from '../snackbar';\nimport './loginForm.sass';\nimport { loginUser } from '../../redux/user/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  show,\n  setShow,\n  Server\n}) => {\n  _s();\n\n  //useState\n  const [authorizedForm, setFormDate] = useState({\n    email: '',\n    password: ''\n  });\n  const [errorLogin, setError] = useState({\n    error: false,\n    message: ''\n  }); //useDispatch\n\n  const dispatch = useDispatch(); //useHistory\n\n  let history = useHistory(); //useSelector\n\n  const deleteUser = useSelector(state => state.userState.deleteUser);\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const loginError = ({\n    email,\n    password\n  }) => {\n    if (!email && password) {\n      setError({\n        error: true,\n        message: 'Введите email!'\n      });\n    }\n\n    if (!password && email) {\n      setError({\n        error: true,\n        message: 'Введите пароль!'\n      });\n    }\n\n    if (!email && !password) {\n      setError({\n        error: true,\n        message: 'Заполните все поля!'\n      });\n    }\n\n    if (!email || !password) {\n      setTimeout(() => setError({\n        error: false,\n        message: ''\n      }), 2000);\n    }\n  };\n\n  const customLogin = e => {\n    e.preventDefault();\n\n    if (show) {\n      dispatch(loginUser(authorizedForm, setError));\n      loginError(authorizedForm);\n      setShow(false);\n    } else {\n      dispatch(loginUser(authorizedForm, setError, nav));\n      loginError(authorizedForm);\n    }\n  };\n\n  const cancelEvent = () => {\n    if (show) {\n      setShow(false);\n    } else {\n      nav(`/list/page${1}/?limit=10&skip=${0}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-form`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-authorization ${show && 'back-shadow'}`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => customLogin(e),\n        id: \"sign\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: `form-control ${errorLogin.error && !authorizedForm.email && 'shadow-error'}`,\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\",\n            title: \"Enter your email\",\n            value: authorizedForm.email,\n            onChange: e => setFormDate({ ...authorizedForm,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `form-control ${errorLogin.error && !authorizedForm.password && 'shadow-error'}`,\n            placeholder: \"Password\",\n            title: \"Enter your password\",\n            value: authorizedForm.password,\n            onChange: e => setFormDate({ ...authorizedForm,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-group\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"forgotPass authHover\",\n              to: \"/login\",\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"signUp authHover\",\n              to: \"/signUp\",\n              children: \"sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cancel\",\n          type: \"button\",\n          onClick: () => cancelEvent(),\n          value: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          htmlFor: \"sign\",\n          type: \"submit\",\n          className: \"confirm\",\n          value: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), errorLogin.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorLogin.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleSnackbar, {\n      isSnackbar: deleteUser,\n      color: 'success',\n      message: 'Deleted successful!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"rRcVc1cLtTnpxpHTqBfx57dCOuc=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/login-form/loginForm.js"],"names":["React","useState","useHistory","Link","useDispatch","useSelector","SimpleSnackbar","loginUser","LoginForm","show","setShow","Server","authorizedForm","setFormDate","email","password","errorLogin","setError","error","message","dispatch","history","deleteUser","state","userState","nav","link","push","loginError","setTimeout","customLogin","e","preventDefault","cancelEvent","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,cAAP,MAA2B,aAA3B;AAEA,OAAO,kBAAP;AAEA,SAASC,SAAT,QAA0B,0BAA1B;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AAAA;;AAC7C;AACA,QAAM,CAACC,cAAD,EAAiBC,WAAjB,IAAgCZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAA9C;AACA,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBhB,QAAQ,CAAC;AAAEiB,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAD,CAAvC,CAH6C,CAK7C;;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B,CAN6C,CAQ7C;;AACA,MAAIiB,OAAO,GAAGnB,UAAU,EAAxB,CAT6C,CAW7C;;AACA,QAAMoB,UAAU,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,UAA1B,CAA9B;;AAEA,QAAMG,GAAG,GAAIC,IAAD,IAAU;AAClBL,IAAAA,OAAO,CAACM,IAAR,CAAaD,IAAb;AACH,GAFD;;AAIA,QAAME,UAAU,GAAG,CAAC;AAAEd,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAyB;AACxC,QAAI,CAACD,KAAD,IAAUC,QAAd,EAAwB;AACpBE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAR;AACH;;AACD,QAAI,CAACJ,QAAD,IAAaD,KAAjB,EAAwB;AACpBG,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAR;AACH;;AACD,QAAI,CAACL,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrBE,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAR;AACH;;AACD,QAAI,CAACL,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrBc,MAAAA,UAAU,CAAC,MAAMZ,QAAQ,CAAC;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,OAAD,CAAf,EAAgD,IAAhD,CAAV;AACH;AACJ,GAbD;;AAeA,QAAMW,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIvB,IAAJ,EAAU;AACNW,MAAAA,QAAQ,CAACb,SAAS,CAACK,cAAD,EAAiBK,QAAjB,CAAV,CAAR;AACAW,MAAAA,UAAU,CAAChB,cAAD,CAAV;AACAF,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAJD,MAIO;AACHU,MAAAA,QAAQ,CAACb,SAAS,CAACK,cAAD,EAAiBK,QAAjB,EAA2BQ,GAA3B,CAAV,CAAR;AACAG,MAAAA,UAAU,CAAChB,cAAD,CAAV;AACH;AACJ,GAVD;;AAYA,QAAMqB,WAAW,GAAG,MAAM;AACtB,QAAIxB,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD,MAEO;AACHe,MAAAA,GAAG,CAAE,aAAY,CAAE,mBAAkB,CAAE,EAApC,CAAH;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,uBAAsBhB,IAAI,IAAI,aAAc,EAA7D;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAGsB,CAAD,IAAOD,WAAW,CAACC,CAAD,CAAlC;AAAuC,QAAA,EAAE,EAAC,MAA1C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,SAAS,EAAG,gBAAef,UAAU,CAACE,KAAX,IAAoB,CAACN,cAAc,CAACE,KAApC,IAA6C,cAAe,EAF3F;AAGI,gCAAiB,WAHrB;AAII,YAAA,WAAW,EAAC,aAJhB;AAKI,YAAA,KAAK,EAAC,kBALV;AAMI,YAAA,KAAK,EAAEF,cAAc,CAACE,KAN1B;AAOI,YAAA,QAAQ,EAAGiB,CAAD,IAAOlB,WAAW,CAAC,EAAE,GAAGD,cAAL;AAAqBE,cAAAA,KAAK,EAAEiB,CAAC,CAACG,MAAF,CAASC;AAArC,aAAD;AAPhC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAWI;AAAO,YAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,SAAS,EAAG,gBAAenB,UAAU,CAACE,KAAX,IAAoB,CAACN,cAAc,CAACG,QAApC,IAAgD,cAAe,EAF9F;AAGI,YAAA,WAAW,EAAC,UAHhB;AAII,YAAA,KAAK,EAAC,qBAJV;AAKI,YAAA,KAAK,EAAEH,cAAc,CAACG,QAL1B;AAMI,YAAA,QAAQ,EAAGgB,CAAD,IAAOlB,WAAW,CAAC,EAAE,GAAGD,cAAL;AAAqBG,cAAAA,QAAQ,EAAEgB,CAAC,CAACG,MAAF,CAASC;AAAxC,aAAD;AANhC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAUI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,sBAAhB;AAAuC,cAAA,EAAE,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAmC,cAAA,EAAE,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAeI;AAAO,YAAA,SAAS,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eA+BI;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAE,MAAMF,WAAW,EAAlE;AAAsE,UAAA,KAAK,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAoC,UAAA,SAAS,EAAC,SAA9C;AAAwD,UAAA,KAAK,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAhCJ,EAiCKjB,UAAU,CAACE,KAAX,iBAAoB;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,oBAAsBF,UAAU,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAjCzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAsCI,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEG,UAA5B;AAAwC,MAAA,KAAK,EAAE,SAA/C;AAA0D,MAAA,OAAO,EAAE;AAAnE;AAAA;AAAA;AAAA;AAAA,YAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0CH,CA/FD;;GAAMd,S;UAMeJ,W,EAGHF,U,EAGKG,W;;;KAZjBG,S;AAkGN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SimpleSnackbar from '../snackbar';\n\nimport './loginForm.sass';\n\nimport { loginUser } from '../../redux/user/actions'\n\n\nconst LoginForm = ({ show, setShow, Server }) => {\n    //useState\n    const [authorizedForm, setFormDate] = useState({ email: '', password: '' })\n    const [errorLogin, setError] = useState({ error: false, message: '' })\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useHistory\n    let history = useHistory();\n\n    //useSelector\n    const deleteUser = useSelector(state => state.userState.deleteUser)\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    const loginError = ({ email, password }) => {\n        if (!email && password) {\n            setError({ error: true, message: 'Введите email!' })\n        }\n        if (!password && email) {\n            setError({ error: true, message: 'Введите пароль!' })\n        }\n        if (!email && !password) {\n            setError({ error: true, message: 'Заполните все поля!' })\n        }\n        if (!email || !password) {\n            setTimeout(() => setError({ error: false, message: '' }), 2000)\n        }\n    }\n\n    const customLogin = (e) => {\n        e.preventDefault()\n        if (show) {\n            dispatch(loginUser(authorizedForm, setError))\n            loginError(authorizedForm)\n            setShow(false)\n        } else {\n            dispatch(loginUser(authorizedForm, setError, nav))\n            loginError(authorizedForm)\n        }\n    }\n\n    const cancelEvent = () => {\n        if (show) {\n            setShow(false)\n        } else {\n            nav(`/list/page${1}/?limit=10&skip=${0}`)\n        }\n    }\n\n    return (\n        <div className={`login-form`} >\n            <div className={`modal-authorization ${show && 'back-shadow'}`}>\n                <form onSubmit={(e) => customLogin(e)} id='sign'>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input\n                            type=\"email\"\n                            className={`form-control ${errorLogin.error && !authorizedForm.email && 'shadow-error'}`}\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            title='Enter your email'\n                            value={authorizedForm.email}\n                            onChange={(e) => setFormDate({ ...authorizedForm, email: e.target.value })}\n                        />\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${errorLogin.error && !authorizedForm.password && 'shadow-error'}`}\n                            placeholder=\"Password\"\n                            title='Enter your password'\n                            value={authorizedForm.password}\n                            onChange={(e) => setFormDate({ ...authorizedForm, password: e.target.value })}\n                        />\n                        <div className=\"auth-group\">\n                            <Link className=\"forgotPass authHover\" to='/login' >Forgot password</Link>\n                            <Link className=\"signUp authHover\" to='/signUp'>sign up</Link>\n                        </div>\n\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <input className=\"cancel\" type='button' onClick={() => cancelEvent()} value='Сancel' />\n                    <input htmlFor='sign' type=\"submit\" className=\"confirm\" value=\"Sign In\" />\n                    {errorLogin.error && <p className='error'>{errorLogin.message}</p>}\n                </form>\n            </div>\n            <SimpleSnackbar isSnackbar={deleteUser} color={'success'} message={'Deleted successful!'} />\n        </div >\n    )\n}\n\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}