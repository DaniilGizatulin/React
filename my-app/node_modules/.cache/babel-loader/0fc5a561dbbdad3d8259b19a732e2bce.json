{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport { loaded, fault } from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport './registrationForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = ({\n  Server\n}) => {\n  _s();\n\n  //useSelector\n  const loading = useSelector(state => state.loading);\n  const error = useSelector(state => state.error); //useDispatch\n\n  const dispatch = useDispatch(); //useState\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); //useHistory\n\n  let history = useHistory();\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const registerUser = () => {\n    Server.createNewUser(email, password, name).then(resp => {\n      if (resp.statusText === \"OK\") {\n        dispatch(loaded());\n        nav(\"/login\");\n      }\n    }).catch(error => {\n      dispatch(fault());\n    });\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-registration\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"What is your name ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: [\"Password must be at least 5 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 105\n            }, this), \" We will never share your password with anyone.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cancel\",\n          onClick: () => nav(`/list/${0}`),\n          children: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"confirm\",\n          onClick: registerUser,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"nMxTPaRP2BhHsdYOlYDXXHvMPes=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = RegistrationForm;\nexport default WithServer()(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js"],"names":["React","useState","useDispatch","useSelector","useHistory","WithServer","loaded","fault","Spinner","Error","RegistrationForm","Server","loading","state","error","dispatch","name","setName","email","setEmail","password","setPassword","history","nav","link","push","registerUser","createNewUser","then","resp","statusText","catch","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport { loaded, fault } from '../../actions'\nimport Spinner from '../spinner'\nimport Error from '../error';\n\nimport './registrationForm.css';\n\nconst RegistrationForm = ({ Server }) => {\n    //useSelector\n    const loading = useSelector(state => state.loading)\n    const error = useSelector(state => state.error)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useState\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    //useHistory\n    let history = useHistory();\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    const registerUser = () => {\n        Server.createNewUser(email, password, name)\n            .then(resp => {\n                if (resp.statusText === \"OK\") {\n                    dispatch(loaded())\n                    nav(\"/login\")\n                }\n            })\n            .catch(error => {\n                dispatch(fault())\n            })\n    }\n\n    if (error) {\n        return <Error />\n    }\n\n    if (loading) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"registration-form\">\n            <div className=\"modal-registration\">\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input\n                            type=\"name\"\n                            className=\"form-control\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)} />\n                        <small className=\"form-text text-muted\">What is your name ?</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)} />\n                        <small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                        <small className=\"form-text text-muted\">Password must be at least 5 characters. <br /> We will\n                 never share your password with anyone.</small>\n                    </div>\n                    <button type=\"submit\" className=\"cancel\" onClick={() => nav(`/list/${0}`)}>Сancel</button>\n                    <button type=\"submit\" className=\"confirm\" onClick={registerUser}>Sign Up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default WithServer()(RegistrationForm);"]},"metadata":{},"sourceType":"module"}