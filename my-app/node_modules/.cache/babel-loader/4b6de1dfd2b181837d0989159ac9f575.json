{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPosts = ({\n  Server\n}) => {\n  _s();\n\n  const loading = useSelector(state => state.loading);\n  const allPosts = useSelector(state => state.allPosts);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n\n  const goToUserPost = async idPost => {\n    history.push(`/post/${idPost}`);\n  };\n\n  let idx = 0; // eslint-disable-next-line array-callback-return\n\n  const postList = allPosts.map((postItem, i) => {\n    idx++;\n\n    if (postItem.postedBy === id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: postItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"full-text\",\n              children: postItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"full-post\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text\",\n                children: \"View full post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => goToUserPost(postItem._id),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-arrow-circle-right fa-2x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: !loading ? postList : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserPosts, \"hSJxvB6IBVTmm7O0DeAjP/1Irw4=\", false, function () {\n  return [useSelector, useSelector, useHistory, useParams];\n});\n\n_c = UserPosts;\nexport default WithServer()(UserPosts);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js"],"names":["React","useSelector","useHistory","useParams","WithServer","Spinner","UserPosts","Server","loading","state","allPosts","history","id","goToUserPost","idPost","push","idx","postList","map","postItem","i","postedBy","title","description","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC9B,QAAMC,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,QAAQ,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AAEA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAST,SAAS,EAAxB;;AAEA,QAAMU,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnCH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,MAAO,EAA7B;AACH,GAFD;;AAIA,MAAIE,GAAG,GAAG,CAAV,CAZ8B,CAc9B;;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACQ,GAAT,CAAa,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC3CJ,IAAAA,GAAG;;AAEH,QAAIG,QAAQ,CAACE,QAAT,KAAsBT,EAA1B,EAA8B;AAC1B,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,OAAb;AAAA,wBAAsBO,QAAQ,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,wBAA2BH,QAAQ,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,SAAS,EAAC,QADd;AAEI,gBAAA,OAAO,EAAE,MAAMV,YAAY,CAACM,QAAQ,CAACK,GAAV,CAF/B;AAAA,uCAGI;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAA2BR,GAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAmBH;AACJ,GAxBgB,CAAjB;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEQ,CAACR,OAAD,GACMS,QADN,gBAEM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlDD;;GAAMX,S;UACcL,W,EACCA,W,EAEDC,U,EAEDC,S;;;KANbG,S;AAoDN,eAAeF,UAAU,GAAGE,SAAH,CAAzB","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\n\n\nconst UserPosts = ({ Server }) => {\n    const loading = useSelector(state => state.loading)\n    const allPosts = useSelector(state => state.allPosts)\n\n    const history = useHistory()\n\n    const { id } = useParams()\n\n    const goToUserPost = async (idPost) => {\n        history.push(`/post/${idPost}`)\n    }\n\n    let idx = 0;\n\n    // eslint-disable-next-line array-callback-return\n    const postList = allPosts.map((postItem, i) => {\n        idx++\n\n        if (postItem.postedBy === id) {\n            return (\n                <div className=\"post\" key={idx}>\n                    <div className=\"post-list-item\" >\n                        <div className=\"cards\">\n                            <p className=\"title\">{postItem.title}</p>\n                            <ul className=\"full-text\">{postItem.description}</ul>\n                            <div className=\"full-post\">\n                                <p className='text'>View full post</p>\n                                <button\n                                    className='delete'\n                                    onClick={() => goToUserPost(postItem._id)}>\n                                    <i className=\"fa fa-arrow-circle-right fa-2x\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        }\n    })\n\n    return (\n        <div className=\"post-list\">\n            {\n                !loading\n                    ? postList\n                    : <Spinner />\n            }\n        </div>\n    )\n}\n\nexport default WithServer()(UserPosts);"]},"metadata":{},"sourceType":"module"}