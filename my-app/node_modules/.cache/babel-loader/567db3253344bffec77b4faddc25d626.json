{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/registration-form/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, addToken } from '../../actions';\nimport './loginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  Server\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let history = useHistory();\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const customLogin = () => {\n    Server.loginUser(email, password).then(res => {\n      //if (res.statusText === \"OK\") {\n      nav(\"/list\"); //}\n\n      localStorage.setItem('token', res.data.token); //Server.authorizationUser(res.data.token)\n      //    .then(resp => {\n      //        //user = resp.data\n      //        dispatch(addUser(resp.data))\n      //    })\n\n      dispatch(addToken(res.data.token));\n\n      if (localStorage.getItem('token')) {\n        Server.authorizationUser(localStorage.getItem('token')).then(res => {\n          dispatch(addUser(res.data)); //let saveUser = JSON.stringify(res.data)\n          //localStorage.setItem('saveUser', saveUser)\n          //console.log(JSON.parse(localStorage.getItem('saveUser')))\n        });\n      }\n    });\n  };\n\n  const token = localStorage.getItem('token');\n  window.addEventListener('load', () => {\n    if (token) {\n      console.log('token here');\n    } else {\n      console.log('its not here');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-authorization\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\",\n            title: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            title: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"forgotPass authHover\",\n              onClick: e => e.preventDefault(),\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"signUp authHover\",\n              onClick: () => nav(\"/signUp\"),\n              children: \"sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-primary cancel\",\n          onClick: () => nav(\"/\"),\n          children: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary confirm\",\n          onClick: customLogin,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"+3tWaKUUzl6j80+JkRb7GnOKxek=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = LoginForm;\nexport default WithServer()(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/registration-form/loginForm.js"],"names":["React","useEffect","useState","useHistory","useDispatch","WithServer","addUser","addToken","LoginForm","Server","dispatch","email","setEmail","password","setPassword","history","nav","link","push","customLogin","loginUser","then","res","localStorage","setItem","data","token","getItem","authorizationUser","window","addEventListener","console","log","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, addToken } from '../../actions';\n\nimport './loginForm.css';\n\nconst LoginForm = ({ Server }) => {\n\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    let history = useHistory();\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    const customLogin = () => {\n        Server.loginUser(email, password)\n            .then(res => {\n                //if (res.statusText === \"OK\") {\n                nav(\"/list\")\n                //}\n                localStorage.setItem('token', res.data.token)\n                //Server.authorizationUser(res.data.token)\n                //    .then(resp => {\n                //        //user = resp.data\n                //        dispatch(addUser(resp.data))\n                //    })\n                dispatch(addToken(res.data.token))\n                if (localStorage.getItem('token')) {\n                    Server.authorizationUser(localStorage.getItem('token'))\n                        .then(res => {\n                            dispatch(addUser(res.data))\n                            //let saveUser = JSON.stringify(res.data)\n                            //localStorage.setItem('saveUser', saveUser)\n                            //console.log(JSON.parse(localStorage.getItem('saveUser')))\n                        })\n                }\n            })\n\n    }\n\n    const token = localStorage.getItem('token')\n    window.addEventListener('load', () => {\n        if (token) {\n            console.log('token here')\n        } else {\n            console.log('its not here')\n        }\n    })\n\n\n\n\n\n    return (\n        <div className=\"post-list\">\n            <div className=\"modal-authorization\">\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            title='Enter your email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)} />\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            title='Enter your password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                        <div className=\"auth-group\">\n                            <button className=\"forgotPass authHover\" onClick={(e) => e.preventDefault()}>Forgot password</button>\n                            <button className=\"signUp authHover\" onClick={() => nav(\"/signUp\")}>sign up</button>\n                        </div>\n\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-outline-primary cancel\" onClick={() => nav(\"/\")}>Сancel</button>\n                    <button type=\"submit\" className=\"btn btn-primary confirm\" onClick={customLogin}>Sign in</button>\n                </form>\n            </div>\n        </div >\n    )\n}\n\n\nexport default WithServer()(LoginForm);\n"]},"metadata":{},"sourceType":"module"}