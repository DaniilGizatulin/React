{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/editor-posts/editor-posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { loaded, remove } from '../../actions';\nimport WithServer from '../hoc';\nimport ModalConfirm from '../modalConfirm';\nimport Spinner from '../spinner';\nimport './editor-posts.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorPosts = ({\n  Server\n}) => {\n  _s();\n\n  // Modal \n  const [show, setShow] = useState(false);\n\n  const closeDeleteModal = () => setShow(false);\n\n  const openDeleteModal = () => setShow(true); //useSelector\n\n\n  const loading = useSelector(state => state.loading); //useParams\n\n  const {\n    id\n  } = useParams(); //useDispatch\n\n  const dispatch = useDispatch(); //useHistory\n\n  const history = useHistory(); //useState\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [fullText, setFullText] = useState('');\n  const [message, setMessage] = useState('');\n  const [post, setPost] = useState(null); //ref\n\n  const refTitle = useRef();\n  const refDescription = useRef();\n  const refFullText = useRef();\n  const refImagePost = useRef();\n  const refMessage = useRef(); // token \n\n  const token = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  const changeField = ref => {\n    ref.current.focus();\n  };\n\n  const messageResponse = (ref, message, color) => {\n    ref.current.classList.add(color);\n    setMessage(message);\n    setTimeout(() => setMessage(''), 1500);\n  };\n\n  const changePost = (id, token, title, description, fullText) => {\n    Server.updatePost(id, token, title, description, fullText).then(res => {\n      console.log(res);\n      messageResponse(refMessage, 'Sucсess', 'green');\n      setTimeout(() => history.push(`/user-posts/${user._id}`), 1500);\n    }).catch(e => messageResponse(refMessage, 'Something went wrong', 'red'));\n  };\n\n  const changePostImage = e => {\n    let formData = new FormData();\n    formData.append('image', e.target.files[0]);\n    Server.updatePostImage(id, token, formData).then(res => {\n      messageResponse(refMessage, 'Sucсess', 'green');\n      Server.getPost(id).then(res => Server.getImage(refImagePost, res.data.image));\n    }).catch(e => messageResponse(refMessage, 'Something went wrong', 'red'));\n  };\n\n  const delPost = () => {\n    Server.deletePost(id, token).then(res => {\n      closeDeleteModal();\n      dispatch(remove(true));\n      setTimeout(() => {\n        history.push(`/list/${0}`);\n        dispatch(remove(false));\n      }, 500);\n    }); //.catch(e => dispatch(remove(false)))\n  };\n\n  useEffect(() => {\n    Server.getPost(id).then(res => {\n      dispatch(loaded());\n      setPost(res.data);\n      Server.getImage(refImagePost, res.data.image, '', res.data.description);\n    }).catch(res => setPost(null));\n  }, [Server, dispatch, id]);\n\n  if (loading || !post) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(ModalConfirm, {\n      show: show,\n      handleClose: closeDeleteModal,\n      remove: delPost,\n      label: 'Are you sure you want to delete this post?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-item-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"menu-post delete\",\n              onClick: () => openDeleteModal(),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash-o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-post\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"editor-header-post\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-edit-post\",\n                  onClick: () => changeField(refTitle),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  title: \"Title your post\",\n                  className: \"title editor-title\",\n                  placeholder: post.title,\n                  ref: refTitle,\n                  value: title,\n                  onFocus: e => setTitle(post.title),\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"editor-description\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-edit-post\",\n                  onClick: () => changeField(refDescription),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  title: \"Description your post\",\n                  type: \"text\",\n                  className: \" editor-description\",\n                  placeholder: post.description,\n                  ref: refDescription,\n                  value: description,\n                  onFocus: e => setDescription(post.description),\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"editor-image\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"\",\n                  alt: \"post_image\",\n                  className: \"post-image\",\n                  ref: refImagePost\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  className: \"inp-upload\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-camera\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/png, image/jpg\",\n                    id: \"file-upload\",\n                    onChange: e => changePostImage(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"editor-full-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-edit-post\",\n                  onClick: () => changeField(refFullText),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  title: \"Full text your post\",\n                  className: \"form-control editor-full-text\",\n                  rows: \"2\",\n                  placeholder: post.fullText,\n                  ref: refFullText,\n                  value: fullText,\n                  onFocus: e => setFullText(post.fullText),\n                  onChange: e => setFullText(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message\",\n                ref: refMessage,\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save\",\n                onClick: () => changePost(id, token, title, description, fullText),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorPosts, \"luy8DsiCs9kuhnlFU0s7LsdR0k0=\", false, function () {\n  return [useSelector, useParams, useDispatch, useHistory];\n});\n\n_c = EditorPosts;\nexport default WithServer()(EditorPosts);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPosts\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/editor-posts/editor-posts.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","useParams","loaded","remove","WithServer","ModalConfirm","Spinner","EditorPosts","Server","show","setShow","closeDeleteModal","openDeleteModal","loading","state","id","dispatch","history","title","setTitle","description","setDescription","fullText","setFullText","message","setMessage","post","setPost","refTitle","refDescription","refFullText","refImagePost","refMessage","token","localStorage","getItem","user","JSON","parse","changeField","ref","current","focus","messageResponse","color","classList","add","setTimeout","changePost","updatePost","then","res","console","log","push","_id","catch","e","changePostImage","formData","FormData","append","target","files","updatePostImage","getPost","getImage","data","image","delPost","deletePost","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { loaded, remove } from '../../actions';\nimport WithServer from '../hoc';\nimport ModalConfirm from '../modalConfirm';\n\nimport Spinner from '../spinner';\nimport './editor-posts.sass';\n\nconst EditorPosts = ({ Server }) => {\n    // Modal \n    const [show, setShow] = useState(false)\n    const closeDeleteModal = () => setShow(false)\n    const openDeleteModal = () => setShow(true)\n\n    //useSelector\n    const loading = useSelector(state => state.loading)\n\n    //useParams\n    const { id } = useParams()\n\n    //useDispatch\n    const dispatch = useDispatch();\n\n    //useHistory\n    const history = useHistory()\n\n    //useState\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [fullText, setFullText] = useState('')\n    const [message, setMessage] = useState('')\n    const [post, setPost] = useState(null)\n\n    //ref\n    const refTitle = useRef()\n    const refDescription = useRef()\n    const refFullText = useRef()\n    const refImagePost = useRef()\n    const refMessage = useRef()\n\n    // token \n    const token = localStorage.getItem('token')\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    const changeField = (ref) => {\n        ref.current.focus()\n    }\n\n    const messageResponse = (ref, message, color) => {\n        ref.current.classList.add(color)\n        setMessage(message)\n        setTimeout(() => setMessage(''), 1500)\n    }\n\n    const changePost = (id, token, title, description, fullText) => {\n        Server.updatePost(id, token, title, description, fullText)\n            .then(res => {\n                console.log(res)\n                messageResponse(refMessage, 'Sucсess', 'green')\n                setTimeout(() => history.push(`/user-posts/${user._id}`), 1500)\n            })\n            .catch(e => messageResponse(refMessage, 'Something went wrong', 'red'))\n    }\n\n    const changePostImage = (e) => {\n        let formData = new FormData()\n        formData.append('image', e.target.files[0])\n        Server.updatePostImage(id, token, formData)\n            .then(res => {\n                messageResponse(refMessage, 'Sucсess', 'green')\n                Server.getPost(id)\n                    .then(res => Server.getImage(refImagePost, res.data.image))\n            })\n            .catch(e => messageResponse(refMessage, 'Something went wrong', 'red'))\n    }\n\n    const delPost = () => {\n        Server.deletePost(id, token)\n            .then(res => {\n                closeDeleteModal()\n                dispatch(remove(true))\n                setTimeout(() => {\n                    history.push(`/list/${0}`)\n                    dispatch(remove(false))\n                }, 500)\n            })\n        //.catch(e => dispatch(remove(false)))\n    }\n\n    useEffect(() => {\n        Server.getPost(id)\n            .then(res => {\n                dispatch(loaded())\n                setPost(res.data)\n                Server.getImage(refImagePost, res.data.image, '', res.data.description)\n            })\n            .catch(res => setPost(null))\n    }, [Server, dispatch, id])\n\n    if (loading || !post) {\n        return <Spinner />\n    }\n    return (\n        <div className='editor' >\n            <ModalConfirm\n                show={show}\n                handleClose={closeDeleteModal}\n                remove={delPost}\n                label={'Are you sure you want to delete this post?'}\n            />\n            <div className='editor-body'>\n\n                <div className=\"item\">\n                    <div className=\"item-post\">\n                        <div className=\"post-item-list\">\n                            <button\n                                className='menu-post delete'\n                                onClick={() => openDeleteModal()}\n                            ><i className=\"fa fa-trash-o\"></i></button>\n                            <div className=\"info-post\">\n                                <div className='editor-header-post'>\n                                    <button className='btn-edit-post' onClick={() => changeField(refTitle)}>\n                                        <i className=\"fa fa-edit\"></i>\n                                    </button>\n                                    <input type=\"text\"\n                                        title='Title your post'\n                                        className=\"title editor-title\"\n                                        placeholder={post.title}\n                                        ref={refTitle}\n                                        value={title}\n                                        onFocus={(e) => setTitle(post.title)}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    />\n                                </div>\n                                <div className='editor-description'>\n                                    <button className='btn-edit-post' onClick={() => changeField(refDescription)}>\n                                        <i className=\"fa fa-edit\"></i>\n                                    </button>\n                                    <input\n                                        title='Description your post'\n                                        type=\"text\"\n                                        className=\" editor-description\"\n                                        placeholder={post.description}\n                                        ref={refDescription}\n                                        value={description}\n                                        onFocus={(e) => setDescription(post.description)}\n                                        onChange={(e) => setDescription(e.target.value)}\n                                    />\n                                </div>\n                                <div className='editor-image'>\n                                    <img src='' alt='post_image' className=\"post-image\" ref={refImagePost} />\n                                    <label htmlFor='file-upload' className='inp-upload' >\n                                        <i className=\"fa fa-camera\"></i>\n                                        <input\n                                            type='file'\n                                            accept=\"image/png, image/jpg\"\n                                            id=\"file-upload\"\n                                            onChange={(e) => changePostImage(e)}\n                                        />\n                                    </label>\n                                </div>\n                                <div className='editor-full-text'>\n                                    <button className='btn-edit-post' onClick={() => changeField(refFullText)}>\n                                        <i className=\"fa fa-edit\"></i>\n                                    </button>\n                                    <textarea\n                                        title='Full text your post'\n                                        className=\"form-control editor-full-text\"\n                                        rows=\"2\"\n                                        placeholder={post.fullText}\n                                        ref={refFullText}\n                                        value={fullText}\n                                        onFocus={(e) => setFullText(post.fullText)}\n                                        onChange={(e) => setFullText(e.target.value)}\n                                    >\n                                    </textarea>\n\n                                </div>\n                                <p className='message' ref={refMessage}>{message}</p>\n                                <button className='save' onClick={() => changePost(id, token, title, description, fullText)}>Save</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default WithServer()(EditorPosts);"]},"metadata":{},"sourceType":"module"}