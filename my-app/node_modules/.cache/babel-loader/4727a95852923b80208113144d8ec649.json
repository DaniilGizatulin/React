{"ast":null,"code":"import axios from 'axios';\nimport { POSTS, LOADED, ERROR, DELETED, POST } from './types';\nimport { getUsers } from '../../api';\n\nconst setPosts = posts => {\n  return dispatch => dispatch({\n    type: POSTS,\n    payload: posts\n  });\n};\n\nconst getPosts = (skip = 0, limit = 10) => {\n  return dispatch => axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts?limit=${limit}&skip=${skip}`).then(res => {\n    dispatch({\n      type: POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: LOADED\n    });\n  }).catch(e => dispatch({\n    type: ERROR\n  }));\n};\n\nconst loaded = () => {\n  return dispatch => dispatch({\n    type: LOADED\n  });\n};\n\nconst fault = () => {\n  return dispatch => dispatch({\n    type: ERROR\n  });\n};\n\nconst deletePost = (id, token, history) => {\n  return dispatch => axios.delete(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts/${id}`, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    dispatch({\n      type: DELETED,\n      payload: true\n    });\n    setTimeout(() => {\n      history.push(`/list/page${1}/?limit=10&skip=${0}`);\n      dispatch({\n        type: DELETED,\n        payload: false\n      });\n    }, 500);\n  });\n};\n\nconst getPost = id => {\n  return dispatch => axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts/${id}`).then(res => {\n    dispatch({\n      type: POST,\n      payload: res.data\n    });\n    dispatch({\n      type: LOADED\n    });\n  }).catch(e => dispatch({\n    type: ERROR\n  }));\n};\n\nconst getAllUsers = () => {\n  getUsers().then(res => console.log(res));\n};\n\nexport { getPosts, setPosts, loaded, fault, deletePost, getPost, getAllUsers };","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/redux/posts/actions.js"],"names":["axios","POSTS","LOADED","ERROR","DELETED","POST","getUsers","setPosts","posts","dispatch","type","payload","getPosts","skip","limit","get","then","res","data","catch","e","loaded","fault","deletePost","id","token","history","delete","headers","setTimeout","push","getPost","getAllUsers","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { POSTS, LOADED, ERROR, DELETED, POST } from './types'\n\nimport { getUsers } from '../../api';\n\nconst setPosts = (posts) => {\n    return (dispatch) =>\n        dispatch({ type: POSTS, payload: posts })\n}\n\nconst getPosts = (skip = 0, limit = 10) => {\n    return (dispatch) =>\n        axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts?limit=${limit}&skip=${skip}`)\n            .then(res => {\n                dispatch({ type: POSTS, payload: res.data })\n                dispatch({ type: LOADED })\n            })\n            .catch(e => dispatch({ type: ERROR }))\n\n}\n\n\nconst loaded = () => {\n    return (dispatch) =>\n        dispatch({ type: LOADED })\n}\n\nconst fault = () => {\n    return (dispatch) =>\n        dispatch({ type: ERROR })\n}\n\nconst deletePost = (id, token, history) => {\n    return (dispatch) =>\n        axios.delete(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts/${id}`, { headers: { \"Authorization\": `Bearer ${token}` } })\n            .then(res => {\n                dispatch({ type: DELETED, payload: true })\n                setTimeout(() => {\n                    history.push(`/list/page${1}/?limit=10&skip=${0}`)\n                    dispatch({ type: DELETED, payload: false })\n                }, 500)\n            })\n\n}\n\nconst getPost = (id) => {\n    return (dispatch) =>\n        axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts/${id}`)\n            .then(res => {\n                dispatch({ type: POST, payload: res.data })\n                dispatch({ type: LOADED })\n            })\n            .catch(e => dispatch({ type: ERROR }))\n}\n\nconst getAllUsers = () => {\n    getUsers()\n        .then(res => console.log(res))\n\n}\n\nexport { getPosts, setPosts, loaded, fault, deletePost, getPost, getAllUsers }"]},"metadata":{},"sourceType":"module"}