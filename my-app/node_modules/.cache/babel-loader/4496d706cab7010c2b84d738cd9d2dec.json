{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list-item/post-list-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { posts, loaded } from '../../actions';\nimport Spinner from '../spinner';\nimport SimpleSnackbar from '../snackbar';\nimport './post-list-item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostListItem = ({\n  Server\n}) => {\n  _s();\n\n  const allPosts = useSelector(state => state.allPosts);\n  const loading = useSelector(state => state.loading);\n  const isSnackbar = useSelector(state => state.isSnackbar);\n  const dispatch = useDispatch();\n  const [btnNav, setBtnNav] = useState([]);\n  const {\n    skip\n  } = useParams();\n  let history = useHistory();\n\n  const navHistory = url => {\n    history.push(url);\n  };\n\n  useEffect(() => {\n    Server.getAllPosts(skip).then(res => {\n      dispatch(posts(res.data));\n      dispatch(loaded());\n    }).catch(er => console.log(er));\n  }, [Server, dispatch, skip]);\n\n  const goToUserPost = idPost => {\n    navHistory(`/post/${idPost}`);\n  };\n\n  let idx = 0;\n  let num = 0; //??????????????????????????????????????????\n\n  useEffect(() => {\n    Server.getAllPosts(0, 0).then(res => {\n      //let lengthPost = res.data.length\n      //setBtnNav(res.data)\n      setBtnNav(res.data.filter((item, i) => res.data[i / 5])); //console.log(Math.ceil(lengthPost / 5))\n    });\n  }, [Server, btnNav]);\n\n  const test = () => {\n    //const newBtnNav = btnNav.filter((item, i) => btnNav[i / 5])\n    //newBtnNav.map(item => console.log(1))\n    console.log(btnNav);\n  }; //???????????????????????????????????????????????????????\n\n\n  const postList = allPosts.map((postItem, i) => {\n    idx++;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      onClick: () => test(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: postItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: postItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"full-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: \"View full post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => goToUserPost(postItem._id),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-circle-right fa-2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${0}`),\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${5}`),\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${10}`),\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${15}`),\n        children: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${20}`),\n        children: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${25}`),\n        children: \"6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${30}`),\n        children: \"7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${35}`),\n        children: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${40}`),\n        children: \"9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-nav-posts\",\n        onClick: () => navHistory(`/list/${45}`),\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list\",\n      children: !loading ? postList : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-posts\",\n      children: btnNav.map((item, i) => {\n        let skips = num + 5;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-nav-posts\",\n          onClick: () => navHistory(`/list/${i + 5}`),\n          children: i + 1\n        }, idx++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleSnackbar, {\n      isSnackbar: isSnackbar,\n      color: \"success\",\n      message: 'Deleted successful!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PostListItem, \"0WY/SZ2n99GrnU2KEZkLzk6+5Kw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useParams, useHistory];\n});\n\n_c = PostListItem;\nexport default WithServer()(PostListItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListItem\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list-item/post-list-item.js"],"names":["React","useEffect","useState","useSelector","useDispatch","WithServer","useHistory","useParams","posts","loaded","Spinner","SimpleSnackbar","PostListItem","Server","allPosts","state","loading","isSnackbar","dispatch","btnNav","setBtnNav","skip","history","navHistory","url","push","getAllPosts","then","res","data","catch","er","console","log","goToUserPost","idPost","idx","num","filter","item","i","test","postList","map","postItem","title","description","_id","skips"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { posts, loaded } from '../../actions';\nimport Spinner from '../spinner';\nimport SimpleSnackbar from '../snackbar';\n\nimport './post-list-item.css';\n\n\nconst PostListItem = ({ Server }) => {\n\n    const allPosts = useSelector(state => state.allPosts)\n    const loading = useSelector(state => state.loading)\n    const isSnackbar = useSelector(state => state.isSnackbar)\n    const dispatch = useDispatch()\n\n    const [btnNav, setBtnNav] = useState([]);\n\n    const { skip } = useParams();\n\n    let history = useHistory();\n\n    const navHistory = (url) => {\n        history.push(url)\n    }\n\n    useEffect(() => {\n        Server.getAllPosts(skip)\n            .then(res => {\n                dispatch(posts(res.data))\n                dispatch(loaded())\n            })\n            .catch(er => console.log(er))\n    }, [Server, dispatch, skip])\n\n    const goToUserPost = (idPost) => {\n        navHistory(`/post/${idPost}`)\n    }\n\n    let idx = 0;\n    let num = 0;\n    //??????????????????????????????????????????\n    useEffect(() => {\n        Server.getAllPosts(0, 0)\n            .then(res => {\n                //let lengthPost = res.data.length\n                //setBtnNav(res.data)\n                setBtnNav(res.data.filter((item, i) => res.data[i / 5]))\n                //console.log(Math.ceil(lengthPost / 5))\n            })\n    }, [Server, btnNav])\n\n    const test = () => {\n        //const newBtnNav = btnNav.filter((item, i) => btnNav[i / 5])\n        //newBtnNav.map(item => console.log(1))\n        console.log(btnNav)\n    }\n    //???????????????????????????????????????????????????????\n    const postList = allPosts.map((postItem, i) => {\n        idx++\n\n        return (\n            <div className=\"post\" key={idx} onClick={() => test()}>\n                <div className=\"post-list-item\" >\n                    <div className=\"cards\">\n                        <p className=\"title\">{postItem.title}</p>\n                        <ul className=\"full-text\">{postItem.description}</ul>\n                        <div className=\"full-post\">\n                            <p className='text'>View full post</p>\n                            <button\n                                className='delete'\n                                onClick={() => goToUserPost(postItem._id)}>\n                                <i className=\"fa fa-arrow-circle-right fa-2x\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    })\n\n\n    return (\n        <>\n            <div className='nav-posts'>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${0}`)}>1</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${5}`)}>2</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${10}`)}>3</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${15}`)}>4</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${20}`)}>5</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${25}`)}>6</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${30}`)}>7</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${35}`)}>8</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${40}`)}>9</button>\n                <button className='btn-nav-posts' onClick={() => navHistory(`/list/${45}`)}>10</button>\n            </div>\n            <div className=\"post-list\">\n                {\n                    !loading\n                        ? postList\n                        : <Spinner />\n                }\n            </div>\n            <div className='nav-posts'>\n                {/*<button className='btn-nav-posts' onClick={() => navHistory(`/list/${0}`)}>1</button>*/}\n                {btnNav.map((item, i) => {\n                    let skips = num + 5;\n                    return <button key={idx++} className='btn-nav-posts' onClick={() => navHistory(`/list/${i + 5}`)}>{i + 1}</button>\n                })}\n            </div>\n            <SimpleSnackbar isSnackbar={isSnackbar} color={\"success\"} message={'Deleted successful!'} />\n        </>\n    )\n}\n\n\nexport default WithServer()(PostListItem);\n\n"]},"metadata":{},"sourceType":"module"}