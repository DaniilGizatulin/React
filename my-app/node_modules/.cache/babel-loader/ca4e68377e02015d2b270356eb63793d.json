{"ast":null,"code":"import { POSTS, LOADED, ERROR, DELETED } from './types';\nconst initialState = {\n  postOnPage: [],\n  loading: true,\n  error: false,\n  isSnackbar: false\n};\n\nfunction postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case POSTS:\n      if (state.postOnPage === []) {\n        return { ...state\n        };\n      }\n\n      return { ...state,\n        postOnPage: action.payload\n      };\n\n    case LOADED:\n      return { ...state,\n        loading: false\n      };\n\n    case ERROR:\n      return { ...state,\n        error: true\n      };\n\n    case DELETED:\n      return { ...state,\n        isSnackbar: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default postsReducer;","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/redux/posts/reducer.js"],"names":["POSTS","LOADED","ERROR","DELETED","initialState","postOnPage","loading","error","isSnackbar","postsReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,SAA9C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,KAAK,EAAE,KAHU;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAArB;;AAOA,SAASC,YAAT,CAAsBC,KAAK,GAAGN,YAA9B,EAA4CO,MAA5C,EAAoD;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,KAAL;AACI,UAAIU,KAAK,CAACL,UAAN,KAAqB,EAAzB,EAA6B;AACzB,eAAO,EACH,GAAGK;AADA,SAAP;AAGH;;AACD,aAAO,EACH,GAAGA,KADA;AAEHL,QAAAA,UAAU,EAAEM,MAAM,CAACE;AAFhB,OAAP;;AAIJ,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,KAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKJ,OAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAFhB,OAAP;;AAIJ;AAAS,aAAOH,KAAP;AA1Bb;AA6BH;;AAED,eAAeD,YAAf","sourcesContent":["import { POSTS, LOADED, ERROR, DELETED } from './types'\n\nconst initialState = {\n    postOnPage: [],\n    loading: true,\n    error: false,\n    isSnackbar: false\n}\n\nfunction postsReducer(state = initialState, action) {\n    switch (action.type) {\n        case POSTS:\n            if (state.postOnPage === []) {\n                return {\n                    ...state,\n                }\n            }\n            return {\n                ...state,\n                postOnPage: action.payload,\n            }\n        case LOADED:\n            return {\n                ...state,\n                loading: false\n            }\n        case ERROR:\n            return {\n                ...state,\n                error: true\n            }\n        case DELETED:\n            return {\n                ...state,\n                isSnackbar: action.payload\n            }\n        default: return state;\n    }\n\n}\n\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}