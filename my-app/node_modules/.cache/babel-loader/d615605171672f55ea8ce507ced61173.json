{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/post-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized';\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\nimport prof from './no-avatar.jpg';\nimport deletProf from './delete-user.jpg';\nimport './post-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'; //Hook\n  //const post = useSelector(state => state.post)\n  //const postUser = useSelector(state => state.postUser)\n\n  const [post, setPost] = useState({});\n  const [postUser, setPostUser] = useState({});\n  const loading = useSelector(state => state.loading);\n  const [heart, setHeart] = useState('');\n  const history = useHistory();\n  const {\n    id\n  } = useParams(); //Ref\n\n  const refHeart = useRef();\n  const refAvatar = useRef();\n  const refImagePost = useRef(); //local\n\n  const isAuthorized = localStorage.getItem('token');\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); //DateCreated\n  //let date = post.dateCreated\n  //let newDate = date.replace(/[T-Z]/g, ' ')\n  //newDate = newDate.replace(/\\..*/, '')\n  //Func and hook\n\n  async function redHeart(likedUser, e) {\n    const idxLike = await likedUser.indexOf(isAuthorizedUser._id);\n\n    if (idxLike >= 0) {\n      e.classList.add('liked');\n    } else {\n      e.classList.remove('liked');\n    }\n  }\n\n  useEffect(() => {\n    Server.getPost(id).then(res => {\n      setPost(res.data);\n      setHeart(res.likes.length);\n      redHeart(res.data.likes, refHeart.current);\n      Server.getUser(res.data.postedBy).then(res => setPostUser(res.data)); //.catch(res => dispatch(setPostUser(null)))\n    }); //.catch(res => dispatch(setPost(null)))\n  }, [Server, id, redHeart]); //useEffect(() => {\n  //    if (isAuthorizedUser) {\n  //        Server.getPost(post._id)\n  //            .then(res => {\n  //                setHeart(res.likes.length)\n  //                redHeart(res.data.likes, refHeart.current)\n  //            })\n  //    }\n  //    // eslint-disable-next-line react-hooks/exhaustive-deps\n  //}, [Server, post._id])\n\n  const postLike = async e => {\n    await Server.getPost(post._id).then(res => {\n      if (res.data.likes.length !== heart) {\n        setHeart(res.data.likes.length);\n        redHeart(res.data.likes, e);\n      }\n    });\n  };\n\n  async function setLike(id, token, e) {\n    await Server.setLikePost(id, token);\n    postLike(e);\n  }\n\n  const [modal, setModal] = useState('');\n  useEffect(() => {\n    if (postUser) {\n      Server.getImage(refAvatar, postUser.avatar, defaultAvatar);\n    }\n\n    if (post) {\n      Server.getImage(refImagePost, post.image, '', post.description);\n    }\n  }, [Server, post, postUser]); //useEffect(() => {\n  //    if (post) {\n  //        Server.getImage(refImagePost, post.image, '', post.description)\n  //    }\n  //}, [Server, post])\n\n  const delPost = async (id, token) => {\n    await Server.deletePost(id, token);\n    history.push('/list');\n  };\n\n  if (loading || !post || !postUser) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    onClick: () => console.log(post),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item-list\",\n        children: [postUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: prof,\n            className: \"user-avatar\",\n            alt: \"prof\",\n            ref: refAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", postUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletProf,\n            className: \"user-avatar\",\n            alt: \"prof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"delete-user\",\n            children: \" User has been deleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-update-post\",\n              onClick: () => history.push('/editor'),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                className: \"bi bi-pen-fill\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            alt: \"\",\n            className: \"post-image\",\n            ref: refImagePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: post.fullText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-post\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interaction\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like\",\n                onClick: () => {\n                  isAuthorized ? setLike(post._id, isAuthorized, refHeart.current) : setModal('show-flex');\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  ref: refHeart,\n                  className: \"fa fa-heart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), heart, isAuthorizedUser && isAuthorizedUser._id === postUser._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => delPost(post._id, isAuthorized),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash-o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 114\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 39\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalAuthorized, {\n      cl: modal,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"Gn0E8ncLrg1I4ufrLj9djwrhyko=\", false, function () {\n  return [useSelector, useHistory, useParams];\n});\n\n_c = PostList;\nexport default WithServer()(PostList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/post-list.js"],"names":["React","useEffect","useRef","useState","useSelector","WithServer","ModalAuthorized","useHistory","useParams","Spinner","prof","deletProf","PostList","Server","defaultAvatar","post","setPost","postUser","setPostUser","loading","state","heart","setHeart","history","id","refHeart","refAvatar","refImagePost","isAuthorized","localStorage","getItem","isAuthorizedUser","JSON","parse","redHeart","likedUser","e","idxLike","indexOf","_id","classList","add","remove","getPost","then","res","data","likes","length","current","getUser","postedBy","postLike","setLike","token","setLikePost","modal","setModal","getImage","avatar","image","description","delPost","deletePost","push","console","log","name","title","fullText"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized'\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\n\nimport prof from './no-avatar.jpg'\nimport deletProf from './delete-user.jpg'\n\nimport './post-list.css';\n\nconst PostList = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    //Hook\n    //const post = useSelector(state => state.post)\n    //const postUser = useSelector(state => state.postUser)\n\n    const [post, setPost] = useState({});\n    const [postUser, setPostUser] = useState({});\n\n    const loading = useSelector(state => state.loading)\n    const [heart, setHeart] = useState('')\n    const history = useHistory()\n    const { id } = useParams()\n    //Ref\n    const refHeart = useRef()\n    const refAvatar = useRef()\n    const refImagePost = useRef()\n\n    //local\n    const isAuthorized = localStorage.getItem('token');\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n    //DateCreated\n    //let date = post.dateCreated\n    //let newDate = date.replace(/[T-Z]/g, ' ')\n    //newDate = newDate.replace(/\\..*/, '')\n\n    //Func and hook\n    async function redHeart(likedUser, e) {\n        const idxLike = await likedUser.indexOf(isAuthorizedUser._id)\n        if (idxLike >= 0) {\n            e.classList.add('liked')\n        } else {\n            e.classList.remove('liked')\n        }\n    }\n\n    useEffect(() => {\n        Server.getPost(id)\n            .then(res => {\n                setPost(res.data)\n                setHeart(res.likes.length)\n                redHeart(res.data.likes, refHeart.current)\n                Server.getUser(res.data.postedBy)\n                    .then(res => setPostUser(res.data))\n                //.catch(res => dispatch(setPostUser(null)))\n            })\n        //.catch(res => dispatch(setPost(null)))\n    }, [Server, id, redHeart])\n\n    //useEffect(() => {\n    //    if (isAuthorizedUser) {\n    //        Server.getPost(post._id)\n    //            .then(res => {\n    //                setHeart(res.likes.length)\n    //                redHeart(res.data.likes, refHeart.current)\n    //            })\n    //    }\n    //    // eslint-disable-next-line react-hooks/exhaustive-deps\n    //}, [Server, post._id])\n\n    const postLike = async (e) => {\n        await Server.getPost(post._id)\n            .then(res => {\n                if (res.data.likes.length !== heart) {\n                    setHeart(res.data.likes.length)\n                    redHeart(res.data.likes, e)\n                }\n            })\n    }\n\n    async function setLike(id, token, e) {\n        await Server.setLikePost(id, token)\n        postLike(e)\n    }\n\n    const [modal, setModal] = useState('')\n\n\n    useEffect(() => {\n        if (postUser) {\n            Server.getImage(refAvatar, postUser.avatar, defaultAvatar)\n        }\n\n        if (post) {\n            Server.getImage(refImagePost, post.image, '', post.description)\n        }\n    }, [Server, post, postUser])\n\n\n    //useEffect(() => {\n    //    if (post) {\n    //        Server.getImage(refImagePost, post.image, '', post.description)\n    //    }\n    //}, [Server, post])\n\n    const delPost = async (id, token) => {\n        await Server.deletePost(id, token)\n        history.push('/list')\n    }\n\n    if (loading || !post || !postUser) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"item\" onClick={() => console.log(post)}>\n            <div className=\"item-post\">\n                <div className=\"post-item-list\">\n                    {postUser\n                        ?\n                        <div className=\"info-user\">\n                            <img src={prof} className=\"user-avatar\" alt=\"prof\" ref={refAvatar} />\n                            <p> {postUser.name}</p>\n                        </div>\n                        :\n                        <div className=\"info-user\">\n                            <img src={deletProf} className=\"user-avatar\" alt=\"prof\" />\n                            <p className=\"delete-user\"> User has been deleted</p>\n                        </div>}\n                    <div className=\"info-post\">\n                        <div className='header-post'>\n                            <p className=\"title\">{post.title}</p>\n                            <button className='btn-update-post' onClick={() => history.push('/editor')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pen-fill\" viewBox=\"0 0 16 16\">\n                                    <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\" />\n                                </svg>\n                            </button>\n                        </div>\n                        <img src='' alt=\"\" className=\"post-image\" ref={refImagePost} />\n                        {/**ul ?**/}\n                        <ul className=\"full-text\">{post.fullText}</ul>\n                        <div className=\"footer-post\">\n                            {/*<span className=\"date\">{newDate}</span>*/}\n                            <div className=\"interaction\">\n                                <button\n                                    className='like'\n                                    onClick={() => {\n                                        isAuthorized\n                                            ? setLike(post._id, isAuthorized, refHeart.current)\n                                            : setModal('show-flex')\n                                    }\n                                    }><i ref={refHeart} className=\"fa fa-heart\"></i></button>{heart}\n                                {isAuthorizedUser && isAuthorizedUser._id === postUser._id\n                                    ? <button className='delete' onClick={() => delPost(post._id, isAuthorized)}><i className=\"fa fa-trash-o\"></i></button>\n                                    : <p></p>}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <ModalAuthorized cl={modal} setModal={setModal} />\n        </div>\n    )\n}\n\n\nexport default WithServer()(PostList);\n\n"]},"metadata":{},"sourceType":"module"}