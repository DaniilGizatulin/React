{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/post-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized';\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\nimport { useDispatch } from 'react-redux';\nimport { loaded } from '../../actions';\nimport prof from './no-avatar.jpg';\nimport deletProf from './delete-user.jpg';\nimport './post-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'; //Hook\n  // useState\n\n  const [post, setPost] = useState({});\n  const [postUser, setPostUser] = useState({});\n  const [date, setDate] = useState('');\n  const [heart, setHeart] = useState(''); //useDispatch & useSelector\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.loading); // useHistory & useParams\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams(); //Ref\n\n  const refHeart = useRef();\n  const refAvatar = useRef();\n  const refImagePost = useRef(); //local\n\n  const isAuthorized = localStorage.getItem('token');\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); //DateCreated\n\n  const dateСorrector = postData => {\n    let date = postData;\n    let newDate = date.replace(/[T-Z]/g, ' ');\n    setDate(newDate.replace(/\\..*/, ''));\n  }; // If an authorized user has a like on a post\n\n\n  function saveLike(likedUser, e) {\n    const idxLike = likedUser.indexOf(isAuthorizedUser._id);\n\n    if (idxLike >= 0) {\n      e.classList.add('liked');\n    } else {\n      e.classList.remove('liked');\n    }\n  } // Func get post and user\n\n\n  useEffect(() => {\n    Server.getPost(id).then(res => {\n      dispatch(loaded());\n      setPost(res.data);\n      setHeart(res.data.likes.length);\n      saveLike(res.data.likes, refHeart.current);\n      dateСorrector(res.data.dateCreated);\n      Server.getImage(refImagePost, res.data.image, '', res.data.description);\n      Server.getUser(res.data.postedBy).then(res => {\n        Server.getImage(refAvatar, res.data.avatar, defaultAvatar);\n        setPostUser(res.data);\n      }).catch(res => setPostUser(null));\n    }); //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Server, id]); // number of likes on the post\n\n  const postLike = async e => {\n    await Server.getPost(post._id).then(res => {\n      if (res.data.likes.length !== heart) {\n        setHeart(res.data.likes.length);\n        saveLike(res.data.likes, e);\n      }\n    });\n  }; // func setlike \n\n\n  async function setLike(id, token, e) {\n    await Server.setLikePost(id, token);\n    postLike(e);\n  }\n\n  const [modal, setModal] = useState(''); //? Перекинуть в редактор поста\n  //const delPost = async (id, token) => {\n  //    await Server.deletePost(id, token)\n  //    history.push('/list')\n  //}\n\n  if (loading || !post) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    onClick: () => console.log(post),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item-list\",\n        children: [postUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: prof,\n            className: \"user-avatar cntr\",\n            alt: \"prof\",\n            ref: refAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", postUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletProf,\n            className: \"user-avatar cntr\",\n            alt: \"prof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"delete-user\",\n            children: \" User has been deleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-update-post\",\n              onClick: () => history.push(`/editor-posts/${id}`),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                className: \"bi bi-pen-fill\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            alt: post.description,\n            className: \"post-image\",\n            ref: refImagePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: post.fullText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interaction\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like\",\n                onClick: () => {\n                  isAuthorized ? setLike(post._id, isAuthorized, refHeart.current) : setModal('show-flex');\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  ref: refHeart,\n                  className: \"fa fa-heart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), heart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalAuthorized, {\n      cl: modal,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"PmDjGoWbtIJn1Rr9MD19LXHiDT0=\", false, function () {\n  return [useDispatch, useSelector, useHistory, useParams];\n});\n\n_c = PostList;\nexport default WithServer()(PostList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/post-list.js"],"names":["React","useEffect","useRef","useState","useSelector","WithServer","ModalAuthorized","useHistory","useParams","Spinner","useDispatch","loaded","prof","deletProf","PostList","Server","defaultAvatar","post","setPost","postUser","setPostUser","date","setDate","heart","setHeart","dispatch","loading","state","history","id","refHeart","refAvatar","refImagePost","isAuthorized","localStorage","getItem","isAuthorizedUser","JSON","parse","dateСorrector","postData","newDate","replace","saveLike","likedUser","e","idxLike","indexOf","_id","classList","add","remove","getPost","then","res","data","likes","length","current","dateCreated","getImage","image","description","getUser","postedBy","avatar","catch","postLike","setLike","token","setLikePost","modal","setModal","console","log","name","title","push","fullText"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized'\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\n\nimport { useDispatch } from 'react-redux';\nimport { loaded } from '../../actions';\n\nimport prof from './no-avatar.jpg'\nimport deletProf from './delete-user.jpg'\n\nimport './post-list.css';\n\nconst PostList = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    //Hook\n\n    // useState\n    const [post, setPost] = useState({});\n    const [postUser, setPostUser] = useState({});\n    const [date, setDate] = useState('')\n    const [heart, setHeart] = useState('')\n    //useDispatch & useSelector\n    const dispatch = useDispatch()\n    const loading = useSelector(state => state.loading)\n\n    // useHistory & useParams\n    const history = useHistory()\n    const { id } = useParams()\n\n    //Ref\n    const refHeart = useRef()\n    const refAvatar = useRef()\n    const refImagePost = useRef()\n\n    //local\n    const isAuthorized = localStorage.getItem('token');\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n    //DateCreated\n    const dateСorrector = (postData) => {\n        let date = postData\n        let newDate = date.replace(/[T-Z]/g, ' ')\n        setDate(newDate.replace(/\\..*/, ''))\n    }\n\n    // If an authorized user has a like on a post\n    function saveLike(likedUser, e) {\n        const idxLike = likedUser.indexOf(isAuthorizedUser._id)\n        if (idxLike >= 0) {\n            e.classList.add('liked')\n        } else {\n            e.classList.remove('liked')\n        }\n    }\n\n    // Func get post and user\n    useEffect(() => {\n        Server.getPost(id)\n            .then(res => {\n                dispatch(loaded())\n                setPost(res.data)\n                setHeart(res.data.likes.length)\n                saveLike(res.data.likes, refHeart.current)\n                dateСorrector(res.data.dateCreated)\n                Server.getImage(refImagePost, res.data.image, '', res.data.description)\n                Server.getUser(res.data.postedBy)\n                    .then(res => {\n                        Server.getImage(refAvatar, res.data.avatar, defaultAvatar)\n                        setPostUser(res.data)\n                    })\n                    .catch(res => setPostUser(null))\n            })\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [Server, id])\n\n    // number of likes on the post\n    const postLike = async (e) => {\n        await Server.getPost(post._id)\n            .then(res => {\n                if (res.data.likes.length !== heart) {\n                    setHeart(res.data.likes.length)\n                    saveLike(res.data.likes, e)\n                }\n            })\n    }\n\n    // func setlike \n    async function setLike(id, token, e) {\n        await Server.setLikePost(id, token)\n        postLike(e)\n    }\n\n    const [modal, setModal] = useState('')\n\n    //? Перекинуть в редактор поста\n    //const delPost = async (id, token) => {\n    //    await Server.deletePost(id, token)\n    //    history.push('/list')\n    //}\n\n    if (loading || !post) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"item\" onClick={() => console.log(post)}>\n            <div className=\"item-post\">\n                <div className=\"post-item-list\">\n                    {postUser\n                        ?\n                        <div className=\"info-user\">\n                            <img src={prof} className=\"user-avatar cntr\" alt=\"prof\" ref={refAvatar} />\n                            <p> {postUser.name}</p>\n                        </div>\n                        :\n                        <div className=\"info-user\">\n                            <img src={deletProf} className=\"user-avatar cntr\" alt=\"prof\" />\n                            <p className=\"delete-user\"> User has been deleted</p>\n                        </div>}\n                    <div className=\"info-post\">\n                        <div className='header-post'>\n                            <p className=\"title\">{post.title}</p>\n                            <button className='btn-update-post' onClick={() => history.push(`/editor-posts/${id}`)}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pen-fill\" viewBox=\"0 0 16 16\">\n                                    <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\" />\n                                </svg>\n                            </button>\n                        </div>\n                        <img src='' alt={post.description} className=\"post-image\" ref={refImagePost} />\n                        <ul className=\"full-text\">{post.fullText}</ul>\n                        <div className=\"footer-post\">\n                            <span className=\"date\">{date}</span>\n                            <div className=\"interaction\">\n                                <button\n                                    className='like'\n                                    onClick={() => {\n                                        isAuthorized\n                                            ? setLike(post._id, isAuthorized, refHeart.current)\n                                            : setModal('show-flex')\n                                    }\n                                    }><i ref={refHeart} className=\"fa fa-heart\"></i></button>{heart}\n                                {/*{isAuthorizedUser && isAuthorizedUser._id === postUser._id\n                                    ? <button className='delete' onClick={() => delPost(post._id, isAuthorized)}><i className=\"fa fa-trash-o\"></i></button>\n                                    : <p></p>}*/}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <ModalAuthorized cl={modal} setModal={setModal} />\n        </div>\n    )\n}\n\n\nexport default WithServer()(PostList);\n\n"]},"metadata":{},"sourceType":"module"}