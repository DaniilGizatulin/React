{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst SimpleSnackbar = ({\n  isDeleted\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleShow = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (isDeleted) {\n      handleShow();\n    }\n  }, [isDeleted]);\n  return (\n    /*#__PURE__*/\n    //<div>\n    //    {/*<Button onClick={() => console.log(isDeleted)}>Open simple snackbar</Button>*/}\n    //    <Snackbar\n    //        anchorOrigin={{\n    //            vertical: 'bottom',\n    //            horizontal: 'left',\n    //        }}\n    //        open={open}\n    //        autoHideDuration={5000}\n    //        onClose={handleClose}\n    //        message=\"Note archived\"\n    //        action={\n    //            <React.Fragment>\n    //                <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n    //                    UNDO\n    //                 </Button>\n    //                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n    //                    <CloseIcon fontSize=\"small\" />\n    //                </IconButton>\n    //            </React.Fragment>\n    //        }\n    //    />\n    //</div>\n    _jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleShow,\n        children: \"Open success snackbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: open,\n        autoHideDuration: 6000,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"success\",\n          children: \"This is a success message!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: \"This is an error message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"This is a warning message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"This is an information message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"This is a success message!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(SimpleSnackbar, \"/058ULEF5Ocytzn2/IjLFi2zlC0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleSnackbar;\nexport default SimpleSnackbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"SimpleSnackbar\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js"],"names":["React","useEffect","Button","Snackbar","IconButton","CloseIcon","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","SimpleSnackbar","isDeleted","classes","open","setOpen","useState","handleShow","handleClose","event","reason","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst SimpleSnackbar = ({ isDeleted }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleShow = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n    useEffect(() => {\n        if (isDeleted) {\n            handleShow()\n        }\n    }, [isDeleted])\n\n\n    return (\n        //<div>\n        //    {/*<Button onClick={() => console.log(isDeleted)}>Open simple snackbar</Button>*/}\n        //    <Snackbar\n        //        anchorOrigin={{\n        //            vertical: 'bottom',\n        //            horizontal: 'left',\n        //        }}\n        //        open={open}\n        //        autoHideDuration={5000}\n        //        onClose={handleClose}\n        //        message=\"Note archived\"\n        //        action={\n        //            <React.Fragment>\n        //                <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n        //                    UNDO\n        //                 </Button>\n        //                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n        //                    <CloseIcon fontSize=\"small\" />\n        //                </IconButton>\n        //            </React.Fragment>\n        //        }\n        //    />\n\n        //</div>\n\n        <div className={classes.root}>\n            <Button variant=\"outlined\" onClick={handleShow}>\n                Open success snackbar\n        </Button>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    This is a success message!\n        </Alert>\n            </Snackbar>\n            <Alert severity=\"error\">This is an error message!</Alert>\n            <Alert severity=\"warning\">This is a warning message!</Alert>\n            <Alert severity=\"info\">This is an information message!</Alert>\n            <Alert severity=\"success\">This is a success message!</Alert>\n        </div>\n    );\n}\n\nexport default SimpleSnackbar;"]},"metadata":{},"sourceType":"module"}