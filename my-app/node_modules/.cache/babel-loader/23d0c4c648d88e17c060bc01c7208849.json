{"ast":null,"code":"import axios from 'axios'; //// Проверим в самом начале, есть ли токен в хранилище\n//const JWTToken = localStorage.getItem('token');\n//const BASE_URL = 'https://nodejs-test-api-blog.herokuapp.com';\n//// Создать инстанс axios\n//const api = axios.create({\n//    baseURL: `${BASE_URL}/api`\n//});\n////function apiSetHeader(name, value) {\n////    if (value) {\n////        api.defaults.headers[name] = value;\n////    }\n////};\n//function apiSetHeader(name, value) {\n//    if (value) {\n//        api.headers[name] = value;\n//    }\n//};\n//// Если токен есть, то добавим заголовок к запросам\n//if (JWTToken) {\n//    console.log('123')\n//    apiSetHeader('Authorization', `Bearer ${JWTToken}`);\n//}\n//api.interceptors.request.use(config => {\n//    console.log(config)\n//    // Если пользователь делает запрос и у него нет заголовка с токеном, то...\n//    if (!config.headers['Authorization']) {\n//        // Тут пишем редирект если не авторизован\n//        console.log('Не авторизован')\n//    }\n//    return config;\n//}, error => {\n//    return Promise.reject(error);\n//});\n//export default api;\n//export { apiSetHeader }\n// ./services/sign-in.js\n//import api, { apiSetHeader } from './api'\n//export const authorize = async (username, password) => {\n//  try {\n//    const { data } = await api.post('/clients/token/', {\n//      username,\n//      password\n//    });\n//    localStorage.setItem('jwt', data.access);\n//    apiSetHeader('Authorization', `Bearer ${data.access}`);\n//  } catch (error) {\n//    console.log(error);\n//  }\n//};","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/services/axios-header.js"],"names":["axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\n//// Проверим в самом начале, есть ли токен в хранилище\n//const JWTToken = localStorage.getItem('token');\n//const BASE_URL = 'https://nodejs-test-api-blog.herokuapp.com';\n//// Создать инстанс axios\n//const api = axios.create({\n//    baseURL: `${BASE_URL}/api`\n//});\n\n////function apiSetHeader(name, value) {\n////    if (value) {\n////        api.defaults.headers[name] = value;\n////    }\n////};\n\n//function apiSetHeader(name, value) {\n//    if (value) {\n//        api.headers[name] = value;\n//    }\n//};\n\n//// Если токен есть, то добавим заголовок к запросам\n//if (JWTToken) {\n//    console.log('123')\n//    apiSetHeader('Authorization', `Bearer ${JWTToken}`);\n//}\n\n//api.interceptors.request.use(config => {\n//    console.log(config)\n//    // Если пользователь делает запрос и у него нет заголовка с токеном, то...\n//    if (!config.headers['Authorization']) {\n//        // Тут пишем редирект если не авторизован\n//        console.log('Не авторизован')\n//    }\n\n//    return config;\n//}, error => {\n//    return Promise.reject(error);\n//});\n\n//export default api;\n\n//export { apiSetHeader }\n\n// ./services/sign-in.js\n\n//import api, { apiSetHeader } from './api'\n\n//export const authorize = async (username, password) => {\n//  try {\n//    const { data } = await api.post('/clients/token/', {\n//      username,\n//      password\n//    });\n\n//    localStorage.setItem('jwt', data.access);\n//    apiSetHeader('Authorization', `Bearer ${data.access}`);\n//  } catch (error) {\n//    console.log(error);\n//  }\n//};"]},"metadata":{},"sourceType":"module"}