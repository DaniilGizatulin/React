{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/component/modalAuthorized/modalAuthorized.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport LoginForm from '../../../login-form'; //style\n\nimport './modalAuthorized.sass'; //helpers\n\nimport { useOnClickOutside } from '../../../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalAuthorized = ({\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  //useSelector\n  //useRef\n  const refModalLiked = useRef();\n  const refModolLikedBtn = useRef();\n  const claz = showModal; //useState\n\n  const [showLogin, setShowLogin] = useState(false);\n  useOnClickOutside(refModalLiked, e => {\n    if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) {\n      setShowModal('hidden');\n    }\n  }); //useEffect(\n  //    () => {\n  //        const listener = (e) => {\n  //            if (!refModalLiked.current || refModalLiked.current.contains(e.target)) {\n  //                return;\n  //            } else if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) {\n  //                setShowModal('hidden')\n  //            }\n  //        };\n  //        document.addEventListener(\"mousedown\", listener);\n  //        document.addEventListener(\"touchstart\", listener);\n  //        return () => {\n  //            document.removeEventListener(\"mousedown\", listener);\n  //            document.removeEventListener(\"touchstart\", listener);\n  //        };\n  //    }, [refModalLiked, refModolLikedBtn, setShowModal])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-liked ${claz}`,\n      ref: refModalLiked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-modal-liked\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-liked-title\",\n          children: \"Do u like post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-like\",\n          ref: refModolLikedBtn,\n          onClick: () => setShowModal('hidden'),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-first\",\n        children: \"login first\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-modal-liked\",\n        onClick: () => {\n          setShowLogin(true);\n          setShowModal('hidden');\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `small-login-form ${showLogin ? 'show' : 'hidden'}`,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        show: showLogin,\n        setShow: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalAuthorized, \"VW8b1kToHD/gA1oVNRglUVLx5j0=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = ModalAuthorized;\nexport default ModalAuthorized;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAuthorized\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/component/modalAuthorized/modalAuthorized.js"],"names":["React","useRef","useState","useEffect","LoginForm","useOnClickOutside","ModalAuthorized","showModal","setShowModal","refModalLiked","refModolLikedBtn","claz","showLogin","setShowLogin","e","current","contains","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CACA;;AACA,OAAO,wBAAP,C,CACA;;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA;;AACrD;AAEA;AACA,QAAMC,aAAa,GAAGR,MAAM,EAA5B;AACA,QAAMS,gBAAgB,GAAGT,MAAM,EAA/B;AAEA,QAAMU,IAAI,GAAGJ,SAAb,CAPqD,CASrD;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AAEAG,EAAAA,iBAAiB,CAACI,aAAD,EAAiBK,CAAD,IAAO;AACpC,QAAIJ,gBAAgB,CAACK,OAAjB,IAA4B,CAACL,gBAAgB,CAACK,OAAjB,CAAyBC,QAAzB,CAAkCF,CAAC,CAACG,MAApC,CAAjC,EAA8E;AAC1ET,MAAAA,YAAY,CAAC,QAAD,CAAZ;AACH;AACJ,GAJgB,CAAjB,CAZqD,CAkBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,eAAcG,IAAK,EAApC;AAAuC,MAAA,GAAG,EAAEF,aAA5C;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,GAAG,EAAEC,gBAA1C;AAA4D,UAAA,OAAO,EAAE,MAAMF,YAAY,CAAC,QAAD,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,MAAM;AACjDK,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,UAAAA,YAAY,CAAC,QAAD,CAAZ;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAK,MAAA,SAAS,EAAG,oBAAmBI,SAAS,GAAG,MAAH,GAAY,QAAS,EAAlE;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,SAAjB;AAA4B,QAAA,OAAO,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAoBH,CAzDD;;GAAMP,e;UAYFD,iB;;;KAZEC,e;AA2DN,eAAeA,eAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport LoginForm from '../../../login-form';\n//style\nimport './modalAuthorized.sass';\n//helpers\nimport { useOnClickOutside } from '../../../../helpers'\n\nconst ModalAuthorized = ({ showModal, setShowModal }) => {\n    //useSelector\n\n    //useRef\n    const refModalLiked = useRef()\n    const refModolLikedBtn = useRef()\n\n    const claz = showModal\n\n    //useState\n    const [showLogin, setShowLogin] = useState(false)\n\n    useOnClickOutside(refModalLiked, (e) => {\n        if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) {\n            setShowModal('hidden')\n        }\n    })\n\n    //useEffect(\n    //    () => {\n    //        const listener = (e) => {\n    //            if (!refModalLiked.current || refModalLiked.current.contains(e.target)) {\n    //                return;\n    //            } else if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) {\n    //                setShowModal('hidden')\n    //            }\n    //        };\n    //        document.addEventListener(\"mousedown\", listener);\n    //        document.addEventListener(\"touchstart\", listener);\n    //        return () => {\n    //            document.removeEventListener(\"mousedown\", listener);\n    //            document.removeEventListener(\"touchstart\", listener);\n    //        };\n    //    }, [refModalLiked, refModolLikedBtn, setShowModal])\n\n\n\n    return (\n        <>\n            <div className={`modal-liked ${claz}`} ref={refModalLiked}>\n                <div className='header-modal-liked'>\n                    <p className='modal-liked-title'>Do u like post?</p>\n                    <button className='close-modal-like' ref={refModolLikedBtn} onClick={() => setShowModal('hidden')}>X</button>\n                </div>\n                <p className='login-first'>login first</p>\n                <hr />\n                <button className='login-modal-liked' onClick={() => {\n                    setShowLogin(true)\n                    setShowModal('hidden')\n                }}>Sign in</button>\n            </div>\n            <div className={`small-login-form ${showLogin ? 'show' : 'hidden'}`}>\n                <LoginForm show={showLogin} setShow={setShowLogin} />\n            </div>\n\n        </>\n    )\n}\n\nexport default ModalAuthorized;"]},"metadata":{},"sourceType":"module"}