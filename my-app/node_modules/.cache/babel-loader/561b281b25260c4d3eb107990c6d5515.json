{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport { getAllPosts } from '../../redux/posts/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPosts = ({\n  Server\n}) => {\n  _s();\n\n  const refPostsContainer = useRef(); //useSelectors\n\n  const loading = useSelector(state => state.postState.loading);\n  const allPosts = useSelector(state => state.postState.allPosts); //useDispatch\n\n  const dispatch = useDispatch(); //useHistory\n\n  const history = useHistory(); //useParams\n\n  const {\n    id\n  } = useParams();\n\n  const goToUserPost = async idPost => {\n    history.push(`/post/${idPost}`);\n  };\n\n  useEffect(() => {\n    if (allPosts.length === 0) {\n      dispatch(getAllPosts(0, 0));\n    }\n  }, [dispatch, allPosts]);\n  let idx = 0; // eslint-disable-next-line array-callback-return\n\n  const postList = allPosts.map((postItem, i) => {\n    idx++;\n\n    if (postItem.postedBy === id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        onClick: () => console.log(allPosts),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: postItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"full-text\",\n              children: postItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"full-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view\",\n                onClick: () => goToUserPost(postItem._id),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    ref: refPostsContainer,\n    children: !loading ? postList : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserPosts, \"rJsFpC1O3sP9jRGW953CfFK9qMU=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = UserPosts;\nexport default WithServer()(UserPosts);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","useHistory","useParams","WithServer","Spinner","getAllPosts","UserPosts","Server","refPostsContainer","loading","state","postState","allPosts","dispatch","history","id","goToUserPost","idPost","push","length","idx","postList","map","postItem","i","postedBy","console","log","title","description","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC9B,QAAMC,iBAAiB,GAAGV,MAAM,EAAhC,CAD8B,CAG9B;;AACA,QAAMW,OAAO,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,OAA1B,CAA3B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,QAA1B,CAA5B,CAL8B,CAO9B;;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B,CAR8B,CAU9B;;AACA,QAAMe,OAAO,GAAGb,UAAU,EAA1B,CAX8B,CAa9B;;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASb,SAAS,EAAxB;;AAEA,QAAMc,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACnCH,IAAAA,OAAO,CAACI,IAAR,CAAc,SAAQD,MAAO,EAA7B;AACH,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,QAAQ,CAACO,MAAT,KAAoB,CAAxB,EAA2B;AACvBN,MAAAA,QAAQ,CAACR,WAAW,CAAC,CAAD,EAAI,CAAJ,CAAZ,CAAR;AACH;AACJ,GAJQ,EAIN,CAACQ,QAAD,EAAWD,QAAX,CAJM,CAAT;AAMA,MAAIQ,GAAG,GAAG,CAAV,CA1B8B,CA4B9B;;AACA,QAAMC,QAAQ,GAAGT,QAAQ,CAACU,GAAT,CAAa,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC3CJ,IAAAA,GAAG;;AAEH,QAAIG,QAAQ,CAACE,QAAT,KAAsBV,EAA1B,EAA8B;AAC1B,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAgC,QAAA,OAAO,EAAE,MAAMW,OAAO,CAACC,GAAR,CAAYf,QAAZ,CAA/C;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,OAAb;AAAA,wBAAsBW,QAAQ,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,wBAA2BL,QAAQ,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACI;AACI,gBAAA,SAAS,EAAC,MADd;AAEI,gBAAA,OAAO,EAAE,MAAMb,YAAY,CAACO,QAAQ,CAACO,GAAV,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAA2BV,GAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAkBH;AACJ,GAvBgB,CAAjB;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEZ,iBAAhC;AAAA,cAGQ,CAACC,OAAD,GACMY,QADN,gBAEM,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhED;;GAAMf,S;UAIcN,W,EACCA,W,EAGAD,W,EAGDE,U,EAGDC,S;;;KAdbI,S;AAkEN,eAAeH,UAAU,GAAGG,SAAH,CAAzB","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport { getAllPosts } from '../../redux/posts/actions'\n\nconst UserPosts = ({ Server }) => {\n    const refPostsContainer = useRef()\n\n    //useSelectors\n    const loading = useSelector(state => state.postState.loading)\n    const allPosts = useSelector(state => state.postState.allPosts)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useHistory\n    const history = useHistory()\n\n    //useParams\n    const { id } = useParams()\n\n    const goToUserPost = async (idPost) => {\n        history.push(`/post/${idPost}`)\n    }\n\n    useEffect(() => {\n        if (allPosts.length === 0) {\n            dispatch(getAllPosts(0, 0))\n        }\n    }, [dispatch, allPosts])\n\n    let idx = 0;\n\n    // eslint-disable-next-line array-callback-return\n    const postList = allPosts.map((postItem, i) => {\n        idx++\n\n        if (postItem.postedBy === id) {\n            return (\n                <div className=\"post\" key={idx} onClick={() => console.log(allPosts)}>\n                    <div className=\"post-list-item\" >\n                        <div className=\"cards\">\n                            <p className=\"title\">{postItem.title}</p>\n                            <ul className=\"full-text\">{postItem.description}</ul>\n                            <div className=\"full-post\">\n                                <button\n                                    className='view'\n                                    onClick={() => goToUserPost(postItem._id)}>\n                                    View\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        }\n    })\n\n    return (\n        <div className=\"post-list\" ref={refPostsContainer}>\n            {/*{postList.length === 0 && <p className='not-found-message'>You don't have any posts yet...</p>}*/}\n            {\n                !loading\n                    ? postList\n                    : <Spinner />\n            }\n        </div>\n    )\n}\n\nexport default WithServer()(UserPosts);"]},"metadata":{},"sourceType":"module"}