{"ast":null,"code":"const initialState = {\n  error: false,\n  login: false,\n  user: null,\n  allUsers: null,\n  allPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGIN':\n      return { ...state,\n        login: true\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        login: false,\n        user: null\n      };\n\n    case 'ERROR':\n      return { ...state,\n        error: action.payload\n      };\n\n    case 'ALL_USERS':\n      return { ...state,\n        allUsers: action.payload\n      };\n\n    case 'ALL_POSTS':\n      return { ...state,\n        allPosts: action.payload\n      };\n\n    case 'POST_ADD_TO_STATE':\n      const id = action.payload;\n      const postInd = state.allPosts.findIndex(post => post._id === id);\n\n      if (postInd >= 0) {\n        const itemInState = state.items.find(item => item.id === id);\n        const newItem = { ...itemInState,\n          qtty: ++itemInState.qtty\n        };\n        return { ...state,\n          items: [...state.items.slice(0, itemInd), newItem, ...state.items.slice(itemInd + 1)],\n          totalPrice: state.totalPrice + newItem.price\n        };\n      } // товара раньше не было в корзине\n\n\n      const item = state.menu.find(item => item.id === id);\n      const newItem = {\n        title: item.title,\n        price: item.price,\n        url: item.url,\n        id: item.id,\n        qtty: 1\n      };\n      return { ...state,\n        items: [...state.items, newItem],\n        totalPrice: state.totalPrice + newItem.price\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/reducers/index.js"],"names":["initialState","error","login","user","allUsers","allPosts","reducer","state","action","type","payload","id","postInd","findIndex","post","_id","itemInState","items","find","item","newItem","qtty","slice","itemInd","totalPrice","price","menu","title","url"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,QAAQ,EAAE,IAJO;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHL,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,mBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB;AAEA,YAAME,OAAO,GAAGL,KAAK,CAACF,QAAN,CAAeQ,SAAf,CAAyBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaJ,EAA9C,CAAhB;;AACA,UAAIC,OAAO,IAAI,CAAf,EAAkB;AACd,cAAMI,WAAW,GAAGT,KAAK,CAACU,KAAN,CAAYC,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAArC,CAApB;AACA,cAAMS,OAAO,GAAG,EACZ,GAAGJ,WADS;AAEZK,UAAAA,IAAI,EAAE,EAAEL,WAAW,CAACK;AAFR,SAAhB;AAIA,eAAO,EACH,GAAGd,KADA;AAEHU,UAAAA,KAAK,EAAE,CACH,GAAGV,KAAK,CAACU,KAAN,CAAYK,KAAZ,CAAkB,CAAlB,EAAqBC,OAArB,CADA,EAEHH,OAFG,EAGH,GAAGb,KAAK,CAACU,KAAN,CAAYK,KAAZ,CAAkBC,OAAO,GAAG,CAA5B,CAHA,CAFJ;AAOHC,UAAAA,UAAU,EAAEjB,KAAK,CAACiB,UAAN,GAAmBJ,OAAO,CAACK;AAPpC,SAAP;AAUH,OApBL,CAqBI;;;AACA,YAAMN,IAAI,GAAGZ,KAAK,CAACmB,IAAN,CAAWR,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAApC,CAAb;AACA,YAAMS,OAAO,GAAG;AACZO,QAAAA,KAAK,EAAER,IAAI,CAACQ,KADA;AAEZF,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAFA;AAGZG,QAAAA,GAAG,EAAET,IAAI,CAACS,GAHE;AAIZjB,QAAAA,EAAE,EAAEQ,IAAI,CAACR,EAJG;AAKZU,QAAAA,IAAI,EAAE;AALM,OAAhB;AAQA,aAAO,EACH,GAAGd,KADA;AAEHU,QAAAA,KAAK,EAAE,CACH,GAAGV,KAAK,CAACU,KADN,EAEHG,OAFG,CAFJ;AAMHI,QAAAA,UAAU,EAAEjB,KAAK,CAACiB,UAAN,GAAmBJ,OAAO,CAACK;AANpC,OAAP;;AAQJ;AACI,aAAOlB,KAAP;AAxER;AA0EH,CA3ED;;AA8EA,eAAeD,OAAf","sourcesContent":["\nconst initialState = {\n    error: false,\n    login: false,\n    user: null,\n    allUsers: null,\n    allPosts: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'NEW_USER':\n            return {\n                ...state,\n                user: action.payload\n            }\n        case 'LOGIN':\n            return {\n                ...state,\n                login: true\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                login: false,\n                user: null\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'ALL_USERS':\n            return {\n                ...state,\n                allUsers: action.payload\n            }\n        case 'ALL_POSTS':\n            return {\n                ...state,\n                allPosts: action.payload\n            }\n        case 'POST_ADD_TO_STATE':\n            const id = action.payload;\n\n            const postInd = state.allPosts.findIndex(post => post._id === id);\n            if (postInd >= 0) {\n                const itemInState = state.items.find(item => item.id === id);\n                const newItem = {\n                    ...itemInState,\n                    qtty: ++itemInState.qtty\n                }\n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, itemInd),\n                        newItem,\n                        ...state.items.slice(itemInd + 1)\n                    ],\n                    totalPrice: state.totalPrice + newItem.price\n                }\n\n            }\n            // товара раньше не было в корзине\n            const item = state.menu.find(item => item.id === id);\n            const newItem = {\n                title: item.title,\n                price: item.price,\n                url: item.url,\n                id: item.id,\n                qtty: 1\n            };\n\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    newItem\n                ],\n                totalPrice: state.totalPrice + newItem.price\n            };\n        default:\n            return state\n    }\n}\n\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}