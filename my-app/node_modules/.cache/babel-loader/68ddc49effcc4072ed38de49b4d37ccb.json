{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleSnackbar = ({\n  isDeleted\n}) => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleShow = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    //if (reason === 'clickaway') {\n    //    return;\n    //}\n    setOpen(false);\n  };\n\n  if (isDeleted) {\n    setOpen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => console.log(isDeleted),\n      children: \"Open simple snackbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: open,\n      autoHideDuration: 5000,\n      onClose: handleClose,\n      message: \"Note archived\",\n      action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          onClick: handleClose,\n          children: \"UNDO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleSnackbar, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = SimpleSnackbar;\nexport default SimpleSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleSnackbar\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js"],"names":["React","Button","Snackbar","IconButton","CloseIcon","SimpleSnackbar","isDeleted","open","setOpen","useState","handleShow","handleClose","event","reason","console","log","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC;AACA;AACA;AACAL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GALD;;AAOA,MAAIF,SAAJ,EAAe;AACXE,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAYT,SAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACVU,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OADlB;AAKI,MAAA,IAAI,EAAEV,IALV;AAMI,MAAA,gBAAgB,EAAE,IANtB;AAOI,MAAA,OAAO,EAAEI,WAPb;AAQI,MAAA,OAAO,EAAC,eARZ;AASI,MAAA,MAAM,eACF,QAAC,KAAD,CAAO,QAAP;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,OAAO,EAAEA,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAyB,wBAAW,OAApC;AAA4C,UAAA,KAAK,EAAC,SAAlD;AAA4D,UAAA,OAAO,EAAEA,WAArE;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAVR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA5CD;;GAAMN,c;;KAAAA,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst SimpleSnackbar = ({ isDeleted }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleShow = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        //if (reason === 'clickaway') {\n        //    return;\n        //}\n        setOpen(false);\n    };\n\n    if (isDeleted) {\n        setOpen(true)\n    }\n\n    return (\n        <div>\n            <Button onClick={() => console.log(isDeleted)}>Open simple snackbar</Button>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={5000}\n                onClose={handleClose}\n                message=\"Note archived\"\n                action={\n                    <React.Fragment>\n                        <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                            UNDO\n                         </Button>\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n\n        </div>\n    );\n}\n\nexport default SimpleSnackbar;"]},"metadata":{},"sourceType":"module"}