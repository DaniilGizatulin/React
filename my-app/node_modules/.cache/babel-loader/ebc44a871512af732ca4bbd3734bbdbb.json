{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/post-list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport prof from './no-avatar.jpg';\nimport deletProf from './delete-user.jpg';\nimport './post-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = () => {\n  _s();\n\n  const post = useSelector(state => state.post);\n  const postUser = useSelector(state => state.postUser);\n  let date = post.dateCreated;\n  let newDate = date.replace(/[T-Z]/g, ' ');\n  newDate = newDate.replace(/\\..*/, '');\n  const isAuthorized = localStorage.getItem('token');\n  return (\n    /*#__PURE__*/\n    //<button onClick={() => {\n    //    console.log(post)\n    //    console.log(postUser)\n    //}}>Click check</button>\n    _jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => console.log(postUser),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-post\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item-list\",\n          children: [postUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: prof,\n              className: \"user-avatar\",\n              alt: \"prof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", postUser.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: deletProf,\n              className: \"user-avatar\",\n              alt: \"prof\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" This user have bin deleted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"full-text\",\n              children: post.fullText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-post\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: newDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interaction\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"like\",\n                  onClick: e => {\n                    if (isAuthorized) {\n                      e.target.classList.toggle(\"liked\");\n                    } else {\n                      alert('Login first');\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-heart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(PostList, \"iSsBIBPARe9ZikxFe6MdUeDEdYw=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/post-list.js"],"names":["React","useSelector","prof","deletProf","PostList","post","state","postUser","date","dateCreated","newDate","replace","isAuthorized","localStorage","getItem","console","log","name","title","fullText","e","target","classList","toggle","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport prof from './no-avatar.jpg'\nimport deletProf from './delete-user.jpg'\nimport './post-list.css';\n\nconst PostList = () => {\n\n    const post = useSelector(state => state.post)\n    const postUser = useSelector(state => state.postUser)\n\n    let date = post.dateCreated\n    let newDate = date.replace(/[T-Z]/g, ' ')\n    newDate = newDate.replace(/\\..*/, '')\n\n    const isAuthorized = localStorage.getItem('token');\n\n    return (\n        //<button onClick={() => {\n        //    console.log(post)\n        //    console.log(postUser)\n        //}}>Click check</button>\n\n        <div className=\"item\" onClick={() => console.log(postUser)}>\n            <div className=\"item-post\">\n                <div className=\"post-item-list\">\n                    {postUser\n                        ? <div className=\"info-user\">\n                            <img src={prof} className=\"user-avatar\" alt=\"prof\" />\n                            <p> {postUser.name}</p>\n                        </div>\n                        : <div className=\"info-user\">\n                            <img src={deletProf} className=\"user-avatar\" alt=\"prof\" />\n                            <p> This user have bin deleted</p>\n                        </div>}\n                    {/*<div className=\"info-user\">\n                        <img src={prof} className=\"user-avatar\" alt=\"prof\" />\n                        <p> {postUser.name}</p>\n                    </div>*/}\n                    <div className=\"info-post\">\n                        <p className=\"title\">{post.title}</p>\n                        {/*<img src={pizza} alt=\"img\" className=\"post-image\" />*/}\n                        <ul className=\"full-text\">{post.fullText}</ul>\n                        <div className=\"footer-post\">\n                            <span className=\"date\">{newDate}</span>\n                            <div className=\"interaction\">\n                                <button\n                                    className='like'\n                                    onClick={(e) => {\n                                        if (isAuthorized) {\n                                            e.target.classList.toggle(\"liked\")\n                                        } else {\n                                            alert('Login first')\n                                        }\n                                    }\n                                    }><i className=\"fa fa-heart\"></i></button>\n                                {/*<button className='delete'><i className=\"fa fa-trash-o\"></i></button>*/}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}