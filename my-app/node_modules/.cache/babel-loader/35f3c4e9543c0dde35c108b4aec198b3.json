{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/registration-form/loginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, someErorr } from '../../actions';\nimport SimpleSnackbar from '../snackbar';\nimport { useSelector } from 'react-redux';\nimport './loginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  Server\n}) => {\n  _s();\n\n  //useState\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); //useDispatch\n\n  const dispatch = useDispatch(); //useHistory\n\n  let history = useHistory(); //useSelector\n\n  const error = useSelector(state => state.error);\n  const isSnackbar = useSelector(state => state.isSnackbar);\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const customLogin = () => {\n    Server.loginUser(email, password).then(res => {\n      nav(`/list/${0}`);\n      localStorage.setItem('token', res.data.token);\n\n      if (localStorage.getItem('token')) {\n        Server.authorizationUser(localStorage.getItem('token')).then(res => {\n          dispatch(addUser(res.data));\n          let saveUser = JSON.stringify(res.data);\n          localStorage.setItem('user', saveUser);\n          console.log(JSON.parse(localStorage.getItem('user')));\n        });\n      }\n\n      dispatch(someErorr(false));\n    }).catch(e => {\n      nav('/login');\n      console.log(e);\n      dispatch(someErorr(true));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-authorization\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\",\n            title: \"Enter your email\",\n            value: email,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            title: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"forgotPass authHover\",\n              onClick: e => e.preventDefault(),\n              children: \"Forgot password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"signUp authHover\",\n              onClick: () => nav(\"/signUp\"),\n              children: \"sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-primary cancel\",\n          onClick: () => nav(\"/\"),\n          children: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary confirm\",\n          onClick: customLogin,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleSnackbar, {\n      isSnackbar: isSnackbar,\n      color: 'success',\n      message: 'Deleted successful!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"6scXLpc0S79Wds46MosF17W3RXs=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = LoginForm;\nexport default WithServer()(LoginForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/registration-form/loginForm.js"],"names":["React","useState","useHistory","useDispatch","WithServer","addUser","someErorr","SimpleSnackbar","useSelector","LoginForm","Server","email","setEmail","password","setPassword","dispatch","history","error","state","isSnackbar","nav","link","push","customLogin","loginUser","then","res","localStorage","setItem","data","token","getItem","authorizationUser","saveUser","JSON","stringify","console","log","parse","catch","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, someErorr } from '../../actions';\nimport SimpleSnackbar from '../snackbar';\n\nimport { useSelector } from 'react-redux';\nimport './loginForm.css';\n\nconst LoginForm = ({ Server }) => {\n    //useState\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useHistory\n    let history = useHistory();\n\n    //useSelector\n    const error = useSelector(state => state.error)\n    const isSnackbar = useSelector(state => state.isSnackbar)\n\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    const customLogin = () => {\n        Server.loginUser(email, password)\n            .then(res => {\n                nav(`/list/${0}`)\n                localStorage.setItem('token', res.data.token)\n                if (localStorage.getItem('token')) {\n                    Server.authorizationUser(localStorage.getItem('token'))\n                        .then(res => {\n                            dispatch(addUser(res.data))\n                            let saveUser = JSON.stringify(res.data)\n                            localStorage.setItem('user', saveUser)\n                            console.log(JSON.parse(localStorage.getItem('user')))\n                        })\n                }\n                dispatch(someErorr(false))\n            })\n            .catch(e => {\n                nav('/login')\n                console.log(e)\n                dispatch(someErorr(true))\n            })\n    }\n\n    return (\n        <div className=\"post-list\">\n            <div className=\"modal-authorization\">\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control\"\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            title='Enter your email'\n                            value={email}\n                            onChange={(e) => { setEmail(e.target.value) }} />\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            title='Enter your password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)} />\n                        <div className=\"auth-group\">\n                            <button className=\"forgotPass authHover\" onClick={(e) => e.preventDefault()}>Forgot password</button>\n                            <button className=\"signUp authHover\" onClick={() => nav(\"/signUp\")}>sign up</button>\n                        </div>\n\n                        <small className=\"form-text text-muted\"></small>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-outline-primary cancel\" onClick={() => nav(\"/\")}>Сancel</button>\n                    <button type=\"submit\" className=\"btn btn-primary confirm\" onClick={customLogin}>Sign in</button>\n                    {error ? <p className='error'>Что-то пошло не так....</p> : <p></p>}\n                </form>\n            </div>\n            <SimpleSnackbar isSnackbar={isSnackbar} color={'success'} message={'Deleted successful!'} />\n        </div >\n    )\n}\n\n\nexport default WithServer()(LoginForm);\n"]},"metadata":{},"sourceType":"module"}