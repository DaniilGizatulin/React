{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/modalAuthorized/modalAuthorized.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport WithServer from '../../hoc';\nimport LoginForm from '../../login-form';\nimport './modalAuthorized.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalAuthorized = ({\n  showModal,\n  setShowModal\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //useSelector\n  //useRef\n  const refModalLiked = useRef();\n  const refModolLikedBtn = useRef();\n  const refLoginForm = useRef();\n  const refLoginFormBtn = useRef();\n  const claz = showModal; //useState\n\n  const [showLogin, setShowLogin] = useState(false);\n  useOnClickOutside(refModalLiked, e => {\n    if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) setShowModal('hidden');\n  });\n  useOnClickOutside(refLoginForm, e => {\n    if (refLoginFormBtn.current && !refLoginFormBtn.current.contains(e.target)) setShowLogin(false);\n  });\n\n  function useOnClickOutside(ref, handler) {\n    _s();\n\n    useEffect(() => {\n      const listener = event => {\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  _s(useOnClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-liked ${claz}`,\n      ref: refModalLiked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-modal-liked\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-liked-title\",\n          children: \"Do u like post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-like\",\n          ref: refModolLikedBtn,\n          onClick: () => setShowModal('hidden'),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-first\",\n        children: \"login first\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-modal-liked\",\n        onClick: () => {\n          setShowLogin(true);\n          setShowModal('hidden');\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `small-login-form ${showLogin ? 'show' : 'hidden'}`,\n      ref: refLoginForm,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        show: showLogin,\n        setShow: setShowLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ModalAuthorized, \"K43jpDENSb1CpvY19LunqSCgp3c=\", true);\n\n_c = ModalAuthorized;\nexport default WithServer()(ModalAuthorized);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAuthorized\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/modalAuthorized/modalAuthorized.js"],"names":["React","useRef","useState","useEffect","WithServer","LoginForm","ModalAuthorized","showModal","setShowModal","refModalLiked","refModolLikedBtn","refLoginForm","refLoginFormBtn","claz","showLogin","setShowLogin","useOnClickOutside","e","current","contains","target","ref","handler","listener","event","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport WithServer from '../../hoc';\nimport LoginForm from '../../login-form';\n\nimport './modalAuthorized.sass';\n\nconst ModalAuthorized = ({ showModal, setShowModal }) => {\n    //useSelector\n\n    //useRef\n    const refModalLiked = useRef()\n    const refModolLikedBtn = useRef()\n    const refLoginForm = useRef()\n    const refLoginFormBtn = useRef()\n\n    const claz = showModal\n\n    //useState\n    const [showLogin, setShowLogin] = useState(false)\n\n\n    useOnClickOutside(refModalLiked, (e) => {\n        if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target))\n            setShowModal('hidden')\n    });\n\n    useOnClickOutside(refLoginForm, (e) => {\n        if (refLoginFormBtn.current && !refLoginFormBtn.current.contains(e.target))\n            setShowLogin(false)\n    });\n\n    function useOnClickOutside(ref, handler) {\n        useEffect(\n            () => {\n                const listener = (event) => {\n                    if (!ref.current || ref.current.contains(event.target)) {\n                        return;\n                    }\n                    handler(event);\n                };\n                document.addEventListener(\"mousedown\", listener);\n                document.addEventListener(\"touchstart\", listener);\n                return () => {\n                    document.removeEventListener(\"mousedown\", listener);\n                    document.removeEventListener(\"touchstart\", listener);\n                };\n            },\n            [ref, handler]\n        );\n    }\n\n    return (\n        <>\n            <div className={`modal-liked ${claz}`} ref={refModalLiked}>\n                <div className='header-modal-liked'>\n                    <p className='modal-liked-title'>Do u like post?</p>\n                    <button className='close-modal-like' ref={refModolLikedBtn} onClick={() => setShowModal('hidden')}>X</button>\n                </div>\n                <p className='login-first'>login first</p>\n                <hr />\n                <button className='login-modal-liked' onClick={() => {\n                    setShowLogin(true)\n                    setShowModal('hidden')\n                }}>Sign in</button>\n            </div>\n            <div className={`small-login-form ${showLogin ? 'show' : 'hidden'}`} ref={refLoginForm}>\n                <LoginForm show={showLogin} setShow={setShowLogin} />\n            </div>\n\n        </>\n    )\n}\n\nexport default WithServer()(ModalAuthorized);"]},"metadata":{},"sourceType":"module"}