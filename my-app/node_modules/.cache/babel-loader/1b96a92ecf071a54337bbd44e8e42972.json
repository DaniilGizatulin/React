{"ast":null,"code":"import axios from 'axios';\nimport { POSTS, LOADED, ERROR, DELETED } from './types';\n\nconst setPosts = posts => {\n  return dispatch => dispatch({\n    type: POSTS,\n    payload: posts\n  });\n};\n\nconst getPosts = (skip = 0, limit = 10) => {\n  return dispatch => axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts?limit=${limit}&skip=${skip}`).then(res => {\n    dispatch({\n      type: POSTS,\n      payload: res.data\n    });\n    dispatch({\n      type: LOADED\n    });\n  }).catch(e => dispatch({\n    type: ERROR\n  }));\n};\n\nconst loaded = () => {\n  return dispatch => dispatch({\n    type: LOADED\n  });\n};\n\nconst fault = () => {\n  return dispatch => dispatch({\n    type: ERROR\n  });\n};\n\nconst deletePost = action => {\n  return dispatch => dispatch({\n    type: DELETED,\n    payload: action\n  });\n};\n\nexport { getPosts, setPosts, loaded, fault, deletePost };","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/redux/posts/actions.js"],"names":["axios","POSTS","LOADED","ERROR","DELETED","setPosts","posts","dispatch","type","payload","getPosts","skip","limit","get","then","res","data","catch","e","loaded","fault","deletePost","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,SAA9C;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,SAAQC,QAAD,IACHA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,KAAR;AAAeQ,IAAAA,OAAO,EAAEH;AAAxB,GAAD,CADZ;AAEH,CAHD;;AAKA,MAAMI,QAAQ,GAAG,CAACC,IAAI,GAAG,CAAR,EAAWC,KAAK,GAAG,EAAnB,KAA0B;AACvC,SAAQL,QAAD,IACHP,KAAK,CAACa,GAAN,CAAW,iEAAgED,KAAM,SAAQD,IAAK,EAA9F,EACKG,IADL,CACUC,GAAG,IAAI;AACTR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,KAAR;AAAeQ,MAAAA,OAAO,EAAEM,GAAG,CAACC;AAA5B,KAAD,CAAR;AACAT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACH,GAJL,EAKKe,KALL,CAKWC,CAAC,IAAIX,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CALxB,CADJ;AAQH,CATD;;AAYA,MAAMgB,MAAM,GAAG,MAAM;AACjB,SAAQZ,QAAD,IACHA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CADZ;AAEH,CAHD;;AAKA,MAAMkB,KAAK,GAAG,MAAM;AAChB,SAAQb,QAAD,IACHA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CADZ;AAEH,CAHD;;AAKA,MAAMkB,UAAU,GAAIC,MAAD,IAAY;AAC3B,SAAQf,QAAD,IACHA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,OAAR;AAAiBK,IAAAA,OAAO,EAAEa;AAA1B,GAAD,CADZ;AAEH,CAHD;;AAKA,SAASZ,QAAT,EAAmBL,QAAnB,EAA6Bc,MAA7B,EAAqCC,KAArC,EAA4CC,UAA5C","sourcesContent":["import axios from 'axios';\nimport { POSTS, LOADED, ERROR, DELETED } from './types'\n\nconst setPosts = (posts) => {\n    return (dispatch) =>\n        dispatch({ type: POSTS, payload: posts })\n}\n\nconst getPosts = (skip = 0, limit = 10) => {\n    return (dispatch) =>\n        axios.get(`https://nodejs-test-api-blog.herokuapp.com/api/v1/posts?limit=${limit}&skip=${skip}`)\n            .then(res => {\n                dispatch({ type: POSTS, payload: res.data })\n                dispatch({ type: LOADED })\n            })\n            .catch(e => dispatch({ type: ERROR }))\n\n}\n\n\nconst loaded = () => {\n    return (dispatch) =>\n        dispatch({ type: LOADED })\n}\n\nconst fault = () => {\n    return (dispatch) =>\n        dispatch({ type: ERROR })\n}\n\nconst deletePost = (action) => {\n    return (dispatch) =>\n        dispatch({ type: DELETED, payload: action })\n}\n\nexport { getPosts, setPosts, loaded, fault, deletePost }"]},"metadata":{},"sourceType":"module"}