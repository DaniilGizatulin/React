{"ast":null,"code":"const initialState = {\n  error: false,\n  login: false,\n  user: null,\n  allUsers: null,\n  allPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'NEW_USER':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGIN':\n      return { ...state,\n        login: true\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        login: false,\n        user: null\n      };\n\n    case 'ERROR':\n      return { ...state,\n        error: action.payload\n      };\n\n    case 'ALL_USERS':\n      return { ...state,\n        allUsers: action.payload\n      };\n\n    case 'ALL_POSTS':\n      return { ...state,\n        allPosts: action.payload\n      };\n\n    case 'POST_ADD_TO_STATE':\n      const id = action.payload;\n      const itemInd = state.items.findIndex(item => item.id === id);\n\n      if (itemInd >= 0) {\n        const itemInState = state.items.find(item => item.id === id);\n        const newItem = { ...itemInState,\n          qtty: ++itemInState.qtty\n        };\n        return { ...state,\n          items: [...state.items.slice(0, itemInd), newItem, ...state.items.slice(itemInd + 1)],\n          totalPrice: state.totalPrice + newItem.price\n        };\n      } // товара раньше не было в корзине\n\n\n      const item = state.menu.find(item => item.id === id);\n      const newItem = {\n        title: item.title,\n        price: item.price,\n        url: item.url,\n        id: item.id,\n        qtty: 1\n      };\n      return { ...state,\n        items: [...state.items, newItem],\n        totalPrice: state.totalPrice + newItem.price\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/reducers/index.js"],"names":["initialState","error","login","user","allUsers","allPosts","reducer","state","action","type","payload","id","itemInd","items","findIndex","item","itemInState","find","newItem","qtty","slice","totalPrice","price","menu","title","url"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,KADU;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,IAAI,EAAE,IAHW;AAIjBC,EAAAA,QAAQ,EAAE,IAJO;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAArB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAK,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHL,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAAP;;AAKJ,SAAK,OAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAAEI,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,mBAAL;AACI,YAAMC,EAAE,GAAGH,MAAM,CAACE,OAAlB;AAEA,YAAME,OAAO,GAAGL,KAAK,CAACM,KAAN,CAAYC,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA1C,CAAhB;;AACA,UAAIC,OAAO,IAAI,CAAf,EAAkB;AACd,cAAMI,WAAW,GAAGT,KAAK,CAACM,KAAN,CAAYI,IAAZ,CAAiBF,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAArC,CAApB;AACA,cAAMO,OAAO,GAAG,EACZ,GAAGF,WADS;AAEZG,UAAAA,IAAI,EAAE,EAAEH,WAAW,CAACG;AAFR,SAAhB;AAIA,eAAO,EACH,GAAGZ,KADA;AAEHM,UAAAA,KAAK,EAAE,CACH,GAAGN,KAAK,CAACM,KAAN,CAAYO,KAAZ,CAAkB,CAAlB,EAAqBR,OAArB,CADA,EAEHM,OAFG,EAGH,GAAGX,KAAK,CAACM,KAAN,CAAYO,KAAZ,CAAkBR,OAAO,GAAG,CAA5B,CAHA,CAFJ;AAOHS,UAAAA,UAAU,EAAEd,KAAK,CAACc,UAAN,GAAmBH,OAAO,CAACI;AAPpC,SAAP;AAUH,OApBL,CAqBI;;;AACA,YAAMP,IAAI,GAAGR,KAAK,CAACgB,IAAN,CAAWN,IAAX,CAAgBF,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAApC,CAAb;AACA,YAAMO,OAAO,GAAG;AACZM,QAAAA,KAAK,EAAET,IAAI,CAACS,KADA;AAEZF,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAFA;AAGZG,QAAAA,GAAG,EAAEV,IAAI,CAACU,GAHE;AAIZd,QAAAA,EAAE,EAAEI,IAAI,CAACJ,EAJG;AAKZQ,QAAAA,IAAI,EAAE;AALM,OAAhB;AAQA,aAAO,EACH,GAAGZ,KADA;AAEHM,QAAAA,KAAK,EAAE,CACH,GAAGN,KAAK,CAACM,KADN,EAEHK,OAFG,CAFJ;AAMHG,QAAAA,UAAU,EAAEd,KAAK,CAACc,UAAN,GAAmBH,OAAO,CAACI;AANpC,OAAP;;AAQJ;AACI,aAAOf,KAAP;AAxER;AA0EH,CA3ED;;AA8EA,eAAeD,OAAf","sourcesContent":["\nconst initialState = {\n    error: false,\n    login: false,\n    user: null,\n    allUsers: null,\n    allPosts: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'NEW_USER':\n            return {\n                ...state,\n                user: action.payload\n            }\n        case 'LOGIN':\n            return {\n                ...state,\n                login: true\n            }\n        case 'LOGOUT':\n            return {\n                ...state,\n                login: false,\n                user: null\n            }\n        case 'ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        case 'ALL_USERS':\n            return {\n                ...state,\n                allUsers: action.payload\n            }\n        case 'ALL_POSTS':\n            return {\n                ...state,\n                allPosts: action.payload\n            }\n        case 'POST_ADD_TO_STATE':\n            const id = action.payload;\n\n            const itemInd = state.items.findIndex(item => item.id === id);\n            if (itemInd >= 0) {\n                const itemInState = state.items.find(item => item.id === id);\n                const newItem = {\n                    ...itemInState,\n                    qtty: ++itemInState.qtty\n                }\n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, itemInd),\n                        newItem,\n                        ...state.items.slice(itemInd + 1)\n                    ],\n                    totalPrice: state.totalPrice + newItem.price\n                }\n\n            }\n            // товара раньше не было в корзине\n            const item = state.menu.find(item => item.id === id);\n            const newItem = {\n                title: item.title,\n                price: item.price,\n                url: item.url,\n                id: item.id,\n                qtty: 1\n            };\n\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    newItem\n                ],\n                totalPrice: state.totalPrice + newItem.price\n            };\n        default:\n            return state\n    }\n}\n\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}