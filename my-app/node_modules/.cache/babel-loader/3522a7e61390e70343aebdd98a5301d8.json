{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc'; //import { loaded } from '../../actions'\n\nimport { loaded, createNewUser } from '../../redux/user/actions';\nimport Spinner from '../spinner';\nimport './registrationForm.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = ({\n  Server\n}) => {\n  _s();\n\n  //useSelector\n  const loading = useSelector(state => state.loading); //useDispatch\n\n  const dispatch = useDispatch(); //useState\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorRegistration, setError] = useState({\n    error: false,\n    message: ''\n  });\n  const [regForm, setRegForm] = useState({\n    name: '',\n    email: '',\n    password: ''\n  }); //useHistory\n\n  let history = useHistory();\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  useEffect(() => dispatch(loaded()), [dispatch, loading]);\n\n  const registerError = () => {\n    if (!name && !email && !password) {\n      setError({\n        error: true,\n        message: \"Заполните все поля!\"\n      });\n    }\n\n    if (!name && !email && password) {\n      setError({\n        error: true,\n        message: \"Введите Имя и Email! \"\n      });\n    }\n\n    if (!name && !password && email) {\n      setError({\n        error: true,\n        message: \"Введите Имя и Пароль! \"\n      });\n    }\n\n    if (!email && !password && name) {\n      setError({\n        error: true,\n        message: \"Введите Email и Пароль! \"\n      });\n    }\n\n    if (!email && password && name) {\n      setError({\n        error: true,\n        message: \"Введите Email! \"\n      });\n    }\n\n    if (!password && email && name) {\n      setError({\n        error: true,\n        message: \"Введите Пароль! \"\n      });\n    }\n\n    if (!name && password && email) {\n      setError({\n        error: true,\n        message: \"Введите Имя! \"\n      });\n    }\n\n    if (!name || !password || !email) {\n      setTimeout(() => setError({\n        error: false,\n        message: ''\n      }), 1800);\n    }\n  };\n\n  const registerUser = () => {\n    //Server.createNewUser(email, password, name, history, dispatch)\n    //dispatch(createNewUser(email, password, name, history))\n    dispatch(createNewUser(regForm.name, regForm.password, regForm.email, history));\n    registerError();\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-form\",\n    onClick: () => console.log(regForm),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-registration\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            className: `form-control ${errorRegistration.error && !name && 'shadow-error'}`,\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter name\" //value={name}\n            ,\n            value: regForm.name,\n            onChange: e => setRegForm({\n              name: e.target.value\n            }) //onChange={(e) => setName(e.target.value)} \n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"What is your name ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: `form-control ${errorRegistration.error && !email && 'shadow-error'}`,\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\" //value={email}\n            ,\n            value: regForm.email,\n            onChange: e => setRegForm({\n              email: e.target.value,\n              name: regForm.name\n            }) //onChange={(e) => setEmail(e.target.value)} \n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `form-control ${errorRegistration.error && !password && 'shadow-error'}`,\n            placeholder: \"Password\" //value={password}\n            ,\n            value: regForm.password,\n            onChange: e => setRegForm({\n              password: e.target.value,\n              name: regForm.name,\n              email: regForm.email\n            }) //onChange={(e) => setPassword(e.target.value)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: [\"Password must be at least 5 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 105\n            }, this), \" We will never share your password with anyone.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cancel\",\n          onClick: () => nav(`/list/page${1}/?limit=10&skip=${0}`),\n          children: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"confirm\",\n          onClick: registerUser,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), errorRegistration.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorRegistration.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"vAWRNiXQl9XQTQDle/VLB9EgS5k=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = RegistrationForm;\nexport default WithServer()(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","WithServer","loaded","createNewUser","Spinner","RegistrationForm","Server","loading","state","dispatch","name","setName","email","setEmail","password","setPassword","errorRegistration","setError","error","message","regForm","setRegForm","history","nav","link","push","registerError","setTimeout","registerUser","console","log","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\n//import { loaded } from '../../actions'\nimport { loaded, createNewUser } from '../../redux/user/actions'\nimport Spinner from '../spinner'\n\nimport './registrationForm.sass';\n\nconst RegistrationForm = ({ Server }) => {\n    //useSelector\n    const loading = useSelector(state => state.loading)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useState\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [errorRegistration, setError] = useState({ error: false, message: '' })\n\n    const [regForm, setRegForm] = useState({ name: '', email: '', password: '' })\n\n    //useHistory\n    let history = useHistory();\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    useEffect(() => dispatch(loaded()), [dispatch, loading])\n\n    const registerError = () => {\n        if (!name && !email && !password) { setError({ error: true, message: \"Заполните все поля!\" }) }\n        if (!name && !email && password) { setError({ error: true, message: \"Введите Имя и Email! \" }) }\n        if (!name && !password && email) { setError({ error: true, message: \"Введите Имя и Пароль! \" }) }\n        if (!email && !password && name) { setError({ error: true, message: \"Введите Email и Пароль! \" }) }\n        if (!email && password && name) { setError({ error: true, message: \"Введите Email! \" }) }\n        if (!password && email && name) { setError({ error: true, message: \"Введите Пароль! \" }) }\n        if (!name && password && email) { setError({ error: true, message: \"Введите Имя! \" }) }\n        if (!name || !password || !email) {\n            setTimeout(() => setError({ error: false, message: '' }), 1800)\n        }\n    }\n\n    const registerUser = () => {\n        //Server.createNewUser(email, password, name, history, dispatch)\n        //dispatch(createNewUser(email, password, name, history))\n        dispatch(createNewUser(regForm.name, regForm.password, regForm.email, history))\n        registerError()\n    }\n\n\n    if (loading) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"registration-form\" onClick={() => console.log(regForm)}>\n            <div className=\"modal-registration\">\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input\n                            type=\"name\"\n                            className={`form-control ${errorRegistration.error && !name && 'shadow-error'}`}\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter name\"\n                            //value={name}\n                            value={regForm.name}\n                            onChange={(e) => setRegForm({ name: e.target.value })}\n                        //onChange={(e) => setName(e.target.value)} \n                        />\n                        <small className=\"form-text text-muted\">What is your name ?</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input\n                            type=\"email\"\n                            className={`form-control ${errorRegistration.error && !email && 'shadow-error'}`}\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            //value={email}\n                            value={regForm.email}\n                            onChange={(e) => setRegForm({ email: e.target.value, name: regForm.name })}\n                        //onChange={(e) => setEmail(e.target.value)} \n                        />\n                        <small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${errorRegistration.error && !password && 'shadow-error'}`}\n                            placeholder=\"Password\"\n                            //value={password}\n                            value={regForm.password}\n                            onChange={(e) => setRegForm({ password: e.target.value, name: regForm.name, email: regForm.email })}\n                        //onChange={(e) => setPassword(e.target.value)}\n                        />\n                        <small className=\"form-text text-muted\">Password must be at least 5 characters. <br /> We will\n                 never share your password with anyone.</small>\n                    </div>\n                    <button type=\"submit\" className=\"cancel\" onClick={() => nav(`/list/page${1}/?limit=10&skip=${0}`)}>Сancel</button>\n                    <button type=\"submit\" className=\"confirm\" onClick={registerUser}>Sign Up</button>\n                    {errorRegistration.error && <p className='error'>{errorRegistration.message}</p>}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default WithServer()(RegistrationForm);"]},"metadata":{},"sourceType":"module"}