{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc'; //import { loaded } from '../../actions';\n\nimport Spinner from '../spinner';\nimport SpinnerImage from './spinner-image';\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router';\nimport './editor-profile.sass';\nimport { loaded, deleteUser } from '../../redux/user/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorProfile = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'; // Modal \n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //useState\n\n\n  const [name, setName] = useState('');\n  const [currentUser, setUser] = useState({});\n  const [loadingImage, setLoadingImage] = useState(false); //History\n\n  const history = useHistory(); //useDispatch\n\n  const dispatch = useDispatch(); //useSelector\n  //const user = useSelector(state => state.user)\n  //const loading = useSelector(state => state.loading)\n  //new\n\n  const user = useSelector(state => state.userState.user);\n  const loading = useSelector(state => state.userState.loading); //useRef\n\n  const refAvatar = useRef();\n  useEffect(() => {\n    setUser(user);\n  }, [dispatch, user]);\n  const isAuthorized = localStorage.getItem('token');\n\n  const changeName = (id, token, name) => {\n    Server.updateUserName(id, token, name, dispatch).then(res => {\n      setUser({ ...currentUser,\n        name\n      });\n      setName('');\n    });\n  };\n\n  const updateAvatar = e => {\n    setLoadingImage(true);\n    let formData = new FormData();\n    formData.append('avatar', e.target.files[0]);\n    Server.updateUserAvatar(user._id, isAuthorized, formData, dispatch).then(() => setLoadingImage(false));\n  };\n\n  const delUser = () => {\n    //Server.deleteUser(user._id, isAuthorized, dispatch, history)\n    //    .then(res => handleClose())\n    dispatch(deleteUser(user._id, isAuthorized, history));\n    handleClose();\n  };\n\n  const chekUserInState = obj => {\n    for (let key in obj) {\n      return false;\n    }\n\n    return true;\n  }; //if user = true - get avatar\n\n\n  useEffect(() => {\n    if (!chekUserInState(user)) {\n      Server.getImage(refAvatar, user.avatar, defaultAvatar, '');\n      dispatch(loaded());\n    } else {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this);\n    } //currentUser.avatar !== \n\n  }, [Server, dispatch, user, refAvatar]);\n\n  if (loading || !user || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-editor-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"editor-profile\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-avatar\",\n          children: [loadingImage ? /*#__PURE__*/_jsxDEV(SpinnerImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"img\",\n            ref: refAvatar,\n            src: defaultAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"inp-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"file-upload\",\n              onChange: e => updateAvatar(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"editor-name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Change your name\",\n          title: \"Enter your new name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary save\",\n        onClick: () => changeName(user._id, isAuthorized, name),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger remove\",\n        onClick: handleShow,\n        children: \"Delete user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      show: show,\n      handleClose: handleClose,\n      remove: delUser,\n      label: 'Are you sure , what you want to delete the user?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorProfile, \"n9VYurWEjXGZglMQa5OLMFdXEb4=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = EditorProfile;\nexport default WithServer()(EditorProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorProfile\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","WithServer","Spinner","SpinnerImage","ModalConfirm","useHistory","loaded","deleteUser","EditorProfile","Server","defaultAvatar","show","setShow","handleClose","handleShow","name","setName","currentUser","setUser","loadingImage","setLoadingImage","history","dispatch","user","state","userState","loading","refAvatar","isAuthorized","localStorage","getItem","changeName","id","token","updateUserName","then","res","updateAvatar","e","formData","FormData","append","target","files","updateUserAvatar","_id","delUser","chekUserInState","obj","key","getImage","avatar","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\n//import { loaded } from '../../actions';\nimport Spinner from '../spinner';\nimport SpinnerImage from './spinner-image'\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router';\n\nimport './editor-profile.sass';\n\nimport { loaded, deleteUser } from '../../redux/user/actions'\n\n\nconst EditorProfile = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    // Modal \n    const [show, setShow] = useState(false)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    //useState\n    const [name, setName] = useState('')\n    const [currentUser, setUser] = useState({})\n    const [loadingImage, setLoadingImage] = useState(false)\n\n    //History\n    const history = useHistory()\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useSelector\n    //const user = useSelector(state => state.user)\n    //const loading = useSelector(state => state.loading)\n    //new\n    const user = useSelector(state => state.userState.user)\n    const loading = useSelector(state => state.userState.loading)\n\n\n    //useRef\n    const refAvatar = useRef()\n\n    useEffect(() => {\n        setUser(user)\n    }, [dispatch, user])\n\n    const isAuthorized = localStorage.getItem('token');\n\n    const changeName = (id, token, name) => {\n        Server.updateUserName(id, token, name, dispatch)\n            .then(res => {\n                setUser({ ...currentUser, name })\n                setName('')\n            })\n\n    }\n\n    const updateAvatar = (e) => {\n        setLoadingImage(true)\n        let formData = new FormData()\n        formData.append('avatar', e.target.files[0])\n        Server.updateUserAvatar(user._id, isAuthorized, formData, dispatch)\n            .then(() => setLoadingImage(false))\n    }\n\n    const delUser = () => {\n        //Server.deleteUser(user._id, isAuthorized, dispatch, history)\n        //    .then(res => handleClose())\n        dispatch(deleteUser(user._id, isAuthorized, history))\n        handleClose()\n    }\n\n    const chekUserInState = (obj) => {\n        for (let key in obj) {\n            return false\n        }\n        return true\n    }\n\n    //if user = true - get avatar\n    useEffect(() => {\n        if (!chekUserInState(user)) {\n            Server.getImage(refAvatar, user.avatar, defaultAvatar, '')\n            dispatch(loaded())\n        } else {\n            return <Spinner />\n        }\n        //currentUser.avatar !== \n    }, [Server, dispatch, user, refAvatar])\n\n\n    if (loading || !user || !currentUser) {\n        return <Spinner />\n    }\n    return (\n        <div className='container-editor-profile'>\n            <form className='editor-profile' onSubmit={(e) => e.preventDefault()}>\n                <header className='editor-header'>\n                    <div className='editor-avatar'>\n                        {/*<img alt='img' ref={refAvatar} src={defaultAvatar} />*/}\n                        {loadingImage ? <SpinnerImage /> : <img alt='img' ref={refAvatar} src={defaultAvatar} />}\n                        <label htmlFor='file-upload' className='inp-upload' >\n                            <i className=\"fa fa-camera\"></i>\n                            <input\n                                type='file'\n                                accept=\"image/*\"\n                                id=\"file-upload\"\n                                onChange={(e) => updateAvatar(e)}\n                            />\n                        </label>\n                    </div>\n                    <p className='editor-name'>{currentUser.name}</p>\n                </header>\n                <div className='inp-name'>\n                    <label >Name:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Change your name\"\n                        title='Enter your new name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <button className='btn btn-primary save' onClick={() => changeName(user._id, isAuthorized, name)}>Save</button>\n                <button type='button' className='btn btn-danger remove' onClick={handleShow}>Delete user</button>\n            </form>\n            <ModalConfirm show={show} handleClose={handleClose} remove={delUser} label={'Are you sure , what you want to delete the user?'} />\n        </div>\n    )\n}\n\nexport default WithServer()(EditorProfile);"]},"metadata":{},"sourceType":"module"}