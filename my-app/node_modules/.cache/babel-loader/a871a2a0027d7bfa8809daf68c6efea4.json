{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/app-header/app-header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport NavUser from './navuser';\nimport { setUser } from '../../redux/user/actions';\nimport { getPosts, setPosts, getAllPosts } from '../../redux/posts/actions'; //style\n\nimport './app-header.sass'; //image\n\nimport defaultAvatar from '../../image/no-avatar.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppHeader = ({\n  Server\n}) => {\n  _s();\n\n  //useSelector\n  const user = useSelector(state => state.userState.user);\n  const allPosts = useSelector(state => state.postState.allPosts); //useDispatch\n\n  const dispatch = useDispatch(); //useRef\n\n  const refSearch = useRef();\n  const refSearchBtn = useRef();\n  const refSearchDesktop = useRef(); // history\n\n  const history = useHistory(); //useState\n  //const [allPosts, setAllPosts] = useState([]);\n\n  const [showSearch, setShowSearch] = useState(false);\n  const [showSearchDesktop, setShowSearchDesktop] = useState(false);\n  const [foundMessage, setFoundMessage] = useState(false);\n  const [foundPost, setFoundPost] = useState([]);\n  const [image, setImage] = useState(defaultAvatar); //filterPost \n\n  const filterPost = (posts, term) => {\n    return posts.filter(post => {\n      return post.title.indexOf(term) > -1;\n    });\n  }; // Search Posts\n\n\n  const autoSerachPost = (allPosts, searchText) => {\n    let foundPost = filterPost(allPosts, searchText);\n    dispatch(setPosts(foundPost));\n    foundPost.length === 0 ? setFoundMessage(true) : setFoundMessage(false);\n\n    if (searchText.length === 0) {\n      dispatch(getPosts(0));\n    }\n  };\n\n  useEffect(() => {\n    if (allPosts.length === 0) {\n      dispatch(getAllPosts(0, 0));\n    }\n  }, [dispatch, allPosts]); // navgition\n\n  const navDesktop = (link, event) => {\n    history.push(link);\n    setShowSearchDesktop(false);\n  }; // localStorage \n  //const isAuthorized = localStorage.getItem('token');\n\n\n  const isAuthorized = useSelector(state => state.userState.isAuthorized);\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); // if user - false , dispatch user in state\n\n  useEffect(() => {\n    if (!user._id && isAuthorizedUser) {\n      dispatch(setUser(isAuthorizedUser));\n    }\n  }, [dispatch, isAuthorized, isAuthorizedUser, user]); // if user = true, get avatar\n\n  function checkImage(imageSrc, good, bad) {\n    const img = new Image();\n    img.src = imageSrc;\n    img.onload = good;\n    img.onerror = bad;\n  }\n\n  useEffect(() => {\n    if (user._id && isAuthorized) {\n      checkImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`, () => {\n        setImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`);\n      }, () => {\n        setImage(defaultAvatar);\n      });\n    }\n  }, [isAuthorized, user]); //Close outside searchMobile and Hamburger\n\n  useEffect(() => {\n    const listener = e => {\n      if (!refSearch.current || refSearch.current.contains(e.target)) {\n        return;\n      } else if (refSearchBtn.current && !refSearchBtn.current.contains(e.target)) {\n        setShowSearch(false);\n      }\n\n      if (!refSearchDesktop.current || refSearchDesktop.current.contains(e.target)) {\n        return;\n      } else {\n        setShowSearchDesktop(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  }, [refSearch, refSearchBtn, refSearchDesktop]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      onClick: () => console.log(isAuthorized),\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"header-logo\",\n        href: `/list/page${1}/?limit=10&skip=${0}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo1\",\n          children: \"Ficus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo2\",\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-light\",\n        ref: refSearchDesktop,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control search-panel\",\n            placeholder: \"Search...\",\n            onChange: e => {\n              setFoundPost(filterPost(allPosts, e.target.value));\n              e.target.value === '' ? setShowSearchDesktop(false) : setShowSearchDesktop(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `response-search ${showSearchDesktop ? 'show' : 'hidden'}`,\n            children: [foundPost.map(post => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navDesktop(`/post/${post._id}`),\n              children: post.title\n            }, post._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 52\n            }, this)), foundPost.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"not-found-message\",\n              children: \"Not found...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), user && isAuthorized ? /*#__PURE__*/_jsxDEV(NavUser, {\n        avatar: image,\n        user: user,\n        refSearchBtn: refSearchBtn,\n        showSearch: showSearch,\n        setShowSearch: setShowSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          ref: refSearchBtn,\n          type: \"button\",\n          className: \"mobile-search\",\n          onClick: () => {\n            history.push(`/list/page${1}/?limit=10&skip=${0}`);\n            setShowSearch(!showSearch);\n          },\n          children: showSearch ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"log\",\n          onClick: () => history.push(\"/login\"),\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `inp-search ${showSearch && 'search-active'}`,\n      ref: refSearch,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-outline\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          id: \"form1\",\n          className: \"form-control\",\n          placeholder: \"Search...\",\n          onBlur: e => e.target.value = '',\n          onChange: e => autoSerachPost(allPosts, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), foundMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-found-message\",\n      children: \"Not found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppHeader, \"LKXHBkUchq1/1ofD5xfivmg8QWY=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = AppHeader;\nexport default WithServer()(AppHeader);\n\nvar _c;\n\n$RefreshReg$(_c, \"AppHeader\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/app-header/app-header.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","WithServer","NavUser","setUser","getPosts","setPosts","getAllPosts","defaultAvatar","AppHeader","Server","user","state","userState","allPosts","postState","dispatch","refSearch","refSearchBtn","refSearchDesktop","history","showSearch","setShowSearch","showSearchDesktop","setShowSearchDesktop","foundMessage","setFoundMessage","foundPost","setFoundPost","image","setImage","filterPost","posts","term","filter","post","title","indexOf","autoSerachPost","searchText","length","navDesktop","link","event","push","isAuthorized","isAuthorizedUser","JSON","parse","localStorage","getItem","_id","checkImage","imageSrc","good","bad","img","Image","src","onload","onerror","avatar","listener","e","current","contains","target","document","addEventListener","removeEventListener","console","log","value","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport NavUser from './navuser';\nimport { setUser } from '../../redux/user/actions'\nimport { getPosts, setPosts, getAllPosts } from '../../redux/posts/actions'\n\n//style\nimport './app-header.sass';\n\n//image\nimport defaultAvatar from '../../image/no-avatar.jpg'\n\nconst AppHeader = ({ Server }) => {\n    //useSelector\n    const user = useSelector(state => state.userState.user)\n    const allPosts = useSelector(state => state.postState.allPosts)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useRef\n    const refSearch = useRef()\n    const refSearchBtn = useRef()\n    const refSearchDesktop = useRef()\n\n    // history\n    const history = useHistory();\n\n    //useState\n    //const [allPosts, setAllPosts] = useState([]);\n    const [showSearch, setShowSearch] = useState(false)\n    const [showSearchDesktop, setShowSearchDesktop] = useState(false)\n    const [foundMessage, setFoundMessage] = useState(false);\n    const [foundPost, setFoundPost] = useState([])\n    const [image, setImage] = useState(defaultAvatar)\n\n    //filterPost \n    const filterPost = (posts, term) => {\n        return posts.filter(post => {\n            return post.title.indexOf(term) > -1\n        })\n    }\n    // Search Posts\n\n    const autoSerachPost = (allPosts, searchText) => {\n        let foundPost = filterPost(allPosts, searchText)\n        dispatch(setPosts(foundPost))\n        foundPost.length === 0 ? setFoundMessage(true) : setFoundMessage(false);\n        if (searchText.length === 0) {\n            dispatch(getPosts(0))\n        }\n    }\n\n    useEffect(() => {\n        if (allPosts.length === 0) {\n            dispatch(getAllPosts(0, 0))\n        }\n    }, [dispatch, allPosts])\n\n    // navgition\n    const navDesktop = (link, event) => {\n        history.push(link)\n        setShowSearchDesktop(false)\n    }\n\n    // localStorage \n    //const isAuthorized = localStorage.getItem('token');\n    const isAuthorized = useSelector(state => state.userState.isAuthorized)\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n\n    // if user - false , dispatch user in state\n    useEffect(() => {\n        if (!user._id && isAuthorizedUser) {\n            dispatch(setUser(isAuthorizedUser))\n        }\n    }, [dispatch, isAuthorized, isAuthorizedUser, user])\n\n\n\n    // if user = true, get avatar\n    function checkImage(imageSrc, good, bad) {\n        const img = new Image();\n        img.src = imageSrc;\n        img.onload = good;\n        img.onerror = bad;\n    }\n\n    useEffect(() => {\n        if (user._id && isAuthorized) {\n            checkImage(\n                `https://nodejs-test-api-blog.herokuapp.com${user.avatar}`,\n                () => { setImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`) },\n                () => { setImage(defaultAvatar) }\n            )\n        }\n    }, [isAuthorized, user])\n\n\n    //Close outside searchMobile and Hamburger\n    useEffect(() => {\n        const listener = (e) => {\n            if (!refSearch.current || refSearch.current.contains(e.target)) {\n                return;\n            } else if (refSearchBtn.current && !refSearchBtn.current.contains(e.target)) {\n                setShowSearch(false)\n            }\n            if (!refSearchDesktop.current || refSearchDesktop.current.contains(e.target)) {\n                return;\n            } else {\n                setShowSearchDesktop(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n        return () => {\n            document.removeEventListener(\"mousedown\", listener);\n            document.removeEventListener(\"touchstart\", listener);\n        };\n    }, [refSearch, refSearchBtn, refSearchDesktop])\n\n\n    return (\n        <>\n            <header className=\"header\" onClick={() => console.log(isAuthorized)}>\n                <a className='header-logo' href={`/list/page${1}/?limit=10&skip=${0}`}>\n                    <span className='logo1'>Ficus</span>\n                    <span className='logo2'>Test</span>\n                </a>\n                <nav className=\"navbar navbar-light\" ref={refSearchDesktop}>\n                    <form >\n                        <input\n                            type='search'\n                            className=\"form-control search-panel\"\n                            placeholder='Search...'\n                            onChange={(e) => {\n                                setFoundPost(filterPost(allPosts, e.target.value))\n                                e.target.value === '' ? setShowSearchDesktop(false) : setShowSearchDesktop(true)\n                            }}\n                        />\n                        <div className={`response-search ${showSearchDesktop ? 'show' : 'hidden'}`}>\n                            {foundPost.map(post => <button key={post._id} onClick={() => navDesktop(`/post/${post._id}`)}>{post.title}</button>)}\n                            {foundPost.length === 0 && <p className='not-found-message'>Not found...</p>}\n                        </div>\n                    </form>\n                </nav>\n                {\n                    user && isAuthorized\n                        ?\n                        <NavUser\n                            avatar={image}\n                            user={user}\n                            refSearchBtn={refSearchBtn}\n                            showSearch={showSearch}\n                            setShowSearch={setShowSearch}\n                        />\n                        :\n                        <div className='navigation'>\n                            <button ref={refSearchBtn} type=\"button\" className=\"mobile-search\" onClick={() => {\n                                history.push(`/list/page${1}/?limit=10&skip=${0}`)\n                                setShowSearch(!showSearch)\n                            }}>\n                                {showSearch\n                                    ? <p>X</p>\n                                    : <i className=\"fa fa-search\"></i>}\n                            </button>\n                            <button className=\"log\" onClick={() => history.push(\"/login\")}>SIGN IN</button>\n                        </div>\n\n\n                }\n            </header>\n            {/*SearchPanel*/}\n            <div className={`inp-search ${showSearch && 'search-active'}`} ref={refSearch}>\n                <div className=\"form-outline\">\n                    <input\n                        type=\"search\"\n                        id=\"form1\"\n                        className=\"form-control\"\n                        placeholder='Search...'\n                        onBlur={(e) => e.target.value = ''}\n                        onChange={(e) => autoSerachPost(allPosts, e.target.value)}\n                    />\n                </div>\n            </div>\n            {foundMessage && <p className='not-found-message'>Not found...</p>}\n        </>\n    )\n}\n\n\n\nexport default WithServer()(AppHeader);\n\n"]},"metadata":{},"sourceType":"module"}