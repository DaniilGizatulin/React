{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc'; //import { loaded } from '../../actions'\n\nimport { loaded, createNewUser } from '../../redux/user/actions';\nimport Spinner from '../spinner';\nimport './registrationForm.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = ({\n  Server\n}) => {\n  _s();\n\n  //useSelector\n  const loading = useSelector(state => state.loading); //useDispatch\n\n  const dispatch = useDispatch(); //useState\n  //const [name, setName] = useState('')\n  //const [email, setEmail] = useState('')\n  //const [password, setPassword] = useState('')\n\n  const [errorRegistration, setError] = useState({\n    error: false,\n    message: ''\n  });\n  const [registrationData, setData] = useState({\n    name: 'gfdg',\n    email: 'gfdg',\n    password: 'gfdg'\n  }); //useHistory\n\n  let history = useHistory();\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  useEffect(() => dispatch(loaded()), [dispatch, loading]);\n\n  const registerError = (name, email, password) => {\n    if (!name && !email && !password) {\n      setError({\n        error: true,\n        message: \"Заполните все поля!\"\n      });\n    }\n\n    if (!name && !email && password) {\n      setError({\n        error: true,\n        message: \"Введите Имя и Email! \"\n      });\n    }\n\n    if (!name && !password && email) {\n      setError({\n        error: true,\n        message: \"Введите Имя и Пароль! \"\n      });\n    }\n\n    if (!email && !password && name) {\n      setError({\n        error: true,\n        message: \"Введите Email и Пароль! \"\n      });\n    }\n\n    if (!email && password && name) {\n      setError({\n        error: true,\n        message: \"Введите Email! \"\n      });\n    }\n\n    if (!password && email && name) {\n      setError({\n        error: true,\n        message: \"Введите Пароль! \"\n      });\n    }\n\n    if (!name && password && email) {\n      setError({\n        error: true,\n        message: \"Введите Имя! \"\n      });\n    }\n\n    if (!name || !password || !email) {\n      setTimeout(() => setError({\n        error: false,\n        message: ''\n      }), 1800);\n    }\n  };\n\n  const registerUser = () => {\n    //dispatch(createNewUser(email, password, name, history))\n    if (registrationData.name && registrationData.email && registrationData.password) {\n      dispatch(createNewUser(registrationData.email, registrationData.password, registrationData.name, history));\n    }\n\n    registerError(registrationData.name, registrationData.email, registrationData.password);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-form\",\n    onClick: () => console.log(registrationData),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-registration\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            className: `form-control ${errorRegistration.error && !registrationData.name && 'shadow-error'}`,\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter name\" //value={name}\n            //onChange={(e) => setName(e.target.value)} \n            ,\n            value: registrationData.name,\n            onChange: e => setData({\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"What is your name ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: `form-control ${errorRegistration.error && !registrationData.email && 'shadow-error'}`,\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"Enter email\" //value={email}\n            //onChange={(e) => setEmail(e.target.value)} \n            ,\n            value: registrationData.email,\n            onChange: e => setData({\n              email: e.target.value,\n              name: registrationData.name\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: `form-control ${errorRegistration.error && !registrationData.password && 'shadow-error'}`,\n            placeholder: \"Password\" //value={password}\n            //onChange={(e) => setPassword(e.target.value)}\n            ,\n            value: registrationData.password,\n            onChange: e => setData({\n              password: e.target.value,\n              name: registrationData.name,\n              email: registrationData.email\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text text-muted\",\n            children: [\"Password must be at least 5 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 105\n            }, this), \" We will never share your password with anyone.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cancel\",\n          onClick: () => nav(`/list/page${1}/?limit=10&skip=${0}`),\n          children: \"\\u0421ancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"confirm\",\n          onClick: registerUser,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), errorRegistration.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorRegistration.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"uQvIiVwQVjrUZnptUPuhc3+V3ps=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = RegistrationForm;\nexport default WithServer()(RegistrationForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/registration-form/registrationForm.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","WithServer","loaded","createNewUser","Spinner","RegistrationForm","Server","loading","state","dispatch","errorRegistration","setError","error","message","registrationData","setData","name","email","password","history","nav","link","push","registerError","setTimeout","registerUser","console","log","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\n//import { loaded } from '../../actions'\nimport { loaded, createNewUser } from '../../redux/user/actions'\nimport Spinner from '../spinner'\n\nimport './registrationForm.sass';\n\nconst RegistrationForm = ({ Server }) => {\n    //useSelector\n    const loading = useSelector(state => state.loading)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useState\n    //const [name, setName] = useState('')\n    //const [email, setEmail] = useState('')\n    //const [password, setPassword] = useState('')\n    const [errorRegistration, setError] = useState({ error: false, message: '' })\n\n    const [registrationData, setData] = useState({ name: 'gfdg', email: 'gfdg', password: 'gfdg' })\n\n    //useHistory\n    let history = useHistory();\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    useEffect(() => dispatch(loaded()), [dispatch, loading])\n\n    const registerError = (name, email, password) => {\n        if (!name && !email && !password) { setError({ error: true, message: \"Заполните все поля!\" }) }\n        if (!name && !email && password) { setError({ error: true, message: \"Введите Имя и Email! \" }) }\n        if (!name && !password && email) { setError({ error: true, message: \"Введите Имя и Пароль! \" }) }\n        if (!email && !password && name) { setError({ error: true, message: \"Введите Email и Пароль! \" }) }\n        if (!email && password && name) { setError({ error: true, message: \"Введите Email! \" }) }\n        if (!password && email && name) { setError({ error: true, message: \"Введите Пароль! \" }) }\n        if (!name && password && email) { setError({ error: true, message: \"Введите Имя! \" }) }\n        if (!name || !password || !email) {\n            setTimeout(() => setError({ error: false, message: '' }), 1800)\n        }\n    }\n\n    const registerUser = () => {\n        //dispatch(createNewUser(email, password, name, history))\n        if (registrationData.name && registrationData.email && registrationData.password) {\n            dispatch(createNewUser(registrationData.email, registrationData.password, registrationData.name, history))\n        }\n        registerError(registrationData.name, registrationData.email, registrationData.password,)\n    }\n\n\n    if (loading) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"registration-form\" onClick={() => console.log(registrationData)}>\n            <div className=\"modal-registration\">\n                <form onSubmit={(e) => e.preventDefault()}>\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input\n                            type=\"name\"\n                            className={`form-control ${errorRegistration.error && !registrationData.name && 'shadow-error'}`}\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter name\"\n                            //value={name}\n                            //onChange={(e) => setName(e.target.value)} \n                            value={registrationData.name}\n                            onChange={(e) => setData({ name: e.target.value })}\n                        />\n                        <small className=\"form-text text-muted\">What is your name ?</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Email address</label>\n                        <input\n                            type=\"email\"\n                            className={`form-control ${errorRegistration.error && !registrationData.email && 'shadow-error'}`}\n                            aria-describedby=\"emailHelp\"\n                            placeholder=\"Enter email\"\n                            //value={email}\n                            //onChange={(e) => setEmail(e.target.value)} \n                            value={registrationData.email}\n                            onChange={(e) => setData({ email: e.target.value, name: registrationData.name })}\n                        />\n                        <small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${errorRegistration.error && !registrationData.password && 'shadow-error'}`}\n                            placeholder=\"Password\"\n                            //value={password}\n                            //onChange={(e) => setPassword(e.target.value)}\n                            value={registrationData.password}\n                            onChange={(e) => setData({ password: e.target.value, name: registrationData.name, email: registrationData.email })}\n                        />\n                        <small className=\"form-text text-muted\">Password must be at least 5 characters. <br /> We will\n                 never share your password with anyone.</small>\n                    </div>\n                    <button type=\"submit\" className=\"cancel\" onClick={() => nav(`/list/page${1}/?limit=10&skip=${0}`)}>Сancel</button>\n                    <button type=\"submit\" className=\"confirm\" onClick={registerUser}>Sign Up</button>\n                    {errorRegistration.error && <p className='error'>{errorRegistration.message}</p>}\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default WithServer()(RegistrationForm);"]},"metadata":{},"sourceType":"module"}