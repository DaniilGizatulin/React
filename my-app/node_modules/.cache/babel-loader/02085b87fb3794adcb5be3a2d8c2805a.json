{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/app-header/component/date-time/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './index.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateAndTime = () => {\n  _s();\n\n  function getZero(num) {\n    if (num >= 0 && num < 10) {\n      return `0${num}`;\n    } else {\n      return num;\n    }\n  }\n\n  const setDay = day => {\n    if (day === 0) {\n      return 'Sunday';\n    }\n\n    if (day === 1) {\n      return 'Monday';\n    }\n\n    if (day === 2) {\n      return 'Tuesday';\n    }\n\n    if (day === 3) {\n      return 'Wednesday';\n    }\n\n    if (day === 4) {\n      return 'Thursday';\n    }\n\n    if (day === 5) {\n      return 'Friday';\n    }\n\n    if (day === 6) {\n      return 'Saturday';\n    }\n  };\n\n  const [currentDate, setCurrentDate] = useState('');\n  useEffect(() => {\n    setInterval(() => {\n      let day = setDay(new Date().getDay());\n      let date = getZero(new Date().getDate()); //Current Date\n\n      let month = getZero(new Date().getMonth() + 1); //Current Month\n\n      let year = new Date().getFullYear(); //Current Year\n\n      let hours = getZero(new Date().getHours()); //Current Hours\n\n      let min = getZero(new Date().getMinutes()); //Current Minutes\n\n      let sec = getZero(new Date().getSeconds()); //Current Seconds\n\n      setCurrentDate(day + ' ' + date + '/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec);\n    }, 1000);\n  }, []);\n\n  if (currentDate.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"spinner-date\",\n      children: \"waiting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'Date-Time',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Time\",\n      children: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DateAndTime, \"4xbDKrnm2185XSqYyYOvXjh/+GE=\");\n\n_c = DateAndTime;\nexport default DateAndTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateAndTime\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/app-header/component/date-time/index.js"],"names":["React","useEffect","useState","DateAndTime","getZero","num","setDay","day","currentDate","setCurrentDate","setInterval","Date","getDay","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,WAASC,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,QAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,EAAtB,EAA0B;AACtB,aAAQ,IAAGA,GAAI,EAAf;AACH,KAFD,MAEO;AACH,aAAOA,GAAP;AACH;AACJ;;AAED,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACpB,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,QAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,QAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,SAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,WAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,UAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,QAAP;AACH;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACX,aAAO,UAAP;AACH;AACJ,GAtBD;;AAwBA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAAC,MAAM;AACd,UAAIH,GAAG,GAAGD,MAAM,CAAC,IAAIK,IAAJ,GAAWC,MAAX,EAAD,CAAhB;AACA,UAAIC,IAAI,GAAGT,OAAO,CAAC,IAAIO,IAAJ,GAAWG,OAAX,EAAD,CAAlB,CAFc,CAE4B;;AAC1C,UAAIC,KAAK,GAAGX,OAAO,CAAC,IAAIO,IAAJ,GAAWK,QAAX,KAAwB,CAAzB,CAAnB,CAHc,CAGkC;;AAChD,UAAIC,IAAI,GAAG,IAAIN,IAAJ,GAAWO,WAAX,EAAX,CAJc,CAIuB;;AACrC,UAAIC,KAAK,GAAGf,OAAO,CAAC,IAAIO,IAAJ,GAAWS,QAAX,EAAD,CAAnB,CALc,CAK8B;;AAC5C,UAAIC,GAAG,GAAGjB,OAAO,CAAC,IAAIO,IAAJ,GAAWW,UAAX,EAAD,CAAjB,CANc,CAM8B;;AAC5C,UAAIC,GAAG,GAAGnB,OAAO,CAAC,IAAIO,IAAJ,GAAWa,UAAX,EAAD,CAAjB,CAPc,CAO8B;;AAC5Cf,MAAAA,cAAc,CACVF,GAAG,GAAG,GAAN,GAAYM,IAAZ,GAAmB,GAAnB,GAAyBE,KAAzB,GAAiC,GAAjC,GAAuCE,IAAvC,GACE,GADF,GACQE,KADR,GACgB,GADhB,GACsBE,GADtB,GAC4B,GAD5B,GACkCE,GAFxB,CAAd;AAIH,KAZU,EAYR,IAZQ,CAAX;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIf,WAAW,CAACiB,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,wBAAO;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACKjB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/DD;;GAAML,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport './index.sass'\n\nconst DateAndTime = () => {\n\n    function getZero(num) {\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    const setDay = (day) => {\n        if (day === 0) {\n            return 'Sunday'\n        }\n        if (day === 1) {\n            return 'Monday'\n        }\n        if (day === 2) {\n            return 'Tuesday'\n        }\n        if (day === 3) {\n            return 'Wednesday'\n        }\n        if (day === 4) {\n            return 'Thursday'\n        }\n        if (day === 5) {\n            return 'Friday'\n        }\n        if (day === 6) {\n            return 'Saturday'\n        }\n    }\n\n    const [currentDate, setCurrentDate] = useState('');\n\n    useEffect(() => {\n        setInterval(() => {\n            let day = setDay(new Date().getDay())\n            let date = getZero(new Date().getDate()); //Current Date\n            let month = getZero(new Date().getMonth() + 1); //Current Month\n            let year = new Date().getFullYear(); //Current Year\n            let hours = getZero(new Date().getHours()); //Current Hours\n            let min = getZero(new Date().getMinutes()); //Current Minutes\n            let sec = getZero(new Date().getSeconds()); //Current Seconds\n            setCurrentDate(\n                day + ' ' + date + '/' + month + '/' + year\n                + ' ' + hours + ':' + min + ':' + sec\n            );\n        }, 1000)\n    }, []);\n\n    if (currentDate.length === 0) {\n        return <p className='spinner-date'>waiting...</p>\n    }\n\n    return (\n        <div className={'Date-Time'}>\n            <div className='Time'>\n                {currentDate}\n            </div>\n        </div >\n    )\n}\n\nexport default DateAndTime"]},"metadata":{},"sourceType":"module"}