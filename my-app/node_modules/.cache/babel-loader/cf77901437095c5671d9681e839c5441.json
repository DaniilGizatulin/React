{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/app-header/app-header.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'; //import { addUser, posts } from '../../actions';\n\nimport WithServer from '../hoc';\nimport NavUser from './navuser';\nimport './app-header.sass';\nimport { setUser } from '../../redux/user/actions';\nimport { getPosts, setPosts, getAllPosts } from '../../redux/posts/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppHeader = ({\n  Server\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'; //useSelector\n  //const user = useSelector(state => state.user)\n\n  const user = useSelector(state => state.userState.user);\n  const allPosts = useSelector(state => state.postState.allPosts); //useDispatch\n\n  const dispatch = useDispatch(); //useRef\n\n  const refAvatar = useRef();\n  const refSearch = useRef();\n  const refSearchBtn = useRef();\n  const refSearchDesktop = useRef(); // history\n\n  const history = useHistory(); //useState\n  //const [allPosts, setAllPosts] = useState([]);\n\n  const [showSearch, setShowSearch] = useState(false);\n  const [showSearchDesktop, setShowSearchDesktop] = useState(false);\n  const [foundMessage, setFoundMessage] = useState(false);\n  const [foundPost, setFoundPost] = useState([]); //filterPost \n\n  const filterPost = (posts, term) => {\n    return posts.filter(post => {\n      return post.title.indexOf(term) > -1;\n    });\n  }; // Search Posts\n\n\n  const autoSerachPost = (allPosts, searchText) => {\n    let foundPost = filterPost(allPosts, searchText);\n    dispatch(setPosts(foundPost));\n    foundPost.length === 0 ? setFoundMessage(true) : setFoundMessage(false);\n\n    if (searchText.length === 0) {\n      dispatch(getPosts(0));\n    }\n  };\n\n  useEffect(() => {\n    if (allPosts.length === 0) {\n      dispatch(getAllPosts(0, 0));\n    }\n  }, [dispatch, allPosts]); // navgition\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const navDesktop = (link, event) => {\n    nav(link);\n    setShowSearchDesktop(false);\n  }; // localStorage \n\n\n  const isAuthorized = localStorage.getItem('token');\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); // if user - false , dispatch user in state\n\n  const chekUserInState = obj => {\n    for (let key in obj) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    if (chekUserInState(user) && isAuthorizedUser) {\n      dispatch(setUser(isAuthorizedUser));\n    } else {\n      return;\n    }\n  }, [dispatch, isAuthorized, isAuthorizedUser, user]); // if user = true, get avatar\n\n  useEffect(() => {\n    if (user && isAuthorized) {\n      Server.getImage(refAvatar, user.avatar, defaultAvatar, '');\n    } else {\n      return;\n    }\n  }, [Server, isAuthorized, user]); //Close outside searchMobile and Hamburger\n\n  useOnClickOutside(refSearch, e => {\n    if (refSearchBtn.current && !refSearchBtn.current.contains(e.target)) setShowSearch(false);\n  });\n  useOnClickOutside(refSearchDesktop, e => {\n    //if (refSearchDesktopBtn.current && !refSearchDesktopBtn.current.contains(e.target))\n    setShowSearchDesktop(false);\n  });\n\n  function useOnClickOutside(ref, handler) {\n    _s();\n\n    useEffect(() => {\n      const listener = event => {\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  _s(useOnClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"header-logo\",\n        onClick: () => nav(`/list/page${1}/?limit=10&skip=${0}`),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo1\",\n          children: \"Ficus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo2\",\n          children: \"Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-light\",\n        ref: refSearchDesktop,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            className: \"form-control search-panel\",\n            placeholder: \"Search...\",\n            onChange: e => {\n              setFoundPost(filterPost(allPosts, e.target.value));\n              e.target.value === '' ? setShowSearchDesktop(false) : setShowSearchDesktop(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `response-search ${showSearchDesktop ? 'show' : 'hidden'}`,\n            children: [foundPost.map(post => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navDesktop(`/post/${post._id}`),\n              children: post.title\n            }, post._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 52\n            }, this)), foundPost.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"not-found-message\",\n              children: \"Not found...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), user && isAuthorized ?\n      /*#__PURE__*/\n      //navUser\n      _jsxDEV(NavUser, {\n        refAvatar: refAvatar,\n        user: user,\n        refSearchBtn: refSearchBtn,\n        showSearch: showSearch,\n        setShowSearch: setShowSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }, this) :\n      /*#__PURE__*/\n      //<button className=\"log\" onClick={() => nav(\"/login\")}>SIGN IN</button>\n      _jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          ref: refSearchBtn,\n          type: \"button\",\n          className: \"mobile-search\",\n          onClick: () => {\n            history.push(`/list/page${1}/?limit=10&skip=${0}`);\n            setShowSearch(!showSearch);\n          },\n          children: showSearch ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"log\",\n          onClick: () => nav(\"/login\"),\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `inp-search ${showSearch && 'search-active'}`,\n      ref: refSearch,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-outline\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          id: \"form1\",\n          className: \"form-control\",\n          placeholder: \"Search...\",\n          onBlur: e => e.target.value = '',\n          onChange: e => autoSerachPost(allPosts, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), foundMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"not-found-message\",\n      children: \"Not found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(AppHeader, \"bVBKMJmNKJ7rc4OTv5EL/gzyQ/E=\", true, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = AppHeader;\nexport default WithServer()(AppHeader);\n\nvar _c;\n\n$RefreshReg$(_c, \"AppHeader\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/app-header/app-header.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","WithServer","NavUser","setUser","getPosts","setPosts","getAllPosts","AppHeader","Server","defaultAvatar","user","state","userState","allPosts","postState","dispatch","refAvatar","refSearch","refSearchBtn","refSearchDesktop","history","showSearch","setShowSearch","showSearchDesktop","setShowSearchDesktop","foundMessage","setFoundMessage","foundPost","setFoundPost","filterPost","posts","term","filter","post","title","indexOf","autoSerachPost","searchText","length","nav","link","push","navDesktop","event","isAuthorized","localStorage","getItem","isAuthorizedUser","JSON","parse","chekUserInState","obj","key","getImage","avatar","useOnClickOutside","e","current","contains","target","ref","handler","listener","document","addEventListener","removeEventListener","value","map","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n//import { addUser, posts } from '../../actions';\nimport WithServer from '../hoc';\n\nimport NavUser from './navuser';\n\nimport './app-header.sass';\n\nimport { setUser } from '../../redux/user/actions'\nimport { getPosts, setPosts, getAllPosts } from '../../redux/posts/actions'\n\nconst AppHeader = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    //useSelector\n    //const user = useSelector(state => state.user)\n    const user = useSelector(state => state.userState.user)\n    const allPosts = useSelector(state => state.postState.allPosts)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useRef\n    const refAvatar = useRef()\n    const refSearch = useRef()\n    const refSearchBtn = useRef()\n    const refSearchDesktop = useRef()\n\n    // history\n    const history = useHistory();\n\n    //useState\n    //const [allPosts, setAllPosts] = useState([]);\n    const [showSearch, setShowSearch] = useState(false)\n    const [showSearchDesktop, setShowSearchDesktop] = useState(false)\n    const [foundMessage, setFoundMessage] = useState(false);\n    const [foundPost, setFoundPost] = useState([])\n\n    //filterPost \n    const filterPost = (posts, term) => {\n        return posts.filter(post => {\n            return post.title.indexOf(term) > -1\n        })\n    }\n    // Search Posts\n\n    const autoSerachPost = (allPosts, searchText) => {\n        let foundPost = filterPost(allPosts, searchText)\n        dispatch(setPosts(foundPost))\n        foundPost.length === 0 ? setFoundMessage(true) : setFoundMessage(false);\n        if (searchText.length === 0) {\n            dispatch(getPosts(0))\n        }\n    }\n\n    useEffect(() => {\n        if (allPosts.length === 0) {\n            dispatch(getAllPosts(0, 0))\n        }\n    }, [dispatch, allPosts])\n\n    // navgition\n    const nav = (link) => {\n        history.push(link);\n    }\n\n    const navDesktop = (link, event) => {\n        nav(link)\n        setShowSearchDesktop(false)\n    }\n\n    // localStorage \n    const isAuthorized = localStorage.getItem('token');\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n    // if user - false , dispatch user in state\n    const chekUserInState = (obj) => {\n        for (let key in obj) {\n            return false\n        }\n        return true\n    }\n    useEffect(() => {\n        if (chekUserInState(user) && isAuthorizedUser) {\n            dispatch(setUser(isAuthorizedUser))\n        } else {\n            return\n        }\n    }, [dispatch, isAuthorized, isAuthorizedUser, user])\n\n    // if user = true, get avatar\n    useEffect(() => {\n        if (user && isAuthorized) {\n            Server.getImage(refAvatar, user.avatar, defaultAvatar, '')\n        } else {\n            return\n        }\n    }, [Server, isAuthorized, user])\n\n    //Close outside searchMobile and Hamburger\n    useOnClickOutside(refSearch, (e) => {\n        if (refSearchBtn.current && !refSearchBtn.current.contains(e.target))\n            setShowSearch(false)\n    });\n\n    useOnClickOutside(refSearchDesktop, (e) => {\n        //if (refSearchDesktopBtn.current && !refSearchDesktopBtn.current.contains(e.target))\n        setShowSearchDesktop(false)\n    });\n\n    function useOnClickOutside(ref, handler) {\n        useEffect(() => {\n            const listener = (event) => {\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n                handler(event);\n            };\n            document.addEventListener(\"mousedown\", listener);\n            document.addEventListener(\"touchstart\", listener);\n            return () => {\n                document.removeEventListener(\"mousedown\", listener);\n                document.removeEventListener(\"touchstart\", listener);\n            };\n        },\n            [ref, handler]\n        );\n    }\n\n\n    return (\n        <>\n            <header className=\"header\">\n                <button className='header-logo' onClick={() => nav(`/list/page${1}/?limit=10&skip=${0}`)}>\n                    <span className='logo1'>Ficus</span>\n                    <span className='logo2'>Test</span>\n                </button>\n                <nav className=\"navbar navbar-light\" ref={refSearchDesktop}>\n                    <form >\n                        <input\n                            type='search'\n                            className=\"form-control search-panel\"\n                            placeholder='Search...'\n                            onChange={(e) => {\n                                setFoundPost(filterPost(allPosts, e.target.value))\n                                e.target.value === '' ? setShowSearchDesktop(false) : setShowSearchDesktop(true)\n                            }}\n                        />\n                        <div className={`response-search ${showSearchDesktop ? 'show' : 'hidden'}`}>\n                            {foundPost.map(post => <button key={post._id} onClick={() => navDesktop(`/post/${post._id}`)}>{post.title}</button>)}\n                            {foundPost.length === 0 && <p className='not-found-message'>Not found...</p>}\n                        </div>\n                    </form>\n                </nav>\n                {\n                    user && isAuthorized\n                        ?\n                        //navUser\n                        <NavUser\n                            refAvatar={refAvatar}\n                            user={user}\n                            refSearchBtn={refSearchBtn}\n                            showSearch={showSearch}\n                            setShowSearch={setShowSearch}\n                        />\n                        :\n                        //<button className=\"log\" onClick={() => nav(\"/login\")}>SIGN IN</button>\n                        <div className='navigation'>\n                            <button ref={refSearchBtn} type=\"button\" className=\"mobile-search\" onClick={() => {\n                                history.push(`/list/page${1}/?limit=10&skip=${0}`)\n                                setShowSearch(!showSearch)\n                            }}>\n                                {showSearch\n                                    ? <p>X</p>\n                                    : <i className=\"fa fa-search\"></i>}\n                            </button>\n                            <button className=\"log\" onClick={() => nav(\"/login\")}>SIGN IN</button>\n                        </div>\n\n\n                }\n            </header>\n            {/*SearchPanel*/}\n            <div className={`inp-search ${showSearch && 'search-active'}`} ref={refSearch}>\n                <div className=\"form-outline\">\n                    <input\n                        type=\"search\"\n                        id=\"form1\"\n                        className=\"form-control\"\n                        placeholder='Search...'\n                        onBlur={(e) => e.target.value = ''}\n                        onChange={(e) => autoSerachPost(allPosts, e.target.value)}\n                    />\n                </div>\n            </div>\n            {foundMessage && <p className='not-found-message'>Not found...</p>}\n        </>\n    )\n}\n\n\n\nexport default WithServer()(AppHeader);\n\n"]},"metadata":{},"sourceType":"module"}