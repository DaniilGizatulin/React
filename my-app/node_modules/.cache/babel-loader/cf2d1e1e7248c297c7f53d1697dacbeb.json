{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/user-list/user-list.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../../redux/user/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  //Dispatch\n  const dispatch = useDispatch(); //useSelector\n\n  const allUsers = useSelector(state => state.userState.allUsers);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch(getAllUsers());\n      },\n      children: \"Click for get allUsers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), allUsers.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.dateCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"370HzCRCJJmsKZHlLCWrpfwMfaM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/user-list/user-list.js"],"names":["React","useDispatch","useSelector","getAllUsers","UserList","dispatch","allUsers","state","userState","map","user","name","email","dateCreated"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFmB,CAInB;;AACA,QAAMK,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,QAA1B,CAA5B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBD,QAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKG,QAAQ,CAACG,GAAT,CAAaC,IAAI,IAAI;AAClB,0BAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACH;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAHG;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArBD;;GAAMT,Q;UAEeH,W,EAGAC,W;;;KALfE,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../../redux/user/actions';\n\nconst UserList = () => {\n    //Dispatch\n    const dispatch = useDispatch()\n\n    //useSelector\n    const allUsers = useSelector(state => state.userState.allUsers)\n\n    return (\n        <div className='user-list-container'>\n            <button onClick={() => {\n                dispatch(getAllUsers())\n            }}>Click for get allUsers</button>\n            {allUsers.map(user => {\n                return <div className='user-list'>\n                    <p>{user.name}</p>\n                    <p>{user.email}</p>\n                    <p>{user.dateCreated}</p>\n                </div>\n            })}\n        </div>\n    )\n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}