{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/creater-post-form/create-post-form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loaded, fault } from '../../actions';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport Error from '../error';\nimport Spinner from '../spinner';\nimport './create-post-form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePostForm = ({\n  Server\n}) => {\n  _s();\n\n  //useDispatch\n  const dispatch = useDispatch(); //useSelector\n\n  const loading = useSelector(state => state.loading);\n  const error = useSelector(state => state.error); //useState\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [fullText, setFullText] = useState('');\n  const [message, setMessage] = useState(''); //localStorage\n\n  const isAuthorized = localStorage.getItem('token');\n  const user = JSON.parse(localStorage.getItem('user')); //useHistory\n\n  let history = useHistory();\n\n  const nav = link => {\n    history.push(link);\n  };\n\n  const createPost = () => {\n    Server.createNewPost(title, fullText, description, isAuthorized).then(res => {\n      if (res.status >= 400) {\n        setMessage(res.data.error[0].message);\n      }\n\n      if (res.status === 200) {\n        dispatch(loaded());\n        setMessage('Success');\n        setTimeout(() => nav(`/user-posts/${user._id}`), 1500);\n      }\n    }).catch(e => dispatch(fault()));\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-create-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-create\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"description\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          children: \"Full text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          rows: \"3\",\n          placeholder: \"Full text\",\n          value: fullText,\n          onChange: e => setFullText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-create\",\n        onClick: createPost,\n        children: \"Create post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePostForm, \"8fBmYDk/r5qLla+HtVood43S8gQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});\n\n_c = CreatePostForm;\nexport default WithServer()(CreatePostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePostForm\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/creater-post-form/create-post-form.js"],"names":["React","useState","useDispatch","useSelector","loaded","fault","useHistory","WithServer","Error","Spinner","CreatePostForm","Server","dispatch","loading","state","error","title","setTitle","description","setDescription","fullText","setFullText","message","setMessage","isAuthorized","localStorage","getItem","user","JSON","parse","history","nav","link","push","createPost","createNewPost","then","res","status","data","setTimeout","_id","catch","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loaded, fault } from '../../actions';\nimport { useHistory } from 'react-router-dom';\nimport WithServer from '../hoc';\nimport Error from '../error';\nimport Spinner from '../spinner'\n\nimport './create-post-form.css'\n\nconst CreatePostForm = ({ Server }) => {\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useSelector\n    const loading = useSelector(state => state.loading)\n    const error = useSelector(state => state.error)\n\n    //useState\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [fullText, setFullText] = useState('')\n    const [message, setMessage] = useState('')\n\n    //localStorage\n    const isAuthorized = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    //useHistory\n    let history = useHistory();\n\n    const nav = (link) => {\n        history.push(link)\n    }\n\n    const createPost = () => {\n        Server.createNewPost(title, fullText, description, isAuthorized)\n            .then(res => {\n                if (res.status >= 400) {\n                    setMessage(res.data.error[0].message)\n                } if (res.status === 200) {\n                    dispatch(loaded())\n                    setMessage('Success')\n                    setTimeout(() => nav(`/user-posts/${user._id}`), 1500)\n                }\n            })\n            .catch(e => dispatch(fault()))\n    }\n\n    if (error) {\n        return <Error />\n    }\n\n    if (loading) {\n        return <Spinner />\n    }\n\n\n    return (\n        <div className='container-create-form'>\n            <form className='form-create' onSubmit={(e) => e.preventDefault()}>\n                <div className=\"form-group\">\n                    <label >Title</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlTextarea1\">Full text</label>\n                    <textarea\n                        className=\"form-control\"\n                        id=\"exampleFormControlTextarea1\"\n                        rows=\"3\"\n                        placeholder='Full text'\n                        value={fullText}\n                        onChange={(e) => setFullText(e.target.value)} >\n                    </textarea>\n                </div>\n                <p className='message'>{message}</p>\n                <button className='btn-create' onClick={createPost}>Create post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default WithServer()(CreatePostForm);"]},"metadata":{},"sourceType":"module"}