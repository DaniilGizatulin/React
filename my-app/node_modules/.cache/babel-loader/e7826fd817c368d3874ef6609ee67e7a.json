{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, loaded } from '../../actions';\nimport Spinner from '../spinner';\nimport './editor-profile.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorProfile = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png';\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [currentUser, setUser] = useState({});\n  const user = useSelector(state => state.user);\n  const loading = useSelector(state => state.loading);\n  const refAvatar = useRef();\n  useEffect(() => {\n    setUser(user);\n    dispatch(loaded());\n  }, [dispatch, user]);\n  const isAuthorized = localStorage.getItem('token');\n\n  const changeName = (id, token, name) => {\n    //spread operator\n    Server.updateUserName(id, token, name).then(res => {\n      setUser({ ...currentUser,\n        name\n      });\n      setName('');\n      localStorage.setItem('user', JSON.stringify(res.data));\n      dispatch(addUser(res.data));\n    });\n  };\n\n  useEffect(() => {\n    //if (user) {\n    Server.getImage(refAvatar, user.avatar, defaultAvatar, ''); //}\n  }, [Server, user]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-editor-profile\",\n    onClick: () => console.log(user.avatar),\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"editor-profile\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-avatar\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"img\",\n            ref: refAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"inp-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file-upload\" //onChange={(e) => setFile(e.target.files[0])}\n              ,\n              onChange: e => {\n                let formData = new FormData();\n                formData.append('avatar', e.target.files[0]);\n                Server.updateUserAvatar(user._id, isAuthorized, formData).then(res => {\n                  localStorage.setItem('user', JSON.stringify(res.data));\n                  dispatch(addUser(res.data));\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"editor-name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Change your name\",\n          title: \"Enter your new name\",\n          value: name,\n          onChange: e => {\n            setName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary save\",\n        onClick: () => changeName(user._id, isAuthorized, name),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorProfile, \"PuyJTZF1HvEy7psoAyQqeCIHrlE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditorProfile;\nexport default WithServer()(EditorProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorProfile\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","WithServer","addUser","loaded","Spinner","EditorProfile","Server","defaultAvatar","dispatch","name","setName","currentUser","setUser","user","state","loading","refAvatar","isAuthorized","localStorage","getItem","changeName","id","token","updateUserName","then","res","setItem","JSON","stringify","data","getImage","avatar","console","log","e","preventDefault","formData","FormData","append","target","files","updateUserAvatar","_id","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { addUser, loaded } from '../../actions';\nimport Spinner from '../spinner';\n\nimport './editor-profile.sass';\n\nconst EditorProfile = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    const dispatch = useDispatch()\n    const [name, setName] = useState('')\n    const [currentUser, setUser] = useState({})\n    const user = useSelector(state => state.user)\n    const loading = useSelector(state => state.loading)\n\n    const refAvatar = useRef()\n\n    useEffect(() => {\n        setUser(user)\n        dispatch(loaded())\n    }, [dispatch, user])\n\n    const isAuthorized = localStorage.getItem('token');\n\n    const changeName = (id, token, name) => {\n        //spread operator\n        Server.updateUserName(id, token, name)\n            .then(res => {\n                setUser({ ...currentUser, name })\n                setName('')\n                localStorage.setItem('user', JSON.stringify(res.data))\n                dispatch(addUser(res.data))\n            })\n    }\n\n    useEffect(() => {\n        //if (user) {\n        Server.getImage(refAvatar, user.avatar, defaultAvatar, '')\n        //}\n\n    }, [Server, user])\n\n\n    if (loading) {\n        return <Spinner />\n    }\n    return (\n        <div className='container-editor-profile' onClick={() => console.log(user.avatar)}>\n            <form className='editor-profile' onSubmit={(e) => e.preventDefault()}>\n                <header className='editor-header'>\n                    <div className='editor-avatar'>\n                        <img alt='img' ref={refAvatar} />\n                        <label htmlFor='file-upload' className='inp-upload' >\n                            <i className=\"fa fa-camera\"></i>\n                            <input\n                                type='file'\n                                id=\"file-upload\"\n                                //onChange={(e) => setFile(e.target.files[0])}\n                                onChange={(e) => {\n                                    let formData = new FormData()\n                                    formData.append('avatar', e.target.files[0])\n                                    Server.updateUserAvatar(user._id, isAuthorized, formData)\n                                        .then(res => {\n                                            localStorage.setItem('user', JSON.stringify(res.data))\n                                            dispatch(addUser(res.data))\n                                        })\n                                }}\n                            />\n                        </label>\n                    </div>\n                    <p className='editor-name'>{currentUser.name}</p>\n                </header>\n                <div>\n                    <label >Name:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Change your name\"\n                        title='Enter your new name'\n                        value={name}\n                        onChange={(e) => {\n                            setName(e.target.value)\n                        }}\n                    />\n                </div>\n                <button className='btn btn-primary save' onClick={() => changeName(user._id, isAuthorized, name)}>Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default WithServer()(EditorProfile);"]},"metadata":{},"sourceType":"module"}