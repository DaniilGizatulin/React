{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport SpinnerImage from './component/spinner-image';\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router'; //style\n\nimport './editor-profile.sass'; //actions\n\nimport { deleteUser, updateUserName, updateUserAvatar } from '../../redux/user/actions'; //image\n\nimport defaultAvatar from '../../image/no-avatar.jpg'; //helpers\n\nimport { checkImage } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorProfile = ({\n  Server\n}) => {\n  _s();\n\n  //useSelector\n  const user = useSelector(state => state.userState.user); // Modal \n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //useState\n\n\n  const [name, setName] = useState('');\n  const [loadingImage, setLoadingImage] = useState(false);\n  const [errorName, setError] = useState({\n    error: false,\n    message: ''\n  });\n  const [image, setImage] = useState(defaultAvatar); //History\n\n  const history = useHistory(); //useDispatch\n\n  const dispatch = useDispatch();\n\n  const changeName = (id, name) => {\n    if (!name) {\n      setError({\n        error: true,\n        message: 'Заполните поле!'\n      });\n      setTimeout(() => setError({\n        error: false,\n        message: ''\n      }), 1700);\n    } else {\n      dispatch(updateUserName(id, name, setName));\n    }\n  };\n\n  const updateAvatar = e => {\n    setLoadingImage(true);\n    let formData = new FormData();\n    formData.append('avatar', e.target.files[0]);\n    dispatch(updateUserAvatar(user._id, formData, setLoadingImage));\n  };\n\n  const delUser = () => {\n    dispatch(deleteUser(user._id, history));\n    handleClose();\n  }; //if user = true - get avatar\n\n\n  useEffect(() => {\n    if (user._id) {\n      checkImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`, () => {\n        setImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`);\n      }, () => {\n        setImage(defaultAvatar);\n      });\n    }\n  }, [user]);\n\n  if (!user._id) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-editor-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"editor-profile\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-avatar\",\n          children: [loadingImage ? /*#__PURE__*/_jsxDEV(SpinnerImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"img\",\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"inp-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"file-upload\",\n              onChange: e => updateAvatar(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"editor-name\",\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `form-control ${errorName.error && 'shadow-error'}`,\n          placeholder: \"Change your name\",\n          title: \"Enter your new name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary save\",\n        onClick: () => changeName(user._id, name),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger remove\",\n        onClick: handleShow,\n        children: \"Delete user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), errorName.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-name\",\n        children: errorName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      show: show,\n      handleClose: handleClose,\n      remove: delUser,\n      label: 'Are you sure , what you want to delete the user?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorProfile, \"mgMpy1SJuKjEokfh2wL2xxLljyo=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = EditorProfile;\nexport default WithServer()(EditorProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorProfile\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js"],"names":["React","useEffect","useState","useSelector","useDispatch","WithServer","Spinner","SpinnerImage","ModalConfirm","useHistory","deleteUser","updateUserName","updateUserAvatar","defaultAvatar","checkImage","EditorProfile","Server","user","state","userState","show","setShow","handleClose","handleShow","name","setName","loadingImage","setLoadingImage","errorName","setError","error","message","image","setImage","history","dispatch","changeName","id","setTimeout","updateAvatar","e","formData","FormData","append","target","files","_id","delUser","avatar","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport SpinnerImage from './component/spinner-image'\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router';\n//style\nimport './editor-profile.sass';\n//actions\nimport { deleteUser, updateUserName, updateUserAvatar } from '../../redux/user/actions'\n//image\nimport defaultAvatar from '../../image/no-avatar.jpg'\n//helpers\nimport { checkImage } from '../../helpers'\n\nconst EditorProfile = ({ Server }) => {\n    //useSelector\n    const user = useSelector(state => state.userState.user)\n\n    // Modal \n    const [show, setShow] = useState(false)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    //useState\n    const [name, setName] = useState('')\n    const [loadingImage, setLoadingImage] = useState(false)\n    const [errorName, setError] = useState({ error: false, message: '' })\n    const [image, setImage] = useState(defaultAvatar)\n\n    //History\n    const history = useHistory()\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    const changeName = (id, name) => {\n        if (!name) {\n            setError({ error: true, message: 'Заполните поле!' })\n            setTimeout(() => setError({ error: false, message: '' }), 1700)\n        } else {\n            dispatch(updateUserName(id, name, setName))\n        }\n    }\n\n    const updateAvatar = (e) => {\n        setLoadingImage(true)\n        let formData = new FormData()\n        formData.append('avatar', e.target.files[0])\n        dispatch(updateUserAvatar(user._id, formData, setLoadingImage))\n    }\n\n    const delUser = () => {\n        dispatch(deleteUser(user._id, history))\n        handleClose()\n    }\n\n    //if user = true - get avatar\n    useEffect(() => {\n        if (user._id) {\n            checkImage(\n                `https://nodejs-test-api-blog.herokuapp.com${user.avatar}`,\n                () => { setImage(`https://nodejs-test-api-blog.herokuapp.com${user.avatar}`) },\n                () => { setImage(defaultAvatar) }\n            )\n        }\n    }, [user])\n\n    if (!user._id) {\n        return <Spinner />\n    }\n\n    return (\n        <div className='container-editor-profile'>\n            <form className='editor-profile' onSubmit={(e) => e.preventDefault()}>\n                <header className='editor-header'>\n                    <div className='editor-avatar'>\n                        {loadingImage ? <SpinnerImage /> : <img alt='img' src={image} />}\n                        <label htmlFor='file-upload' className='inp-upload' >\n                            <i className=\"fa fa-camera\"></i>\n                            <input\n                                type='file'\n                                accept=\"image/*\"\n                                id=\"file-upload\"\n                                onChange={(e) => updateAvatar(e)}\n                            />\n                        </label>\n                    </div>\n                    <p className='editor-name'>{user.name}</p>\n                </header>\n                <div className='inp-name'>\n                    <label >Name:</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${errorName.error && 'shadow-error'}`}\n                        placeholder=\"Change your name\"\n                        title='Enter your new name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <button className='btn btn-primary save' onClick={() => changeName(user._id, name)}>Save</button>\n                <button type='button' className='btn btn-danger remove' onClick={handleShow}>Delete user</button>\n                {errorName.error && <p className='error-name'>{errorName.message}</p>}\n            </form>\n            <ModalConfirm show={show} handleClose={handleClose} remove={delUser} label={'Are you sure , what you want to delete the user?'} />\n        </div>\n    )\n}\n\nexport default WithServer()(EditorProfile);"]},"metadata":{},"sourceType":"module"}