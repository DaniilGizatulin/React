{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list-item/post-list-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { useHistory } from 'react-router-dom';\nimport { posts, getAllUsers, loaded } from '../../actions'; //!\n//import { setPost, setPostUser} from '../../actions';\n//!\n\nimport Spinner from '../spinner';\nimport prof from './no-avatar.jpg'; //import deleteUser from './delete-user.jpg'\n\nimport './post-list-item.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostListItem = ({\n  Server\n}) => {\n  _s();\n\n  const allPosts = useSelector(state => state.allPosts);\n  const allUsers = useSelector(state => state.allUsers);\n  const loading = useSelector(state => state.loading);\n  const dispatch = useDispatch();\n  let history = useHistory();\n  useEffect(() => {\n    Server.getAllPosts().then(res => {\n      dispatch(posts(res.data));\n      dispatch(loaded());\n    }).catch(er => console.log(er));\n    Server.getAllUsers().then(res => {\n      dispatch(getAllUsers(res.data));\n      dispatch(loaded());\n    }).catch(er => console.log(er));\n  }, [Server, dispatch]);\n\n  const goToUserPost = async (idPost, idUser) => {\n    //await Server.getPost(idPost)\n    //    .then(res => dispatch(setPost(res.data)))\n    //    .catch(res => dispatch(setPost(null)))\n    //await Server.getUser(idUser)\n    //    .then(res => dispatch(setPostUser(res.data)))\n    //    .catch(res => dispatch(setPostUser(null)))\n    history.push(`/post/${idPost}`);\n  };\n\n  let idx = 0;\n  const itempos = allPosts.map((postItem, i) => {\n    idx++;\n    const user = allUsers.map(usr => {\n      if (postItem.postedBy === usr._id) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: prof,\n            className: \"photo\",\n            alt: \"prof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", usr.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, usr._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this); //return (\n        //    <p> {usr.name}</p>\n        //)\n      }\n\n      return undefined;\n    }); //const text =\n    //    <div className=\"name\" key={idx + 1}>\n    //        <img src={deleteUser} className=\"photo\" alt=\"prof\" />\n    //        <p className=\"delete-user\">User deleted</p>\n    //    </div>\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      onClick: () => console.log(user),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list-item\",\n        children: [user, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: postItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: postItem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"full-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: \"View full post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => goToUserPost(postItem._id, postItem.postedBy),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-arrow-circle-right fa-2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: !loading ? itempos : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostListItem, \"VgwwKQLdU2PodmicNfa6EaAqP5M=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = PostListItem;\nexport default WithServer()(PostListItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostListItem\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list-item/post-list-item.js"],"names":["React","useEffect","useSelector","useDispatch","WithServer","useHistory","posts","getAllUsers","loaded","Spinner","prof","PostListItem","Server","allPosts","state","allUsers","loading","dispatch","history","getAllPosts","then","res","data","catch","er","console","log","goToUserPost","idPost","idUser","push","idx","itempos","map","postItem","i","user","usr","postedBy","_id","name","undefined","title","description"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport { useHistory } from 'react-router-dom';\nimport { posts, getAllUsers, loaded } from '../../actions';\n//!\n//import { setPost, setPostUser} from '../../actions';\n//!\nimport Spinner from '../spinner';\n\nimport prof from './no-avatar.jpg'\n//import deleteUser from './delete-user.jpg'\nimport './post-list-item.css';\n\n\n\nconst PostListItem = ({ Server }) => {\n\n    const allPosts = useSelector(state => state.allPosts)\n    const allUsers = useSelector(state => state.allUsers)\n    const loading = useSelector(state => state.loading)\n    const dispatch = useDispatch()\n\n    let history = useHistory();\n\n    useEffect(() => {\n        Server.getAllPosts()\n            .then(res => {\n                dispatch(posts(res.data))\n                dispatch(loaded())\n            })\n            .catch(er => console.log(er))\n\n        Server.getAllUsers()\n            .then(res => {\n                dispatch(getAllUsers(res.data))\n                dispatch(loaded())\n            })\n            .catch(er => console.log(er))\n    }, [Server, dispatch])\n\n    const goToUserPost = async (idPost, idUser) => {\n        //await Server.getPost(idPost)\n        //    .then(res => dispatch(setPost(res.data)))\n        //    .catch(res => dispatch(setPost(null)))\n        //await Server.getUser(idUser)\n        //    .then(res => dispatch(setPostUser(res.data)))\n        //    .catch(res => dispatch(setPostUser(null)))\n        history.push(`/post/${idPost}`)\n    }\n\n    let idx = 0;\n\n    const itempos = allPosts.map((postItem, i) => {\n        idx++\n\n        const user = allUsers.map(usr => {\n\n            if (postItem.postedBy === usr._id) {\n                return (\n                    <div className=\"name\" key={usr._id}>\n                        <img src={prof} className=\"photo\" alt=\"prof\" />\n                        <p> {usr.name}</p>\n                    </div>\n                )\n                //return (\n                //    <p> {usr.name}</p>\n                //)\n            }\n            return undefined\n        })\n\n        //const text =\n        //    <div className=\"name\" key={idx + 1}>\n        //        <img src={deleteUser} className=\"photo\" alt=\"prof\" />\n        //        <p className=\"delete-user\">User deleted</p>\n        //    </div>\n\n        return (\n            <div className=\"post\" key={idx} onClick={() => console.log(user)}>\n                <div className=\"post-list-item\" >\n                    {user}\n                    {/*{user[i] !== undefined ? user : text}*/}\n                    {/*<div className=\"name\">\n                        <img src={prof} className=\"photo\" alt=\"prof\" />\n                        {user}\n                    </div>*/}\n                    <div className=\"cards\">\n                        <p className=\"title\">{postItem.title}</p>\n                        <ul className=\"full-text\">{postItem.description}</ul>\n                        <div className=\"full-post\">\n                            <p className='text'>View full post</p>\n                            <button\n                                className='delete'\n                                onClick={() => goToUserPost(postItem._id, postItem.postedBy)}>\n                                <i className=\"fa fa-arrow-circle-right fa-2x\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    })\n\n\n    return (\n        <div className=\"post-list\">\n            {\n                !loading\n                    ? itempos\n                    : <Spinner />\n            }\n        </div>\n    )\n}\n\n\nexport default WithServer()(PostListItem);\n\n"]},"metadata":{},"sourceType":"module"}