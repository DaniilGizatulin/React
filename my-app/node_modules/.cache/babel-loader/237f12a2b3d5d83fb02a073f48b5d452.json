{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/app-header/search-panel.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchPanel = ({\n  posts,\n  setSearchText\n}) => {\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    id: \"free-solo-2-demo\",\n    disableClearable: true,\n    style: {\n      width: 300\n    },\n    autoHeight: true,\n    options: posts.map(post => post.title),\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Search posts\",\n      variant: \"outlined\",\n      onBlur: e => {\n        setSearchText(e.target.value);\n\n        if (e.target.value === '') {\n          setSearchText('');\n        }\n      },\n      InputProps: { ...params.InputProps,\n        type: 'search'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchPanel;\nexport default SearchPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPanel\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/app-header/search-panel.js"],"names":["React","TextField","Autocomplete","SearchPanel","posts","setSearchText","width","map","post","title","params","e","target","value","InputProps","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAA8B;AAE9C,sBACI,QAAC,YAAD;AACI,IAAA,QAAQ,MADZ;AAEI,IAAA,EAAE,EAAC,kBAFP;AAGI,IAAA,gBAAgB,MAHpB;AAII,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAJX;AAKI,IAAA,UAAU,MALd;AAMI,IAAA,OAAO,EAAEF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,KAAzB,CANb;AAOI,IAAA,WAAW,EAAGC,MAAD,iBACT,QAAC,SAAD,OACQA,MADR;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,MAAM,EAAGC,CAAD,IAAO;AACXN,QAAAA,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;;AACA,YAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACvBR,UAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACJ,OATL;AAUI,MAAA,UAAU,EAAE,EAAE,GAAGK,MAAM,CAACI,UAAZ;AAAwBC,QAAAA,IAAI,EAAE;AAA9B;AAVhB;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA1BD;;KAAMZ,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst SearchPanel = ({ posts, setSearchText }) => {\n\n    return (\n        <Autocomplete\n            freeSolo\n            id=\"free-solo-2-demo\"\n            disableClearable\n            style={{ width: 300 }}\n            autoHeight\n            options={posts.map((post) => post.title)}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Search posts\"\n                    variant=\"outlined\"\n                    onBlur={(e) => {\n                        setSearchText(e.target.value)\n                        if (e.target.value === '') {\n                            setSearchText('')\n                        }\n                    }}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                />\n            )}\n        />\n    );\n}\nexport default SearchPanel;\n"]},"metadata":{},"sourceType":"module"}