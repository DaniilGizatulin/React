{"ast":null,"code":"import axios from 'axios';\nexport default class Server {\n  async loginUser(email, password) {\n    try {\n      const res = await axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/auth\", {\n        email,\n        password\n      });\n      console.log('üëâ Returned data:', res);\n      return res;\n    } catch (e) {\n      console.log(`üò± Axios request failed: ${e}`);\n    }\n  }\n\n  async authorizationUser(token) {\n    try {\n      const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/auth/user', {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      localStorage.setItem('token', token);\n      return res;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async createNewUser(email, password, name) {\n    try {\n      const res = await axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/users\", {\n        email,\n        password,\n        name\n      });\n      console.log('üëâ Returned data:', res);\n      return res;\n    } catch (e) {\n      console.log(e.response);\n      console.log(`üò± Axios request failed: ${e}`);\n    }\n  }\n\n  async getAllUsers() {\n    try {\n      const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/users');\n      console.log(res);\n      return res;\n    } catch (e) {\n      console.log(e.response);\n      console.log(`üò± Axios request failed: ${e}`);\n    }\n  }\n\n  async getAllPosts() {\n    try {\n      const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/posts');\n      console.log(res);\n      return res;\n    } catch (e) {\n      console.log(e.response);\n      console.log(`üò± Axios request failed: ${e}`);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/Daniil/FicusTest/my-app/src/services/server.js"],"names":["axios","Server","loginUser","email","password","res","post","console","log","e","authorizationUser","token","get","headers","localStorage","setItem","createNewUser","name","response","getAllUsers","getAllPosts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,CAAa;AAET,QAATC,SAAS,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,wDAAX,EAAqE;AACnFH,QAAAA,KADmF;AAEnFC,QAAAA;AAFmF,OAArE,CAAlB;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACA,aAAOA,GAAP;AACH,KAPD,CAOE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BC,CAAE,EAA1C;AACH;AAEJ;;AAEsB,QAAjBC,iBAAiB,CAACC,KAAD,EAAQ;AAC3B,QAAI;AACA,YAAMN,GAAG,GAAG,MAAML,KAAK,CAACY,GAAN,CAAU,6DAAV,EAAyE;AAAEC,QAAAA,OAAO,EAAE;AAAE,2BAAkB,UAASF,KAAM;AAAnC;AAAX,OAAzE,CAAlB;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACA,aAAON,GAAP;AACH,KAJD,CAIE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH;AAEJ;;AAEkB,QAAbO,aAAa,CAACb,KAAD,EAAQC,QAAR,EAAkBa,IAAlB,EAAwB;AACvC,QAAI;AACA,YAAMZ,GAAG,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,yDAAX,EAAsE;AACpFH,QAAAA,KADoF;AAEpFC,QAAAA,QAFoF;AAGpFa,QAAAA;AAHoF,OAAtE,CAAlB;AAKAV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC;AACA,aAAOA,GAAP;AACH,KARD,CAQE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACS,QAAd;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BC,CAAE,EAA1C;AAEH;AACJ;;AAEgB,QAAXU,WAAW,GAAG;AAChB,QAAI;AACA,YAAMd,GAAG,GAAG,MAAML,KAAK,CAACY,GAAN,CAAU,yDAAV,CAAlB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,aAAOA,GAAP;AACH,KAJD,CAIE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACS,QAAd;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BC,CAAE,EAA1C;AACH;AACJ;;AAEgB,QAAXW,WAAW,GAAG;AAChB,QAAI;AACA,YAAMf,GAAG,GAAG,MAAML,KAAK,CAACY,GAAN,CAAU,yDAAV,CAAlB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,aAAOA,GAAP;AACH,KAJD,CAIE,OAAOI,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAC,CAACS,QAAd;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BC,CAAE,EAA1C;AACH;AACJ;;AA/DuB","sourcesContent":["import axios from 'axios';\n\nexport default class Server {\n\n    async loginUser(email, password) {\n        try {\n            const res = await axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/auth\", {\n                email,\n                password,\n            });\n            console.log('üëâ Returned data:', res);\n            return res\n        } catch (e) {\n            console.log(`üò± Axios request failed: ${e}`);\n        }\n\n    }\n\n    async authorizationUser(token) {\n        try {\n            const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/auth/user', { headers: { \"Authorization\": `Bearer ${token}` } })\n            localStorage.setItem('token', token)\n            return res\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    async createNewUser(email, password, name) {\n        try {\n            const res = await axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/users\", {\n                email,\n                password,\n                name\n            });\n            console.log('üëâ Returned data:', res);\n            return res\n        } catch (e) {\n            console.log(e.response);\n            console.log(`üò± Axios request failed: ${e}`);\n\n        }\n    }\n\n    async getAllUsers() {\n        try {\n            const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/users')\n            console.log(res)\n            return res\n        } catch (e) {\n            console.log(e.response);\n            console.log(`üò± Axios request failed: ${e}`);\n        }\n    }\n\n    async getAllPosts() {\n        try {\n            const res = await axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/posts')\n            console.log(res)\n            return res\n        } catch (e) {\n            console.log(e.response)\n            console.log(`üò± Axios request failed: ${e}`);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}