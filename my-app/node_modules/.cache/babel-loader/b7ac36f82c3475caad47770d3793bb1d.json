{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/error-boundry/error-boundry.js\";\nimport React, { Component } from 'react';\nimport Error from '../error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false\n    };\n  } //state = {\n  //    error: false\n  //}\n\n\n  static getDerivedStateFromError(error) {\n    // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n    return {\n      error: true\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({\n      error: true\n    }); //logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/error-boundry/error-boundry.js"],"names":["React","Component","Error","ErrorBoundry","constructor","props","state","error","getDerivedStateFromError","componentDidCatch","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAChDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACH,GAJ+C,CAKhD;AACA;AACA;;;AAE+B,SAAxBC,wBAAwB,CAACD,KAAD,EAAQ;AACnC;AACA,WAAO;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAP;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAE;AAAT,KAAd,EADgB,CAEhB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKL,KAAL,CAAWC,KAAf,EAAsB;AAClB,0BAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,WAAO,KAAKF,KAAL,CAAWO,QAAlB;AACH;;AAzB+C","sourcesContent":["import React, { Component } from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { error: false }\n    }\n    //state = {\n    //    error: false\n    //}\n\n    static getDerivedStateFromError(error) {\n        // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n        return { error: true };\n    }\n\n    componentDidCatch() {\n        this.setState({ error: true })\n        //logErrorToMyService(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.error) {\n            return <Error />\n        }\n\n        return this.props.children;\n    }\n}"]},"metadata":{},"sourceType":"module"}