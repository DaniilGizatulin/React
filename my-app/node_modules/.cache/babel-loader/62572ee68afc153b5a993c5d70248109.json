{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/post-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized';\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\nimport { useDispatch } from 'react-redux';\nimport { loaded } from '../../actions';\nimport prof from './no-avatar.jpg';\nimport deletProf from './delete-user.jpg';\nimport './post-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png';\n  const dispatch = useDispatch(); //Hook\n  //const post = useSelector(state => state.post)\n  //const postUser = useSelector(state => state.postUser)\n\n  const [post, setPost] = useState({});\n  const [postUser, setPostUser] = useState({});\n  const [date, setDate] = useState('');\n  const loading = useSelector(state => state.loading);\n  const [heart, setHeart] = useState('');\n  const history = useHistory();\n  const {\n    id\n  } = useParams(); //Ref\n\n  const refHeart = useRef();\n  const refAvatar = useRef();\n  const refImagePost = useRef(); //local\n\n  const isAuthorized = localStorage.getItem('token');\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); //DateCreated\n\n  const dateСorrector = postData => {\n    let date = postData;\n    let newDate = date.replace(/[T-Z]/g, ' '); //newDate = newDate.replace(/\\..*/, '')\n\n    setDate(newDate.replace(/\\..*/, ''));\n  }; //Func and hook\n\n\n  function redHeart(likedUser, e) {\n    const idxLike = likedUser.indexOf(isAuthorizedUser._id);\n\n    if (idxLike >= 0) {//e.classList.add('liked')\n    } else {//e.classList.remove('liked')\n      }\n  }\n\n  useEffect(() => {\n    Server.getPost(id).then(res => {\n      dispatch(loaded());\n      setPost(res.data);\n      setHeart(res.data.likes.length);\n      redHeart(res.data.likes, refHeart.current);\n      dateСorrector(res.data.dateCreated);\n      Server.getImage(refImagePost, res.data.image, '', res.data.description);\n      Server.getUser(res.data.postedBy).then(res => {\n        Server.getImage(refAvatar, res.data.avatar, defaultAvatar);\n        setPostUser(res.data);\n      }).catch(res => setPostUser(null));\n    }); //.catch(res => dispatch(setPost(null)))\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Server, id]); //useEffect(() => {\n  //    if (isAuthorizedUser) {\n  //        Server.getPost(post._id)\n  //            .then(res => {\n  //                setHeart(res.likes.length)\n  //                redHeart(res.data.likes, refHeart.current)\n  //            })\n  //    }\n  //    // eslint-disable-next-line react-hooks/exhaustive-deps\n  //}, [Server, post._id])\n\n  const postLike = async e => {\n    await Server.getPost(post._id).then(res => {\n      if (res.data.likes.length !== heart) {\n        setHeart(res.data.likes.length);\n        redHeart(res.data.likes, e);\n      }\n    });\n  };\n\n  async function setLike(id, token, e) {\n    await Server.setLikePost(id, token);\n    postLike(e);\n  }\n\n  const [modal, setModal] = useState(''); //useEffect(() => {\n  //    if (postUser) {\n  //        Server.getImage(refAvatar, postUser.avatar, defaultAvatar)\n  //    }\n  //    if (post) {\n  //        Server.getImage(refImagePost, post.image, '', post.description)\n  //    }\n  //}, [Server, post, postUser])\n  //useEffect(() => {\n  //    if (post) {\n  //        Server.getImage(refImagePost, post.image, '', post.description)\n  //    }\n  //}, [Server, post])\n\n  const delPost = async (id, token) => {\n    await Server.deletePost(id, token);\n    history.push('/list');\n  };\n\n  if (loading || !post) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    onClick: () => console.log(post),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item-list\",\n        children: [postUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: prof,\n            className: \"user-avatar cntr\",\n            alt: \"prof\",\n            ref: refAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", postUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletProf,\n            className: \"user-avatar cntr\",\n            alt: \"prof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"delete-user\",\n            children: \" User has been deleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-update-post\",\n              onClick: () => history.push('/editor'),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                className: \"bi bi-pen-fill\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            alt: post.description,\n            className: \"post-image\",\n            ref: refImagePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: post.fullText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interaction\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like\",\n                onClick: () => {\n                  isAuthorized ? setLike(post._id, isAuthorized, refHeart.current) : setModal('show-flex');\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  ref: refHeart,\n                  className: \"fa fa-heart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), heart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalAuthorized, {\n      cl: modal,\n      setModal: setModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"kDqpTZYbFI+ahE1We4R0JxYVqCI=\", false, function () {\n  return [useDispatch, useSelector, useHistory, useParams];\n});\n\n_c = PostList;\nexport default WithServer()(PostList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/post-list.js"],"names":["React","useEffect","useRef","useState","useSelector","WithServer","ModalAuthorized","useHistory","useParams","Spinner","useDispatch","loaded","prof","deletProf","PostList","Server","defaultAvatar","dispatch","post","setPost","postUser","setPostUser","date","setDate","loading","state","heart","setHeart","history","id","refHeart","refAvatar","refImagePost","isAuthorized","localStorage","getItem","isAuthorizedUser","JSON","parse","dateСorrector","postData","newDate","replace","redHeart","likedUser","e","idxLike","indexOf","_id","getPost","then","res","data","likes","length","current","dateCreated","getImage","image","description","getUser","postedBy","avatar","catch","postLike","setLike","token","setLikePost","modal","setModal","delPost","deletePost","push","console","log","name","title","fullText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,OAAO,iBAAP;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC7B,QAAMC,aAAa,GAAG,uEAAtB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAF6B,CAG7B;AACA;AACA;;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMqB,OAAO,GAAGpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMyB,OAAO,GAAGrB,UAAU,EAA1B;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAASrB,SAAS,EAAxB,CAd6B,CAe7B;;AACA,QAAMsB,QAAQ,GAAG5B,MAAM,EAAvB;AACA,QAAM6B,SAAS,GAAG7B,MAAM,EAAxB;AACA,QAAM8B,YAAY,GAAG9B,MAAM,EAA3B,CAlB6B,CAoB7B;;AACA,QAAM+B,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAzB,CAtB6B,CAwB7B;;AACA,QAAMI,aAAa,GAAIC,QAAD,IAAc;AAChC,QAAIlB,IAAI,GAAGkB,QAAX;AACA,QAAIC,OAAO,GAAGnB,IAAI,CAACoB,OAAL,CAAa,QAAb,EAAuB,GAAvB,CAAd,CAFgC,CAGhC;;AACAnB,IAAAA,OAAO,CAACkB,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAD,CAAP;AACH,GALD,CAzB6B,CA+B7B;;;AACA,WAASC,QAAT,CAAkBC,SAAlB,EAA6BC,CAA7B,EAAgC;AAC5B,UAAMC,OAAO,GAAGF,SAAS,CAACG,OAAV,CAAkBX,gBAAgB,CAACY,GAAnC,CAAhB;;AACA,QAAIF,OAAO,IAAI,CAAf,EAAkB,CACd;AACH,KAFD,MAEO,CACH;AACH;AACJ;;AAED7C,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,MAAM,CAACkC,OAAP,CAAepB,EAAf,EACKqB,IADL,CACUC,GAAG,IAAI;AACTlC,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACAQ,MAAAA,OAAO,CAACgC,GAAG,CAACC,IAAL,CAAP;AACAzB,MAAAA,QAAQ,CAACwB,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeC,MAAhB,CAAR;AACAX,MAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASC,KAAV,EAAiBvB,QAAQ,CAACyB,OAA1B,CAAR;AACAhB,MAAAA,aAAa,CAACY,GAAG,CAACC,IAAJ,CAASI,WAAV,CAAb;AACAzC,MAAAA,MAAM,CAAC0C,QAAP,CAAgBzB,YAAhB,EAA8BmB,GAAG,CAACC,IAAJ,CAASM,KAAvC,EAA8C,EAA9C,EAAkDP,GAAG,CAACC,IAAJ,CAASO,WAA3D;AACA5C,MAAAA,MAAM,CAAC6C,OAAP,CAAeT,GAAG,CAACC,IAAJ,CAASS,QAAxB,EACKX,IADL,CACUC,GAAG,IAAI;AACTpC,QAAAA,MAAM,CAAC0C,QAAP,CAAgB1B,SAAhB,EAA2BoB,GAAG,CAACC,IAAJ,CAASU,MAApC,EAA4C9C,aAA5C;AACAK,QAAAA,WAAW,CAAC8B,GAAG,CAACC,IAAL,CAAX;AACH,OAJL,EAKKW,KALL,CAKWZ,GAAG,IAAI9B,WAAW,CAAC,IAAD,CAL7B;AAMH,KAdL,EADY,CAgBZ;AAEA;AACH,GAnBQ,EAmBN,CAACN,MAAD,EAASc,EAAT,CAnBM,CAAT,CAzC6B,CA8D7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMmC,QAAQ,GAAG,MAAOnB,CAAP,IAAa;AAC1B,UAAM9B,MAAM,CAACkC,OAAP,CAAe/B,IAAI,CAAC8B,GAApB,EACDE,IADC,CACIC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeC,MAAf,KAA0B5B,KAA9B,EAAqC;AACjCC,QAAAA,QAAQ,CAACwB,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAeC,MAAhB,CAAR;AACAX,QAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASC,KAAV,EAAiBR,CAAjB,CAAR;AACH;AACJ,KANC,CAAN;AAOH,GARD;;AAUA,iBAAeoB,OAAf,CAAuBpC,EAAvB,EAA2BqC,KAA3B,EAAkCrB,CAAlC,EAAqC;AACjC,UAAM9B,MAAM,CAACoD,WAAP,CAAmBtC,EAAnB,EAAuBqC,KAAvB,CAAN;AACAF,IAAAA,QAAQ,CAACnB,CAAD,CAAR;AACH;;AAED,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBlE,QAAQ,CAAC,EAAD,CAAlC,CAxF6B,CA2F7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;AAEA,QAAMmE,OAAO,GAAG,OAAOzC,EAAP,EAAWqC,KAAX,KAAqB;AACjC,UAAMnD,MAAM,CAACwD,UAAP,CAAkB1C,EAAlB,EAAsBqC,KAAtB,CAAN;AACAtC,IAAAA,OAAO,CAAC4C,IAAR,CAAa,OAAb;AACH,GAHD;;AAKA,MAAIhD,OAAO,IAAI,CAACN,IAAhB,EAAsB;AAClB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAE,MAAMuD,OAAO,CAACC,GAAR,CAAYxD,IAAZ,CAArC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBACKE,QAAQ,gBAEL;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAER,IAAV;AAAgB,YAAA,SAAS,EAAC,kBAA1B;AAA6C,YAAA,GAAG,EAAC,MAAjD;AAAwD,YAAA,GAAG,EAAEmB;AAA7D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,4BAAKX,QAAQ,CAACuD,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK,gBAOL;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAE9D,SAAV;AAAqB,YAAA,SAAS,EAAC,kBAA/B;AAAkD,YAAA,GAAG,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR,eAYI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,OAAb;AAAA,wBAAsBK,IAAI,CAAC0D;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,OAAO,EAAE,MAAMhD,OAAO,CAAC4C,IAAR,CAAa,SAAb,CAAnD;AAAA,qCACI;AAAK,gBAAA,KAAK,EAAC,4BAAX;AAAwC,gBAAA,KAAK,EAAC,IAA9C;AAAmD,gBAAA,MAAM,EAAC,IAA1D;AAA+D,gBAAA,IAAI,EAAC,cAApE;AAAmF,gBAAA,SAAS,EAAC,gBAA7F;AAA8G,gBAAA,OAAO,EAAC,WAAtH;AAAA,uCACI;AAAM,kBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AAAK,YAAA,GAAG,EAAC,EAAT;AAAY,YAAA,GAAG,EAAEtD,IAAI,CAACyC,WAAtB;AAAmC,YAAA,SAAS,EAAC,YAA7C;AAA0D,YAAA,GAAG,EAAE3B;AAA/D;AAAA;AAAA;AAAA;AAAA,kBATJ,eAWI;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,sBAA2Bd,IAAI,CAAC2D;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCAEI;AAAM,cAAA,SAAS,EAAC,MAAhB;AAAA,wBAAwBvD;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACI;AACI,gBAAA,SAAS,EAAC,MADd;AAEI,gBAAA,OAAO,EAAE,MAAM;AACXW,kBAAAA,YAAY,GACNgC,OAAO,CAAC/C,IAAI,CAAC8B,GAAN,EAAWf,YAAX,EAAyBH,QAAQ,CAACyB,OAAlC,CADD,GAENc,QAAQ,CAAC,WAAD,CAFd;AAGH,iBANL;AAAA,uCAOM;AAAG,kBAAA,GAAG,EAAEvC,QAAR;AAAkB,kBAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,sBADJ,EAQkEJ,KARlE;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAgDI,QAAC,eAAD;AAAiB,MAAA,EAAE,EAAE0C,KAArB;AAA4B,MAAA,QAAQ,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CAzKD;;GAAMvD,Q;UAEeJ,W,EASDN,W,EAEAG,U,EACDC,S;;;KAdbM,Q;AA4KN,eAAeT,UAAU,GAAGS,QAAH,CAAzB","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized'\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\n\nimport { useDispatch } from 'react-redux';\nimport { loaded } from '../../actions';\n\nimport prof from './no-avatar.jpg'\nimport deletProf from './delete-user.jpg'\n\nimport './post-list.css';\n\nconst PostList = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n    const dispatch = useDispatch()\n    //Hook\n    //const post = useSelector(state => state.post)\n    //const postUser = useSelector(state => state.postUser)\n\n    const [post, setPost] = useState({});\n    const [postUser, setPostUser] = useState({});\n    const [date, setDate] = useState('')\n\n    const loading = useSelector(state => state.loading)\n    const [heart, setHeart] = useState('')\n    const history = useHistory()\n    const { id } = useParams()\n    //Ref\n    const refHeart = useRef()\n    const refAvatar = useRef()\n    const refImagePost = useRef()\n\n    //local\n    const isAuthorized = localStorage.getItem('token');\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n    //DateCreated\n    const dateСorrector = (postData) => {\n        let date = postData\n        let newDate = date.replace(/[T-Z]/g, ' ')\n        //newDate = newDate.replace(/\\..*/, '')\n        setDate(newDate.replace(/\\..*/, ''))\n    }\n    //Func and hook\n    function redHeart(likedUser, e) {\n        const idxLike = likedUser.indexOf(isAuthorizedUser._id)\n        if (idxLike >= 0) {\n            //e.classList.add('liked')\n        } else {\n            //e.classList.remove('liked')\n        }\n    }\n\n    useEffect(() => {\n        Server.getPost(id)\n            .then(res => {\n                dispatch(loaded())\n                setPost(res.data)\n                setHeart(res.data.likes.length)\n                redHeart(res.data.likes, refHeart.current)\n                dateСorrector(res.data.dateCreated)\n                Server.getImage(refImagePost, res.data.image, '', res.data.description)\n                Server.getUser(res.data.postedBy)\n                    .then(res => {\n                        Server.getImage(refAvatar, res.data.avatar, defaultAvatar)\n                        setPostUser(res.data)\n                    })\n                    .catch(res => setPostUser(null))\n            })\n        //.catch(res => dispatch(setPost(null)))\n\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [Server, id])\n\n    //useEffect(() => {\n    //    if (isAuthorizedUser) {\n    //        Server.getPost(post._id)\n    //            .then(res => {\n    //                setHeart(res.likes.length)\n    //                redHeart(res.data.likes, refHeart.current)\n    //            })\n    //    }\n    //    // eslint-disable-next-line react-hooks/exhaustive-deps\n    //}, [Server, post._id])\n\n    const postLike = async (e) => {\n        await Server.getPost(post._id)\n            .then(res => {\n                if (res.data.likes.length !== heart) {\n                    setHeart(res.data.likes.length)\n                    redHeart(res.data.likes, e)\n                }\n            })\n    }\n\n    async function setLike(id, token, e) {\n        await Server.setLikePost(id, token)\n        postLike(e)\n    }\n\n    const [modal, setModal] = useState('')\n\n\n    //useEffect(() => {\n    //    if (postUser) {\n    //        Server.getImage(refAvatar, postUser.avatar, defaultAvatar)\n    //    }\n\n    //    if (post) {\n    //        Server.getImage(refImagePost, post.image, '', post.description)\n    //    }\n    //}, [Server, post, postUser])\n\n\n    //useEffect(() => {\n    //    if (post) {\n    //        Server.getImage(refImagePost, post.image, '', post.description)\n    //    }\n    //}, [Server, post])\n\n    const delPost = async (id, token) => {\n        await Server.deletePost(id, token)\n        history.push('/list')\n    }\n\n    if (loading || !post) {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"item\" onClick={() => console.log(post)}>\n            <div className=\"item-post\">\n                <div className=\"post-item-list\">\n                    {postUser\n                        ?\n                        <div className=\"info-user\">\n                            <img src={prof} className=\"user-avatar cntr\" alt=\"prof\" ref={refAvatar} />\n                            <p> {postUser.name}</p>\n                        </div>\n                        :\n                        <div className=\"info-user\">\n                            <img src={deletProf} className=\"user-avatar cntr\" alt=\"prof\" />\n                            <p className=\"delete-user\"> User has been deleted</p>\n                        </div>}\n                    <div className=\"info-post\">\n                        <div className='header-post'>\n                            <p className=\"title\">{post.title}</p>\n                            <button className='btn-update-post' onClick={() => history.push('/editor')}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pen-fill\" viewBox=\"0 0 16 16\">\n                                    <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z\" />\n                                </svg>\n                            </button>\n                        </div>\n                        <img src='' alt={post.description} className=\"post-image\" ref={refImagePost} />\n                        {/**ul ?**/}\n                        <ul className=\"full-text\">{post.fullText}</ul>\n                        <div className=\"footer-post\">\n                            {/*<span className=\"date\">{newDate}</span>*/}\n                            <span className=\"date\">{date}</span>\n                            <div className=\"interaction\">\n                                <button\n                                    className='like'\n                                    onClick={() => {\n                                        isAuthorized\n                                            ? setLike(post._id, isAuthorized, refHeart.current)\n                                            : setModal('show-flex')\n                                    }\n                                    }><i ref={refHeart} className=\"fa fa-heart\"></i></button>{heart}\n                                {/*{isAuthorizedUser && isAuthorizedUser._id === postUser._id\n                                    ? <button className='delete' onClick={() => delPost(post._id, isAuthorized)}><i className=\"fa fa-trash-o\"></i></button>\n                                    : <p></p>}*/}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <ModalAuthorized cl={modal} setModal={setModal} />\n        </div>\n    )\n}\n\n\nexport default WithServer()(PostList);\n\n"]},"metadata":{},"sourceType":"module"}