{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport { loaded } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPosts = ({\n  Server\n}) => {\n  _s();\n\n  const refPostsContainer = useRef(); //useSelectors\n\n  const loading = useSelector(state => state.loading); //const allPosts = useSelector(state => state.allPosts)\n  //useDispatch\n\n  const dispatch = useDispatch(); //useState\n\n  const [allPosts, setAllPosts] = useState([]); //useHistory\n\n  const history = useHistory(); //useParams\n\n  const {\n    id\n  } = useParams();\n\n  const goToUserPost = async idPost => {\n    history.push(`/post/${idPost}`);\n  };\n\n  useEffect(() => {\n    Server.getAllPosts(0, 0).then(res => {\n      //setAllPosts(res.data)\n      const items = filpost(res.data);\n      setAllPosts(items);\n      dispatch(loaded());\n    });\n  }, [Server, dispatch]);\n  let idx = 0;\n\n  const filpost = posts => {\n    posts.map((postItem, i) => {\n      idx++;\n\n      if (postItem.postedBy === id) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-list-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: postItem.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"full-text\",\n                children: postItem.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"full-post\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view\",\n                  onClick: () => goToUserPost(postItem._id),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this);\n      }\n    });\n  }; // eslint-disable-next-line array-callback-return\n\n\n  const postList = allPosts.map((postItem, i) => {\n    idx++;\n\n    if (postItem.postedBy === id) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: postItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"full-text\",\n              children: postItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"full-post\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"view\",\n                onClick: () => goToUserPost(postItem._id),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  console.log(refPostsContainer.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    ref: refPostsContainer,\n    children: !loading ? postList : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserPosts, \"GtGsbYyEZ97vk2bj0IdUQ3BZgic=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n\n_c = UserPosts;\nexport default WithServer()(UserPosts);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPosts\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/user-posts/user-posts.js"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useHistory","useParams","WithServer","Spinner","loaded","UserPosts","Server","refPostsContainer","loading","state","dispatch","allPosts","setAllPosts","history","id","goToUserPost","idPost","push","getAllPosts","then","res","items","filpost","data","idx","posts","map","postItem","i","postedBy","title","description","_id","postList","console","log","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport { loaded } from '../../actions';\n\n\nconst UserPosts = ({ Server }) => {\n    const refPostsContainer = useRef()\n\n    //useSelectors\n    const loading = useSelector(state => state.loading)\n    //const allPosts = useSelector(state => state.allPosts)\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useState\n    const [allPosts, setAllPosts] = useState([])\n\n    //useHistory\n    const history = useHistory()\n\n    //useParams\n    const { id } = useParams()\n\n    const goToUserPost = async (idPost) => {\n        history.push(`/post/${idPost}`)\n    }\n\n    useEffect(() => {\n        Server.getAllPosts(0, 0)\n            .then(res => {\n                //setAllPosts(res.data)\n                const items = filpost(res.data)\n                setAllPosts(items)\n                dispatch(loaded())\n            })\n    }, [Server, dispatch])\n\n\n    let idx = 0;\n    const filpost = (posts) => {\n        posts.map((postItem, i) => {\n            idx++\n\n            if (postItem.postedBy === id) {\n                return (\n                    <div className=\"post\" key={idx}>\n                        <div className=\"post-list-item\" >\n                            <div className=\"cards\">\n                                <p className=\"title\">{postItem.title}</p>\n                                <ul className=\"full-text\">{postItem.description}</ul>\n                                <div className=\"full-post\">\n                                    <button\n                                        className='view'\n                                        onClick={() => goToUserPost(postItem._id)}>\n                                        View\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                )\n            }\n        })\n    }\n\n\n    // eslint-disable-next-line array-callback-return\n    const postList = allPosts.map((postItem, i) => {\n        idx++\n\n        if (postItem.postedBy === id) {\n            return (\n                <div className=\"post\" key={idx}>\n                    <div className=\"post-list-item\" >\n                        <div className=\"cards\">\n                            <p className=\"title\">{postItem.title}</p>\n                            <ul className=\"full-text\">{postItem.description}</ul>\n                            <div className=\"full-post\">\n                                <button\n                                    className='view'\n                                    onClick={() => goToUserPost(postItem._id)}>\n                                    View\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        }\n    })\n    console.log(refPostsContainer.current)\n    return (\n        <div className=\"post-list\" ref={refPostsContainer}>\n            {/*{postList.length === 0 && <p className='not-found-message'>You don't have any posts yet...</p>}*/}\n            {\n                !loading\n                    ? postList\n                    : <Spinner />\n            }\n        </div>\n    )\n}\n\nexport default WithServer()(UserPosts);"]},"metadata":{},"sourceType":"module"}