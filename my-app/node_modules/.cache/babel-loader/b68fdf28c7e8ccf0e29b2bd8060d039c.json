{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/app-header/component/date-time/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './index.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateAndTime = () => {\n  _s();\n\n  const getTimeRemaining = endtime => {\n    const t = Date.parse(endtime) - Date.parse(new Date());\n    const days = Math.floor(t / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(t / (1000 * 60 * 60) % 24);\n    const minutes = Math.floor(t / 1000 / 60 % 60);\n    const seconds = Math.floor(t / 1000 % 60);\n    return {\n      'total': t,\n      'days': days,\n      'hours': hours,\n      'minutes': minutes,\n      'seconds': seconds\n    };\n  };\n\n  const getZero = num => {\n    if (num >= 0 && num < 10) {\n      return `0${num}`;\n    } else {\n      return num;\n    }\n  };\n\n  const [total, setTotal] = useState({});\n  useEffect(() => {\n    setTotal(getTimeRemaining('2021-07-30'));\n  }, []);\n  const [date, setDate] = useState({\n    days: '',\n    hours: '',\n    minutes: '',\n    seconds: ''\n  });\n  useEffect(() => {\n    setDate({ ...date,\n      days: getZero(total.days),\n      hours: getZero(total.hours),\n      minutes: getZero(total.minutes),\n      seconds: getZero(total.seconds)\n    });\n  }, [total]); //const date = \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'Date-Time',\n    onClick: () => console.log(getTimeRemaining('2021-06-11')),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Date\",\n      children: \"Fri 04.06.2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Time\",\n      children: [\"11:27:33 PM\", date.days, date.hours, date.minutes, date.seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DateAndTime, \"eHFs4S/jRNF0Qox7LS4ygxdPIE8=\");\n\n_c = DateAndTime;\nexport default DateAndTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateAndTime\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/app-header/component/date-time/index.js"],"names":["React","useEffect","useState","DateAndTime","getTimeRemaining","endtime","t","Date","parse","days","Math","floor","hours","minutes","seconds","getZero","num","total","setTotal","date","setDate","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAClC,UAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,IAAsBE,IAAI,CAACC,KAAL,CAAW,IAAID,IAAJ,EAAX,CAAhC;AACA,UAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAZ,CAAb;AACA,UAAMM,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYL,CAAC,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAD,GAAuB,EAAnC,CAAd;AACA,UAAMO,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAJ,GAAW,EAAZ,GAAkB,EAA7B,CAAhB;AACA,UAAMQ,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYL,CAAC,GAAG,IAAL,GAAa,EAAxB,CAAhB;AAEA,WAAO;AACH,eAASA,CADN;AAEH,cAAQG,IAFL;AAGH,eAASG,KAHN;AAIH,iBAAWC,OAJR;AAKH,iBAAWC;AALR,KAAP;AAOH,GAdD;;AAgBA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACrB,QAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,EAAtB,EAA0B;AACtB,aAAQ,IAAGA,GAAI,EAAf;AACH,KAFD,MAEO;AACH,aAAOA,GAAP;AACH;AACJ,GAND;;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAACd,gBAAgB,CAAC,YAAD,CAAjB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,EAAR;AAAYG,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,OAAO,EAAE,EAAhC;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAAD,CAAhC;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJV,MAAAA,IAAI,EAAEM,OAAO,CAACE,KAAK,CAACR,IAAP,CAFT;AAGJG,MAAAA,KAAK,EAAEG,OAAO,CAACE,KAAK,CAACL,KAAP,CAHV;AAIJC,MAAAA,OAAO,EAAEE,OAAO,CAACE,KAAK,CAACJ,OAAP,CAJZ;AAKJC,MAAAA,OAAO,EAAEC,OAAO,CAACE,KAAK,CAACH,OAAP;AALZ,KAAD,CAAP;AAOH,GARQ,EAQN,CAACG,KAAD,CARM,CAAT,CAjCsB,CA2CtB;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAA6B,IAAA,OAAO,EAAE,MAAMI,OAAO,CAACC,GAAR,CAAYlB,gBAAgB,CAAC,YAAD,CAA5B,CAA5C;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gCAEKe,IAAI,CAACV,IAFV,EAEgBU,IAAI,CAACP,KAFrB,EAE4BO,IAAI,CAACN,OAFjC,EAE0CM,IAAI,CAACL,OAF/C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxDD;;GAAMX,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport './index.sass'\n\nconst DateAndTime = () => {\n\n    const getTimeRemaining = (endtime) => {\n        const t = Date.parse(endtime) - Date.parse(new Date());\n        const days = Math.floor(t / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((t / (1000 * 60 * 60) % 24));\n        const minutes = Math.floor((t / 1000 / 60) % 60);\n        const seconds = Math.floor((t / 1000) % 60);\n\n        return {\n            'total': t,\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n\n    const getZero = (num) => {\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    const [total, setTotal] = useState({})\n\n    useEffect(() => {\n        setTotal(getTimeRemaining('2021-07-30'))\n    }, [])\n\n    const [date, setDate] = useState({ days: '', hours: '', minutes: '', seconds: '' })\n    useEffect(() => {\n        setDate({\n            ...date,\n            days: getZero(total.days),\n            hours: getZero(total.hours),\n            minutes: getZero(total.minutes),\n            seconds: getZero(total.seconds)\n        })\n    }, [total])\n\n    //const date = \n\n    return (\n        <div className={'Date-Time'} onClick={() => console.log(getTimeRemaining('2021-06-11'))}>\n            <div className='Date'>\n                Fri 04.06.2021\n            </div>\n            <div className='Time'>\n                11:27:33 PM\n                {date.days}{date.hours}{date.minutes}{date.seconds}\n            </div>\n        </div>\n    )\n}\n\nexport default DateAndTime"]},"metadata":{},"sourceType":"module"}