{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, ERROR, LOGOUT, LOADED, DELETED } from './types';\n\nconst authorizationUser = token => {\n  try {\n    const _res = axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/auth/user', {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n\n    return _res;\n  } catch (e) {\n    console.log(e.response);\n  }\n};\n\nfunction loginUser(email, password, nav) {\n  return dispatch => axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/auth\", {\n    email,\n    password\n  }).then(res => {\n    if (nav) {\n      nav(`/list/page${1}/?limit=10&skip=${0}`);\n    }\n\n    localStorage.setItem('token', res.data.token);\n\n    if (localStorage.getItem('token')) {\n      authorizationUser(localStorage.getItem('token')).then(res => {\n        dispatch({\n          type: LOGIN_USER,\n          payload: res.data\n        });\n        let saveUser = JSON.stringify(res.data);\n        localStorage.setItem('user', saveUser);\n      });\n    }\n  }).catch(e => {\n    if (nav) {\n      nav('/login');\n    }\n\n    dispatch({\n      type: ERROR\n    });\n  });\n}\n\nconst setUser = user => {\n  return dispatch => dispatch({\n    type: LOGIN_USER,\n    payload: user\n  });\n};\n\nconst logout = history => {\n  return dispatch => {\n    dispatch({\n      type: LOGOUT\n    });\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    history.push(\"/login\");\n  };\n};\n\nconst loaded = () => {\n  return dispatch => dispatch({\n    type: LOADED\n  });\n};\n\nconst deleteUser = (id, token, history) => {\n  return dispatch => {\n    axios.delete(`https://nodejs-test-api-blog.herokuapp.com/api/v1/users/${id}`, {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => {\n      dispatch({\n        type: LOGOUT\n      });\n      dispatch({\n        type: DELETED,\n        payload: true\n      });\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      setTimeout(() => {\n        history.push(\"/login\");\n        dispatch({\n          type: DELETED,\n          payload: false\n        });\n      }, 500);\n    });\n  };\n};\n\nconst createNewUser = (email, password, name, history) => {\n  return dispatch => axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/users\", {\n    email,\n    password,\n    name\n  }).then(res => setTimeout(() => history.push('/login'), 500)).catch(e => dispatch({\n    type: ERROR\n  }));\n};\n\nexport { loginUser, setUser, logout, loaded, deleteUser, createNewUser };","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/redux/user/actions.js"],"names":["axios","LOGIN_USER","ERROR","LOGOUT","LOADED","DELETED","authorizationUser","token","_res","get","headers","e","console","log","response","loginUser","email","password","nav","dispatch","post","then","res","localStorage","setItem","data","getItem","type","payload","saveUser","JSON","stringify","catch","setUser","user","logout","history","removeItem","push","loaded","deleteUser","id","delete","setTimeout","createNewUser","name"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { LOGIN_USER, ERROR, LOGOUT, LOADED, DELETED } from './types'\n\nconst authorizationUser = (token) => {\n    try {\n        const _res = axios.get('https://nodejs-test-api-blog.herokuapp.com/api/v1/auth/user', { headers: { \"Authorization\": `Bearer ${token}` } })\n        return _res\n    } catch (e) {\n        console.log(e.response);\n    }\n}\n\nfunction loginUser(email, password, nav) {\n    return (dispatch) =>\n        axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/auth\", {\n            email,\n            password,\n        })\n            .then(res => {\n                if (nav) {\n                    nav(`/list/page${1}/?limit=10&skip=${0}`)\n                }\n                localStorage.setItem('token', res.data.token)\n                if (localStorage.getItem('token')) {\n                    authorizationUser(localStorage.getItem('token'))\n                        .then(res => {\n                            dispatch({ type: LOGIN_USER, payload: res.data })\n                            let saveUser = JSON.stringify(res.data)\n                            localStorage.setItem('user', saveUser)\n                        })\n                }\n            })\n            .catch(e => {\n                if (nav) {\n                    nav('/login')\n                }\n                dispatch({ type: ERROR })\n            })\n}\n\nconst setUser = (user) => {\n    return (dispatch) =>\n        dispatch({ type: LOGIN_USER, payload: user })\n}\n\nconst logout = (history) => {\n    return (dispatch) => {\n        dispatch({ type: LOGOUT })\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        history.push(\"/login\");\n    }\n}\n\nconst loaded = () => {\n    return (dispatch) =>\n        dispatch({ type: LOADED })\n}\n\nconst deleteUser = (id, token, history) => {\n    return (dispatch) => {\n        axios.delete(`https://nodejs-test-api-blog.herokuapp.com/api/v1/users/${id}`, { headers: { \"Authorization\": `Bearer ${token}` } })\n            .then(res => {\n                dispatch({ type: LOGOUT })\n                dispatch({ type: DELETED, payload: true })\n                localStorage.removeItem('user');\n                localStorage.removeItem('token');\n                setTimeout(() => {\n                    history.push(\"/login\")\n                    dispatch({ type: DELETED, payload: false })\n                }, 500)\n            })\n    }\n}\n\nconst createNewUser = (email, password, name, history) => {\n    return (dispatch) =>\n        axios.post(\"https://nodejs-test-api-blog.herokuapp.com/api/v1/users\", {\n            email,\n            password,\n            name\n        })\n            .then(res => setTimeout(() => history.push('/login'), 500))\n            .catch(e => dispatch({ type: ERROR }))\n\n}\n\nexport { loginUser, setUser, logout, loaded, deleteUser, createNewUser }"]},"metadata":{},"sourceType":"module"}