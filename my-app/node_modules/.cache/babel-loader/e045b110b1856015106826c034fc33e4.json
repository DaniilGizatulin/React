{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst SimpleSnackbar = ({\n  isDeleted,\n  message\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleShow = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (isDeleted) {\n      handleShow();\n    }\n  }, [isDeleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      open: open,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: message,\n        children: \"Deleted successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SimpleSnackbar, \"/058ULEF5Ocytzn2/IjLFi2zlC0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = SimpleSnackbar;\nexport default SimpleSnackbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"SimpleSnackbar\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/snackbar/snackbar.js"],"names":["React","useEffect","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","SimpleSnackbar","isDeleted","message","classes","open","setOpen","useState","handleShow","handleClose","event","reason","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQD,K;AAIT,MAAME,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAFX;AAD+B,CAAZ,CAAD,CAA5B;;AASA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAAA;;AAC/C,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACDL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GALD;;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,SAAJ,EAAe;AACXM,MAAAA,UAAU;AACb;AACJ,GAJQ,EAIN,CAACN,SAAD,CAJM,CAAT;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACP,IAAxB;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACVe,QAAAA,QAAQ,EAAE,QADA;AAEVC,QAAAA,UAAU,EAAE;AAFF,OADlB;AAKI,MAAA,IAAI,EAAER,IALV;AAMI,MAAA,gBAAgB,EAAE,IANtB;AAOI,MAAA,OAAO,EAAEI,WAPb;AAAA,6BAQI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAEN,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAqBH,CA1CD;;GAAMF,c;UACcN,S;;;MADdM,c;AA4CN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nconst SimpleSnackbar = ({ isDeleted, message }) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleShow = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n    useEffect(() => {\n        if (isDeleted) {\n            handleShow()\n        }\n    }, [isDeleted])\n\n\n    return (\n\n        <div className={classes.root}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                }}\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}>\n                <Alert onClose={handleClose} severity={message}>\n                    Deleted successful!\n        </Alert>\n            </Snackbar>\n            {/*<Alert severity=\"error\">This is an error message!</Alert>\n            <Alert severity=\"warning\">This is a warning message!</Alert>\n            <Alert severity=\"info\">This is an information message!</Alert>\n            <Alert severity=\"success\">This is a success message!</Alert>*/}\n        </div>\n    );\n}\n\nexport default SimpleSnackbar;"]},"metadata":{},"sourceType":"module"}