{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/modalAuthorized/modalAuthorized.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport WithServer from '../../hoc'; //import { addUser, fault } from '../../../actions';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../../redux/user/actions';\nimport LoginForm from '../../login-form';\nimport './modalAuthorized.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalAuthorized = ({\n  showModal,\n  setShowModal\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //useSelector\n  const error = useSelector(state => state.error); //useRef\n\n  const refModalLiked = useRef();\n  const refModolLikedBtn = useRef();\n  const refLoginForm = useRef();\n  const refLoginFormBtn = useRef();\n  const claz = showModal; //useDispatch\n\n  const dispatch = useDispatch(); //useState\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showLogin, setShowLogin] = useState(false); //useHistory\n\n  const customLogin = e => {\n    e.preventDefault(); //Server.loginUser(email, password, nav, dispatch)\n    //    .then(() => setShowLogin(false))\n\n    dispatch(loginUser(email, password));\n    setShowLogin(false);\n  };\n\n  useOnClickOutside(refModalLiked, e => {\n    if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target)) setShowModal('hidden');\n  });\n  useOnClickOutside(refLoginForm, e => {\n    if (refLoginFormBtn.current && !refLoginFormBtn.current.contains(e.target)) setShowLogin(false);\n  });\n\n  function useOnClickOutside(ref, handler) {\n    _s();\n\n    useEffect(() => {\n      const listener = event => {\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    }, [ref, handler]);\n  }\n\n  _s(useOnClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-liked ${claz}`,\n      ref: refModalLiked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-modal-liked\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-liked-title\",\n          children: \"Do u like post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-like\",\n          ref: refModolLikedBtn,\n          onClick: () => setShowModal('hidden'),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-first\",\n        children: \"login first\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-modal-liked\",\n        onClick: () => {\n          setShowLogin(true);\n          setShowModal('hidden');\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `small-login-form ${showLogin ? 'show' : 'hidden'}`,\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        show: refLoginForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ModalAuthorized, \"aMB2gS07ypsSfBYLmVzR0/Rfar4=\", true, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ModalAuthorized;\nexport default WithServer()(ModalAuthorized);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalAuthorized\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/modalAuthorized/modalAuthorized.js"],"names":["React","useRef","useState","useEffect","WithServer","useDispatch","useSelector","loginUser","LoginForm","ModalAuthorized","showModal","setShowModal","error","state","refModalLiked","refModolLikedBtn","refLoginForm","refLoginFormBtn","claz","dispatch","email","setEmail","password","setPassword","showLogin","setShowLogin","customLogin","e","preventDefault","useOnClickOutside","current","contains","target","ref","handler","listener","event","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport WithServer from '../../hoc';\n//import { addUser, fault } from '../../../actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../../redux/user/actions'\n\nimport LoginForm from '../../login-form';\n\nimport './modalAuthorized.sass';\n\nconst ModalAuthorized = ({ showModal, setShowModal }) => {\n    //useSelector\n    const error = useSelector(state => state.error)\n\n    //useRef\n    const refModalLiked = useRef()\n    const refModolLikedBtn = useRef()\n    const refLoginForm = useRef()\n    const refLoginFormBtn = useRef()\n\n    const claz = showModal\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useState\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [showLogin, setShowLogin] = useState(false)\n\n    //useHistory\n\n    const customLogin = e => {\n        e.preventDefault()\n        //Server.loginUser(email, password, nav, dispatch)\n        //    .then(() => setShowLogin(false))\n        dispatch(loginUser(email, password))\n        setShowLogin(false)\n    }\n\n\n    useOnClickOutside(refModalLiked, (e) => {\n        if (refModolLikedBtn.current && !refModolLikedBtn.current.contains(e.target))\n            setShowModal('hidden')\n    });\n\n    useOnClickOutside(refLoginForm, (e) => {\n        if (refLoginFormBtn.current && !refLoginFormBtn.current.contains(e.target))\n            setShowLogin(false)\n    });\n\n    function useOnClickOutside(ref, handler) {\n        useEffect(\n            () => {\n                const listener = (event) => {\n                    if (!ref.current || ref.current.contains(event.target)) {\n                        return;\n                    }\n                    handler(event);\n                };\n                document.addEventListener(\"mousedown\", listener);\n                document.addEventListener(\"touchstart\", listener);\n                return () => {\n                    document.removeEventListener(\"mousedown\", listener);\n                    document.removeEventListener(\"touchstart\", listener);\n                };\n            },\n            [ref, handler]\n        );\n    }\n\n    return (\n        <>\n            <div className={`modal-liked ${claz}`} ref={refModalLiked}>\n                <div className='header-modal-liked'>\n                    <p className='modal-liked-title'>Do u like post?</p>\n                    <button className='close-modal-like' ref={refModolLikedBtn} onClick={() => setShowModal('hidden')}>X</button>\n                </div>\n                <p className='login-first'>login first</p>\n                <hr />\n                <button className='login-modal-liked' onClick={() => {\n                    setShowLogin(true)\n                    setShowModal('hidden')\n                }}>Sign in</button>\n            </div>\n            <div className={`small-login-form ${showLogin ? 'show' : 'hidden'}`}>\n                <LoginForm show={refLoginForm} />\n            </div>\n\n\n            {/*\n            <div className={`small-login-form ${showLogin ? 'show' : 'hidden'}`}>\n                <div className=\"small-modal-authorization\" ref={refLoginForm}>\n                    <button className='close-login' ref={refLoginFormBtn} onClick={() => setShowLogin(false)}>X</button>\n                    <form onSubmit={customLogin}>\n                        <div className=\"form-group\">\n                            <label>Email address</label>\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                aria-describedby=\"emailHelp\"\n                                placeholder=\"Enter email\"\n                                title='Enter your email'\n                                value={email}\n                                onChange={(e) => { setEmail(e.target.value) }} />\n                            <small className=\"form-text text-muted\"></small>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password</label>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                title='Enter your password'\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)} />\n                            <div className=\"auth-group\">\n                                <a className=\"forgotPass authHover\" href=' '>Forgot password</a>\n                                <a className=\"signUp authHover\" href='/signUp'>sign up</a>\n                            </div>\n\n                            <small className=\"form-text text-muted\"></small>\n                        </div>\n                        <button className=\"cancel\" onClick={() => setShowLogin(false)}>Сancel</button>\n                        <input type=\"submit\" className=\"confirm\" value=\"Sign In\" />\n                        {error && <p className='error'>Что-то пошло не так....</p>}\n                    </form>\n                </div>\n            </div >*/}\n        </>\n    )\n}\n\nexport default WithServer()(ModalAuthorized);"]},"metadata":{},"sourceType":"module"}