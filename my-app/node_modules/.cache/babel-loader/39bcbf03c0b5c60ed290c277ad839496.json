{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport SpinnerImage from './spinner-image';\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router';\nimport './editor-profile.sass';\nimport { loaded, deleteUser } from '../../redux/user/actions';\nimport defaultAvatar from '../../image/no-avatar.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorProfile = ({\n  Server\n}) => {\n  _s();\n\n  // Modal \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //useState\n\n\n  const [name, setName] = useState('');\n  const [currentUser, setUser] = useState({});\n  const [loadingImage, setLoadingImage] = useState(false);\n  const [errorName, setError] = useState({\n    error: false,\n    message: ''\n  }); //History\n\n  const history = useHistory(); //useDispatch\n\n  const dispatch = useDispatch(); //useSelector\n\n  const user = useSelector(state => state.userState.user);\n  const loading = useSelector(state => state.userState.loading); //useRef\n\n  const refAvatar = useRef();\n  useEffect(() => {\n    setUser(user);\n  }, [dispatch, user]);\n  const isAuthorized = localStorage.getItem('token');\n\n  const changeName = (id, token, name) => {\n    if (!name) {\n      setError({\n        error: true,\n        message: 'Заполните поле!'\n      });\n      setTimeout(() => setError({\n        error: false,\n        message: ''\n      }), 1700);\n    } else {\n      Server.updateUserName(id, token, name, dispatch).then(res => {\n        setUser({ ...currentUser,\n          name\n        });\n        setName('');\n      });\n    }\n  };\n\n  const updateAvatar = e => {\n    setLoadingImage(true);\n    let formData = new FormData();\n    formData.append('avatar', e.target.files[0]);\n    Server.updateUserAvatar(user._id, isAuthorized, formData, dispatch).then(res => setLoadingImage(false));\n  };\n\n  const delUser = () => {\n    dispatch(deleteUser(user._id, isAuthorized, history));\n    handleClose();\n  }; //if user = true - get avatar\n\n\n  useEffect(() => {\n    if (user._id) {\n      Server.getImage(refAvatar, user.avatar, defaultAvatar, '');\n      dispatch(loaded());\n    }\n  }, [Server, dispatch, user, refAvatar]);\n\n  function checkImage(imageSrc, good, bad) {\n    var img = new Image();\n    img.onload = good;\n    img.onerror = bad;\n    img.src = imageSrc;\n  }\n\n  checkImage(defaultAvatar, function () {\n    console.log(\"good\");\n  }, function () {\n    console.log(\"bad\");\n  });\n\n  if (loading || !user || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-editor-profile\",\n    onClick: () => console.log(user),\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"editor-profile\",\n      onSubmit: e => e.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-avatar\",\n          children: [loadingImage ? /*#__PURE__*/_jsxDEV(SpinnerImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"img\",\n            ref: refAvatar,\n            src: defaultAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"inp-upload\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              id: \"file-upload\",\n              onChange: e => updateAvatar(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"editor-name\",\n          children: currentUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inp-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `form-control ${errorName.error && 'shadow-error'}`,\n          placeholder: \"Change your name\",\n          title: \"Enter your new name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary save\",\n        onClick: () => changeName(user._id, isAuthorized, name),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger remove\",\n        onClick: handleShow,\n        children: \"Delete user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), errorName.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-name\",\n        children: errorName.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalConfirm, {\n      show: show,\n      handleClose: handleClose,\n      remove: delUser,\n      label: 'Are you sure , what you want to delete the user?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditorProfile, \"yFHnxNyRAeqkkHwL3jJ4i/dojCo=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = EditorProfile;\nexport default WithServer()(EditorProfile);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorProfile\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/editor-profile/editor-profile.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","WithServer","Spinner","SpinnerImage","ModalConfirm","useHistory","loaded","deleteUser","defaultAvatar","EditorProfile","Server","show","setShow","handleClose","handleShow","name","setName","currentUser","setUser","loadingImage","setLoadingImage","errorName","setError","error","message","history","dispatch","user","state","userState","loading","refAvatar","isAuthorized","localStorage","getItem","changeName","id","token","setTimeout","updateUserName","then","res","updateAvatar","e","formData","FormData","append","target","files","updateUserAvatar","_id","delUser","getImage","avatar","checkImage","imageSrc","good","bad","img","Image","onload","onerror","src","console","log","preventDefault","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport Spinner from '../spinner';\nimport SpinnerImage from './spinner-image'\nimport ModalConfirm from '../modalConfirm';\nimport { useHistory } from 'react-router';\n\nimport './editor-profile.sass';\n\nimport { loaded, deleteUser } from '../../redux/user/actions'\n\nimport defaultAvatar from '../../image/no-avatar.jpg'\n\nconst EditorProfile = ({ Server }) => {\n\n    // Modal \n    const [show, setShow] = useState(false)\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    //useState\n    const [name, setName] = useState('')\n    const [currentUser, setUser] = useState({})\n    const [loadingImage, setLoadingImage] = useState(false)\n    const [errorName, setError] = useState({ error: false, message: '' })\n\n    //History\n    const history = useHistory()\n\n    //useDispatch\n    const dispatch = useDispatch()\n\n    //useSelector\n    const user = useSelector(state => state.userState.user)\n    const loading = useSelector(state => state.userState.loading)\n\n    //useRef\n    const refAvatar = useRef()\n\n    useEffect(() => {\n        setUser(user)\n    }, [dispatch, user])\n\n    const isAuthorized = localStorage.getItem('token');\n\n    const changeName = (id, token, name) => {\n        if (!name) {\n            setError({ error: true, message: 'Заполните поле!' })\n            setTimeout(() => setError({ error: false, message: '' }), 1700)\n        } else {\n            Server.updateUserName(id, token, name, dispatch)\n                .then(res => {\n                    setUser({ ...currentUser, name })\n                    setName('')\n                })\n        }\n    }\n\n    const updateAvatar = (e) => {\n        setLoadingImage(true)\n        let formData = new FormData()\n        formData.append('avatar', e.target.files[0])\n        Server.updateUserAvatar(user._id, isAuthorized, formData, dispatch)\n            .then((res) => setLoadingImage(false))\n    }\n\n    const delUser = () => {\n        dispatch(deleteUser(user._id, isAuthorized, history))\n        handleClose()\n    }\n\n    //if user = true - get avatar\n    useEffect(() => {\n        if (user._id) {\n            Server.getImage(refAvatar, user.avatar, defaultAvatar, '')\n            dispatch(loaded())\n        }\n    }, [Server, dispatch, user, refAvatar])\n\n    function checkImage(imageSrc, good, bad) {\n        var img = new Image();\n        img.onload = good;\n        img.onerror = bad;\n        img.src = imageSrc;\n    }\n\n    checkImage(defaultAvatar, function () { console.log(\"good\"); }, function () { console.log(\"bad\"); });\n\n    if (loading || !user || !currentUser) {\n        return <Spinner />\n    }\n    return (\n        <div className='container-editor-profile' onClick={() => console.log(user)}>\n            <form className='editor-profile' onSubmit={(e) => e.preventDefault()}>\n                <header className='editor-header'>\n                    <div className='editor-avatar'>\n                        {loadingImage ? <SpinnerImage /> : <img alt='img' ref={refAvatar} src={defaultAvatar} />}\n                        <label htmlFor='file-upload' className='inp-upload' >\n                            <i className=\"fa fa-camera\"></i>\n                            <input\n                                type='file'\n                                accept=\"image/*\"\n                                id=\"file-upload\"\n                                onChange={(e) => updateAvatar(e)}\n                            />\n                        </label>\n                    </div>\n                    <p className='editor-name'>{currentUser.name}</p>\n                </header>\n                <div className='inp-name'>\n                    <label >Name:</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${errorName.error && 'shadow-error'}`}\n                        placeholder=\"Change your name\"\n                        title='Enter your new name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <button className='btn btn-primary save' onClick={() => changeName(user._id, isAuthorized, name)}>Save</button>\n                <button type='button' className='btn btn-danger remove' onClick={handleShow}>Delete user</button>\n                {errorName.error && <p className='error-name'>{errorName.message}</p>}\n            </form>\n            <ModalConfirm show={show} handleClose={handleClose} remove={delUser} label={'Are you sure , what you want to delete the user?'} />\n        </div>\n    )\n}\n\nexport default WithServer()(EditorProfile);"]},"metadata":{},"sourceType":"module"}