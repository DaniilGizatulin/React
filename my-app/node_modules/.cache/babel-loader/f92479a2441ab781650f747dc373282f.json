{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Daniil/FicusTest/my-app/src/components/post-list/post-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized';\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\nimport Error from '../error'; //import { loaded, fault } from '../../actions';\n\nimport { loaded, fault } from '../../redux/posts/actions';\nimport prof from './no-avatar.jpg';\nimport deletProf from './delete-user.jpg';\nimport defaultImage from './default-image.jpg';\nimport './post-list.sass';\nimport LoginForm from '../login-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = ({\n  Server\n}) => {\n  _s();\n\n  const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'; //Hook\n  // useState\n\n  const [post, setPost] = useState({});\n  const [postUser, setPostUser] = useState({});\n  const [date, setDate] = useState('');\n  const [heart, setHeart] = useState(''); //const [modal, setModal] = useState('')\n\n  const [showLike, setShowLike] = useState();\n  const [modal, setModal] = useState(false);\n  const [showLogin, setShowLogin] = useState(false); //useDispatch & useSelector\n\n  const dispatch = useDispatch(); //new\n\n  const loading = useSelector(state => state.postState.loading);\n  const error = useSelector(state => state.postState.error); // useHistory & useParams\n\n  const history = useHistory();\n  const {\n    id\n  } = useParams(); //Ref\n\n  const refHeart = useRef();\n  const refAvatar = useRef();\n  const refImagePost = useRef(); //local\n\n  const isAuthorized = localStorage.getItem('token');\n  const isAuthorizedUser = JSON.parse(localStorage.getItem('user')); //DateCreated\n\n  const dateСorrector = postData => {\n    let date = postData;\n    let newDate = date.replace(/[T-Z]/g, ' ');\n    setDate(newDate.replace(/\\..*/, ''));\n  }; // If an authorized user has a like on a post\n\n\n  function saveLike(likedUser, e) {\n    const idxLike = likedUser.indexOf(isAuthorizedUser._id);\n\n    if (idxLike >= 0) {\n      setShowLike(true);\n    } else {\n      setShowLike(false);\n    }\n  } // Func get post and user\n\n\n  useEffect(() => {\n    Server.getPost(id).then(res => {\n      dispatch(loaded());\n      setPost(res.data);\n      setHeart(res.data.likes.length);\n\n      if (isAuthorized) {\n        saveLike(res.data.likes, refHeart.current);\n      }\n\n      dateСorrector(res.data.dateCreated);\n      Server.getImage(refImagePost, res.data.image, defaultImage, '');\n      Server.getUser(res.data.postedBy).then(res => {\n        Server.getImage(refAvatar, res.data.avatar, defaultAvatar);\n        setPostUser(res.data);\n      });\n    }).catch(() => dispatch(fault())); //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Server, id]); // number of likes on the post\n\n  const postLike = e => {\n    Server.getPost(post._id).then(res => {\n      if (res.data.likes.length !== heart) {\n        setHeart(res.data.likes.length);\n        saveLike(res.data.likes, e);\n      }\n    });\n  }; // func setlike \n\n\n  async function setLike(id, token, e) {\n    await Server.setLikePost(id, token);\n    postLike(e);\n  }\n\n  if (loading || !post) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-post\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item-list\",\n        children: [!postUser.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: prof,\n            className: \"post-user-avatar cntr\",\n            alt: \"prof\",\n            ref: refAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", postUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: deletProf,\n            className: \"post-user-avatar cntr\",\n            alt: \"prof\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"delete-user\",\n            children: \" User has been deleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), isAuthorized && post.postedBy === isAuthorizedUser._id &&\n            /*#__PURE__*/\n            //<button className='btn-update-post ' onClick={() => history.push(`/editor-posts/${id}`)}>\n            //    Edit post\n            //</button>}\n            _jsxDEV(\"button\", {\n              className: \"btn-update-post \",\n              onClick: () => history.push(`/post-page/${id}`),\n              children: \"Edit post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultImage,\n            alt: post.description,\n            className: \"post-image\",\n            ref: refImagePost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"full-text\",\n            children: post.fullText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-post\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: [\"DATE CREATE : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 66\n              }, this), date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interaction\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like\",\n                onClick: () => {\n                  isAuthorized ? setLike(post._id, isAuthorized, refHeart.current) //: setModal('show')\n                  : setModal(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  ref: refHeart,\n                  className: `fa fa-heart ${showLike ? 'liked' : 'offLiked'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), heart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal-liked ${modal ? 'show' : 'hidden'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-modal-liked\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-liked-title\",\n          children: \"Do u like post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-like\",\n          onClick: () => setModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-first\",\n        children: \"login first\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-modal-liked\",\n        onClick: () => {\n          setShowLogin(true);\n          setModal(false);\n        },\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      show: showLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"FVRqeYWAPSm0COArq97thEQ+HN4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory, useParams];\n});\n\n_c = PostList;\nexport default WithServer()(PostList);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/components/post-list/post-list.js"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","WithServer","ModalAuthorized","useHistory","useParams","Spinner","Error","loaded","fault","prof","deletProf","defaultImage","LoginForm","PostList","Server","defaultAvatar","post","setPost","postUser","setPostUser","date","setDate","heart","setHeart","showLike","setShowLike","modal","setModal","showLogin","setShowLogin","dispatch","loading","state","postState","error","history","id","refHeart","refAvatar","refImagePost","isAuthorized","localStorage","getItem","isAuthorizedUser","JSON","parse","dateСorrector","postData","newDate","replace","saveLike","likedUser","e","idxLike","indexOf","_id","getPost","then","res","data","likes","length","current","dateCreated","getImage","image","getUser","postedBy","avatar","catch","postLike","setLike","token","setLikePost","name","title","push","description","fullText"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WithServer from '../hoc';\nimport ModalAuthorized from './modalAuthorized'\nimport { useHistory, useParams } from 'react-router';\nimport Spinner from '../spinner';\nimport Error from '../error';\n//import { loaded, fault } from '../../actions';\nimport { loaded, fault } from '../../redux/posts/actions'\n\nimport prof from './no-avatar.jpg'\nimport deletProf from './delete-user.jpg'\nimport defaultImage from './default-image.jpg'\n\nimport './post-list.sass';\n\nimport LoginForm from '../login-form';\n\nconst PostList = ({ Server }) => {\n    const defaultAvatar = 'https://bizraise.pro/wp-content/uploads/2014/09/no-avatar-300x300.png'\n\n    //Hook\n\n    // useState\n    const [post, setPost] = useState({});\n    const [postUser, setPostUser] = useState({});\n    const [date, setDate] = useState('');\n    const [heart, setHeart] = useState('');\n    //const [modal, setModal] = useState('')\n    const [showLike, setShowLike] = useState();\n\n    const [modal, setModal] = useState(false)\n    const [showLogin, setShowLogin] = useState(false)\n\n    //useDispatch & useSelector\n    const dispatch = useDispatch()\n    //new\n    const loading = useSelector(state => state.postState.loading)\n    const error = useSelector(state => state.postState.error)\n\n    // useHistory & useParams\n    const history = useHistory()\n    const { id } = useParams()\n\n    //Ref\n    const refHeart = useRef()\n    const refAvatar = useRef()\n    const refImagePost = useRef()\n\n    //local\n    const isAuthorized = localStorage.getItem('token');\n    const isAuthorizedUser = JSON.parse(localStorage.getItem('user'))\n\n    //DateCreated\n    const dateСorrector = (postData) => {\n        let date = postData\n        let newDate = date.replace(/[T-Z]/g, ' ')\n        setDate(newDate.replace(/\\..*/, ''))\n    }\n\n    // If an authorized user has a like on a post\n\n    function saveLike(likedUser, e) {\n        const idxLike = likedUser.indexOf(isAuthorizedUser._id)\n        if (idxLike >= 0) {\n            setShowLike(true)\n        } else {\n            setShowLike(false)\n        }\n    }\n\n    // Func get post and user\n    useEffect(() => {\n        Server.getPost(id)\n            .then(res => {\n                dispatch(loaded())\n                setPost(res.data)\n                setHeart(res.data.likes.length)\n                if (isAuthorized) {\n                    saveLike(res.data.likes, refHeart.current)\n                }\n                dateСorrector(res.data.dateCreated)\n                Server.getImage(refImagePost, res.data.image, defaultImage, '')\n                Server.getUser(res.data.postedBy)\n                    .then(res => {\n                        Server.getImage(refAvatar, res.data.avatar, defaultAvatar)\n                        setPostUser(res.data)\n                    })\n            })\n            .catch(() => dispatch(fault()))\n        //eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [Server, id])\n\n\n    // number of likes on the post\n    const postLike = (e) => {\n        Server.getPost(post._id)\n            .then(res => {\n                if (res.data.likes.length !== heart) {\n                    setHeart(res.data.likes.length)\n                    saveLike(res.data.likes, e)\n                }\n            })\n    }\n\n    // func setlike \n    async function setLike(id, token, e) {\n        await Server.setLikePost(id, token)\n        postLike(e)\n    }\n\n    if (loading || !post) {\n        return <Spinner />\n    }\n\n    if (error) {\n        return <Error />\n    }\n\n\n\n    return (\n        <div className=\"item\">\n            <div className=\"item-post\">\n                <div className=\"post-item-list\">\n                    {!postUser.error\n                        ?\n                        <div className=\"info-user\">\n                            <img src={prof} className=\"post-user-avatar cntr\" alt=\"prof\" ref={refAvatar} />\n                            <p> {postUser.name}</p>\n                        </div>\n                        :\n                        <div className=\"info-user\">\n                            <img src={deletProf} className=\"post-user-avatar cntr\" alt=\"prof\" />\n                            <p className=\"delete-user\"> User has been deleted</p>\n                        </div>}\n                    <div className=\"info-post\">\n                        <div className='header-post'>\n                            <p className=\"title\">{post.title}</p>\n\n                            {isAuthorized && post.postedBy === isAuthorizedUser._id &&\n                                //<button className='btn-update-post ' onClick={() => history.push(`/editor-posts/${id}`)}>\n                                //    Edit post\n                                //</button>}\n                                <button className='btn-update-post ' onClick={() => history.push(`/post-page/${id}`)}>\n                                    Edit post\n                            </button>}\n\n                        </div>\n                        <img src={defaultImage} alt={post.description} className=\"post-image\" ref={refImagePost} />\n                        <p>{post.description}</p>\n                        <ul className=\"full-text\">{post.fullText}</ul>\n                        <div className=\"footer-post\">\n                            <span className=\"date\">DATE CREATE : <br />{date}</span>\n                            <div className=\"interaction\">\n                                <button\n                                    className='like'\n                                    onClick={() => {\n                                        isAuthorized\n                                            ? setLike(post._id, isAuthorized, refHeart.current)\n                                            //: setModal('show')\n                                            : setModal(true)\n                                    }\n                                    }><i ref={refHeart} className={`fa fa-heart ${showLike ? 'liked' : 'offLiked'}`}></i></button>{heart}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n            <div className={`modal-liked ${modal ? 'show' : 'hidden'}`}>\n                <div className='header-modal-liked'>\n                    <p className='modal-liked-title'>Do u like post?</p>\n                    <button className='close-modal-like' onClick={() => setModal(false)}>X</button>\n                </div>\n                <p className='login-first'>login first</p>\n                <hr />\n                <button className='login-modal-liked' onClick={() => {\n                    setShowLogin(true)\n                    setModal(false)\n                }}>Sign in</button>\n            </div>\n            <LoginForm show={showLogin} />\n            {/*<ModalAuthorized cl={modal} setModal={setModal} />*/}\n        </div>\n    )\n}\n\n\nexport default WithServer()(PostList);\n\n"]},"metadata":{},"sourceType":"module"}