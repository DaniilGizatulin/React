{"ast":null,"code":"const addUser = user => {\n  return {\n    type: 'NEW_USER',\n    payload: user\n  };\n};\n\nconst login = () => {\n  return {\n    type: 'LOGIN'\n  };\n};\n\nconst logout = () => {\n  return {\n    type: 'LOGOUT'\n  };\n};\n\nconst addToken = token => {\n  return {\n    type: 'ADD_TOKEN',\n    payload: token\n  };\n};\n\nconst removeToken = () => {\n  return {\n    type: 'REMOVE_TOKEN'\n  };\n};\n\nconst someErorr = bool => {\n  return {\n    type: 'ERROR',\n    payload: bool\n  };\n};\n\nconst allUsers = allUsers => {\n  return {\n    type: 'ALL_USERS',\n    payload: allUsers\n  };\n};\n\nexport { addUser, logout, addToken, removeToken, someErorr, allUsers, login };","map":{"version":3,"sources":["/home/ubuntu/Рабочий стол/Daniil/FicusTest/my-app/src/actions/index.js"],"names":["addUser","user","type","payload","login","logout","addToken","token","removeToken","someErorr","bool","allUsers"],"mappings":"AACA,MAAMA,OAAO,GAAIC,IAAD,IAAU;AACtB,SAAO;AACHC,IAAAA,IAAI,EAAE,UADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAKH,CAND;;AAQA,MAAMG,KAAK,GAAG,MAAM;AAChB,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMG,MAAM,GAAG,MAAM;AACjB,SAAO;AACHH,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMI,QAAQ,GAAIC,KAAD,IAAW;AACxB,SAAO;AACHL,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAO;AACHN,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMO,SAAS,GAAIC,IAAD,IAAU;AACxB,SAAO;AACHR,IAAAA,IAAI,EAAE,OADH;AAEHC,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMC,QAAQ,GAAIA,QAAD,IAAc;AAC3B,SAAO;AACHT,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAEQ;AAFN,GAAP;AAIH,CALD;;AAOA,SACIX,OADJ,EAEIK,MAFJ,EAGIC,QAHJ,EAIIE,WAJJ,EAKIC,SALJ,EAMIE,QANJ,EAOIP,KAPJ","sourcesContent":["\nconst addUser = (user) => {\n    return {\n        type: 'NEW_USER',\n        payload: user\n    }\n\n}\n\nconst login = () => {\n    return {\n        type: 'LOGIN'\n    }\n}\n\nconst logout = () => {\n    return {\n        type: 'LOGOUT'\n    }\n}\n\nconst addToken = (token) => {\n    return {\n        type: 'ADD_TOKEN',\n        payload: token\n    }\n}\n\nconst removeToken = () => {\n    return {\n        type: 'REMOVE_TOKEN'\n    }\n}\n\nconst someErorr = (bool) => {\n    return {\n        type: 'ERROR',\n        payload: bool\n    }\n}\n\nconst allUsers = (allUsers) => {\n    return {\n        type: 'ALL_USERS',\n        payload: allUsers\n    }\n}\n\nexport {\n    addUser,\n    logout,\n    addToken,\n    removeToken,\n    someErorr,\n    allUsers,\n    login\n}"]},"metadata":{},"sourceType":"module"}